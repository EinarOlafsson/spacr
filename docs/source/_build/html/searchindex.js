Search.setIndex({"alltitles": {"Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "Module contents": [[2, "module-spacr"]], "Submodules": [[2, "submodules"]], "Welcome to spacr\u2019s documentation!": [[0, "welcome-to-spacr-s-documentation"]], "spacr": [[1, "spacr"]], "spacr package": [[2, "spacr-package"]], "spacr.app_annotate module": [[2, "module-spacr.app_annotate"]], "spacr.app_classify module": [[2, "module-spacr.app_classify"]], "spacr.app_make_masks module": [[2, "module-spacr.app_make_masks"]], "spacr.app_mask module": [[2, "module-spacr.app_mask"]], "spacr.app_measure module": [[2, "module-spacr.app_measure"]], "spacr.app_sequencing module": [[2, "module-spacr.app_sequencing"]], "spacr.app_umap module": [[2, "module-spacr.app_umap"]], "spacr.chris module": [[2, "spacr-chris-module"]], "spacr.core module": [[2, "module-spacr.core"]], "spacr.deep_spacr module": [[2, "module-spacr.deep_spacr"]], "spacr.graph_learning module": [[2, "module-spacr.graph_learning"]], "spacr.gui module": [[2, "module-spacr.gui"]], "spacr.gui_core module": [[2, "module-spacr.gui_core"]], "spacr.gui_elements module": [[2, "module-spacr.gui_elements"]], "spacr.gui_utils module": [[2, "module-spacr.gui_utils"]], "spacr.io module": [[2, "module-spacr.io"]], "spacr.logger module": [[2, "module-spacr.logger"]], "spacr.measure module": [[2, "module-spacr.measure"]], "spacr.plot module": [[2, "module-spacr.plot"]], "spacr.sequencing module": [[2, "module-spacr.sequencing"]], "spacr.settings module": [[2, "module-spacr.settings"]], "spacr.sim module": [[2, "module-spacr.sim"]], "spacr.sim_app module": [[2, "module-spacr.sim_app"]], "spacr.timelapse module": [[2, "module-spacr.timelapse"]], "spacr.utils module": [[2, "module-spacr.utils"]], "spacr.version module": [[2, "module-spacr.version"]]}, "docnames": ["index", "modules", "spacr"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["index.rst", "modules.rst", "spacr.rst"], "indexentries": {"__iter__() (spacr.io.combineloaders method)": [[2, "spacr.io.CombineLoaders.__iter__", false]], "__next__() (spacr.io.combineloaders method)": [[2, "spacr.io.CombineLoaders.__next__", false]], "add() (spacr.gui_elements.spacrcontainer method)": [[2, "spacr.gui_elements.spacrContainer.add", false]], "add_colored_border() (spacr.gui_elements.annotateapp method)": [[2, "spacr.gui_elements.AnnotateApp.add_colored_border", false]], "add_images_to_tar() (in module spacr.utils)": [[2, "spacr.utils.add_images_to_tar", false]], "adjust_cell_masks() (in module spacr.utils)": [[2, "spacr.utils.adjust_cell_masks", false]], "all_elements_match() (in module spacr.core)": [[2, "spacr.core.all_elements_match", false]], "analyze_associations() (in module spacr.graph_learning)": [[2, "spacr.graph_learning.analyze_associations", false]], "analyze_calcium_oscillations() (in module spacr.timelapse)": [[2, "spacr.timelapse.analyze_calcium_oscillations", false]], "analyze_data_reg() (in module spacr.core)": [[2, "spacr.core.analyze_data_reg", false]], "analyze_plaques() (in module spacr.core)": [[2, "spacr.core.analyze_plaques", false]], "analyze_recruitment() (in module spacr.core)": [[2, "spacr.core.analyze_recruitment", false]], "animate_movement() (spacr.gui_elements.spacrswitch method)": [[2, "spacr.gui_elements.spacrSwitch.animate_movement", false]], "animate_switch() (spacr.gui_elements.spacrswitch method)": [[2, "spacr.gui_elements.spacrSwitch.animate_switch", false]], "animate_zoom() (spacr.gui_elements.spacrbutton method)": [[2, "spacr.gui_elements.spacrButton.animate_zoom", false]], "annotate() (in module spacr.gui_utils)": [[2, "spacr.gui_utils.annotate", false]], "annotate_app() (in module spacr.gui_utils)": [[2, "spacr.gui_utils.annotate_app", false]], "annotate_conditions() (in module spacr.utils)": [[2, "spacr.utils.annotate_conditions", false]], "annotate_predictions() (in module spacr.utils)": [[2, "spacr.utils.annotate_predictions", false]], "annotate_results() (in module spacr.core)": [[2, "spacr.core.annotate_results", false]], "annotate_with_image_refs() (in module spacr.gui_utils)": [[2, "spacr.gui_utils.annotate_with_image_refs", false]], "annotateapp (class in spacr.gui_elements)": [[2, "spacr.gui_elements.AnnotateApp", false]], "append_database() (in module spacr.sim)": [[2, "spacr.sim.append_database", false]], "apply_brush() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.apply_brush", false]], "apply_brush_release() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.apply_brush_release", false]], "apply_dividing_line() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.apply_dividing_line", false]], "apply_dropout_rate() (spacr.utils.torchmodel method)": [[2, "spacr.utils.TorchModel.apply_dropout_rate", false]], "apply_magic_wand() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.apply_magic_wand", false]], "apply_mask() (in module spacr.utils)": [[2, "spacr.utils.apply_mask", false]], "apply_model() (in module spacr.core)": [[2, "spacr.core.apply_model", false]], "apply_model() (in module spacr.graph_learning)": [[2, "spacr.graph_learning.apply_model", false]], "apply_model_to_tar() (in module spacr.core)": [[2, "spacr.core.apply_model_to_tar", false]], "apply_model_to_tar_v1() (in module spacr.core)": [[2, "spacr.core.apply_model_to_tar_v1", false]], "apply_normalization() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.apply_normalization", false]], "apply_transformation() (in module spacr.sequencing)": [[2, "spacr.sequencing.apply_transformation", false]], "apply_zoom_on_enter() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.apply_zoom_on_enter", false]], "assign_colors() (in module spacr.utils)": [[2, "spacr.utils.assign_colors", false]], "augment_classes() (in module spacr.utils)": [[2, "spacr.utils.augment_classes", false]], "augment_dataset() (in module spacr.utils)": [[2, "spacr.utils.augment_dataset", false]], "augment_image() (in module spacr.utils)": [[2, "spacr.utils.augment_image", false]], "augment_images() (in module spacr.utils)": [[2, "spacr.utils.augment_images", false]], "augment_single_image() (in module spacr.utils)": [[2, "spacr.utils.augment_single_image", false]], "boundary_f1_score() (in module spacr.utils)": [[2, "spacr.utils.boundary_f1_score", false]], "cache (class in spacr.utils)": [[2, "spacr.utils.Cache", false]], "cache (spacr.utils.cache attribute)": [[2, "spacr.utils.Cache.cache", false]], "calculate_grid_dimensions() (spacr.gui_elements.annotateapp method)": [[2, "spacr.gui_elements.AnnotateApp.calculate_grid_dimensions", false]], "calculate_iou() (in module spacr.utils)": [[2, "spacr.utils.calculate_iou", false]], "calculate_loss() (in module spacr.utils)": [[2, "spacr.utils.calculate_loss", false]], "calculate_p_values() (in module spacr.sequencing)": [[2, "spacr.sequencing.calculate_p_values", false]], "calculate_permutation_importance() (in module spacr.sim)": [[2, "spacr.sim.calculate_permutation_importance", false]], "cancel_after_tasks() (in module spacr.gui_utils)": [[2, "spacr.gui_utils.cancel_after_tasks", false]], "canvas_to_image() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.canvas_to_image", false]], "cell_level_roc_auc() (in module spacr.sim)": [[2, "spacr.sim.cell_level_roc_auc", false]], "check_cellpose_models() (in module spacr.core)": [[2, "spacr.core.check_cellpose_models", false]], "check_index() (in module spacr.core)": [[2, "spacr.core.check_index", false]], "check_mask_folder() (in module spacr.utils)": [[2, "spacr.utils.check_mask_folder", false]], "check_multicollinearity() (in module spacr.utils)": [[2, "spacr.utils.check_multicollinearity", false]], "check_normality() (in module spacr.sequencing)": [[2, "spacr.sequencing.check_normality", false]], "check_normality() (in module spacr.utils)": [[2, "spacr.utils.check_normality", false]], "check_overlap() (in module spacr.utils)": [[2, "spacr.utils.check_overlap", false]], "check_settings() (in module spacr.settings)": [[2, "spacr.settings.check_settings", false]], "choose_model() (in module spacr.utils)": [[2, "spacr.utils.choose_model", false]], "class_visualization() (in module spacr.utils)": [[2, "spacr.utils.class_visualization", false]], "classification_metrics() (in module spacr.utils)": [[2, "spacr.utils.classification_metrics", false]], "classifier() (in module spacr.sim)": [[2, "spacr.sim.classifier", false]], "classifier_v2() (in module spacr.sim)": [[2, "spacr.sim.classifier_v2", false]], "clean_controls() (in module spacr.sequencing)": [[2, "spacr.sequencing.clean_controls", false]], "clear_description() (spacr.gui.mainapp method)": [[2, "spacr.gui.MainApp.clear_description", false]], "clear_description() (spacr.gui_elements.spacrbutton method)": [[2, "spacr.gui_elements.spacrButton.clear_description", false]], "clear_frame() (spacr.gui.mainapp method)": [[2, "spacr.gui.MainApp.clear_frame", false]], "clear_objects() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.clear_objects", false]], "close_dropdown() (spacr.gui_elements.spacrcombo method)": [[2, "spacr.gui_elements.spacrCombo.close_dropdown", false]], "close_file_descriptors() (in module spacr.utils)": [[2, "spacr.utils.close_file_descriptors", false]], "close_multiprocessing_processes() (in module spacr.utils)": [[2, "spacr.utils.close_multiprocessing_processes", false]], "cluster_feature_analysis() (in module spacr.utils)": [[2, "spacr.utils.cluster_feature_analysis", false]], "combine_results() (in module spacr.utils)": [[2, "spacr.utils.combine_results", false]], "combineddataset (class in spacr.io)": [[2, "spacr.io.CombinedDataset", false]], "combineloaders (class in spacr.io)": [[2, "spacr.io.CombineLoaders", false]], "compare_cellpose_masks() (in module spacr.core)": [[2, "spacr.core.compare_cellpose_masks", false]], "compare_mask() (in module spacr.core)": [[2, "spacr.core.compare_mask", false]], "complement() (in module spacr.sequencing)": [[2, "spacr.sequencing.complement", false]], "compute_ap_over_iou_thresholds() (in module spacr.utils)": [[2, "spacr.utils.compute_ap_over_iou_thresholds", false]], "compute_average_precision() (in module spacr.utils)": [[2, "spacr.utils.compute_average_precision", false]], "compute_irm_penalty() (in module spacr.utils)": [[2, "spacr.utils.compute_irm_penalty", false]], "compute_precision_recall() (in module spacr.sim)": [[2, "spacr.sim.compute_precision_recall", false]], "compute_roc_auc() (in module spacr.sim)": [[2, "spacr.sim.compute_roc_auc", false]], "compute_saliency_maps() (spacr.utils.saliencymapgenerator method)": [[2, "spacr.utils.SaliencyMapGenerator.compute_saliency_maps", false]], "compute_segmentation_ap() (in module spacr.utils)": [[2, "spacr.utils.compute_segmentation_ap", false]], "compute_smooth_grad() (spacr.deep_spacr.smoothgrad method)": [[2, "spacr.deep_spacr.SmoothGrad.compute_smooth_grad", false]], "concatenate_and_normalize() (in module spacr.io)": [[2, "spacr.io.concatenate_and_normalize", false]], "consensus_sequence() (in module spacr.sequencing)": [[2, "spacr.sequencing.consensus_sequence", false]], "consensus_sequence_v1() (in module spacr.sequencing)": [[2, "spacr.sequencing.consensus_sequence_v1", false]], "construct_well_graph() (in module spacr.graph_learning)": [[2, "spacr.graph_learning.construct_well_graph", false]], "convert_and_relabel_masks() (in module spacr.utils)": [[2, "spacr.utils.convert_and_relabel_masks", false]], "convert_numpy_to_tiff() (in module spacr.io)": [[2, "spacr.io.convert_numpy_to_tiff", false]], "convert_settings_dict_for_gui() (in module spacr.gui_utils)": [[2, "spacr.gui_utils.convert_settings_dict_for_gui", false]], "correct_masks() (in module spacr.utils)": [[2, "spacr.utils.correct_masks", false]], "correct_paths() (in module spacr.utils)": [[2, "spacr.utils.correct_paths", false]], "count_mismatches() (in module spacr.sequencing)": [[2, "spacr.sequencing.count_mismatches", false]], "count_reads_in_fastq() (in module spacr.utils)": [[2, "spacr.utils.count_reads_in_fastq", false]], "create_circular_mask() (in module spacr.utils)": [[2, "spacr.utils.create_circular_mask", false]], "create_database() (in module spacr.sim)": [[2, "spacr.sim.create_database", false]], "create_graphs_for_wells() (in module spacr.graph_learning)": [[2, "spacr.graph_learning.create_graphs_for_wells", false]], "create_input_field() (in module spacr.gui_utils)": [[2, "spacr.gui_utils.create_input_field", false]], "create_menu_bar() (in module spacr.gui_elements)": [[2, "spacr.gui_elements.create_menu_bar", false]], "create_rounded_rectangle() (spacr.gui_elements.spacrbutton method)": [[2, "spacr.gui_elements.spacrButton.create_rounded_rectangle", false]], "create_rounded_rectangle() (spacr.gui_elements.spacrdropdownmenu method)": [[2, "spacr.gui_elements.spacrDropdownMenu.create_rounded_rectangle", false]], "create_rounded_rectangle() (spacr.gui_elements.spacrswitch method)": [[2, "spacr.gui_elements.spacrSwitch.create_rounded_rectangle", false]], "create_sash() (spacr.gui_elements.spacrcontainer method)": [[2, "spacr.gui_elements.spacrContainer.create_sash", false]], "create_startup_screen() (spacr.gui.mainapp method)": [[2, "spacr.gui.MainApp.create_startup_screen", false]], "create_widgets() (spacr.gui.mainapp method)": [[2, "spacr.gui.MainApp.create_widgets", false]], "custom_forward() (spacr.utils.customcellclassifier method)": [[2, "spacr.utils.CustomCellClassifier.custom_forward", false]], "custom_forward() (spacr.utils.multiscaleblockwithattention method)": [[2, "spacr.utils.MultiScaleBlockWithAttention.custom_forward", false]], "customcellclassifier (class in spacr.utils)": [[2, "spacr.utils.CustomCellClassifier", false]], "decoder (class in spacr.graph_learning)": [[2, "spacr.graph_learning.Decoder", false]], "deep_spacr() (in module spacr.deep_spacr)": [[2, "spacr.deep_spacr.deep_spacr", false]], "deep_spacr_defaults() (in module spacr.settings)": [[2, "spacr.settings.deep_spacr_defaults", false]], "delete_empty_subdirectories() (in module spacr.io)": [[2, "spacr.io.delete_empty_subdirectories", false]], "delete_folder() (in module spacr.utils)": [[2, "spacr.utils.delete_folder", false]], "dice_coefficient() (in module spacr.utils)": [[2, "spacr.utils.dice_coefficient", false]], "display_image() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.display_image", false]], "display_zoomed_image() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.display_zoomed_image", false]], "dist_gen() (in module spacr.sim)": [[2, "spacr.sim.dist_gen", false]], "download_dataset() (in module spacr.gui_utils)": [[2, "spacr.gui_utils.download_dataset", false]], "download_hug_dataset() (in module spacr.gui_utils)": [[2, "spacr.gui_utils.download_hug_dataset", false]], "draw() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.draw", false]], "draw_on_zoomed_mask() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.draw_on_zoomed_mask", false]], "draw_rounded_rectangle() (spacr.gui_elements.spacrcombo method)": [[2, "spacr.gui_elements.spacrCombo.draw_rounded_rectangle", false]], "draw_rounded_rectangle() (spacr.gui_elements.spacrentry method)": [[2, "spacr.gui_elements.spacrEntry.draw_rounded_rectangle", false]], "draw_rounded_square() (spacr.gui_elements.spacrcheck method)": [[2, "spacr.gui_elements.spacrCheck.draw_rounded_square", false]], "earlyfusion (class in spacr.utils)": [[2, "spacr.utils.EarlyFusion", false]], "encoder (class in spacr.graph_learning)": [[2, "spacr.graph_learning.Encoder", false]], "ensure_after_tasks() (in module spacr.gui_utils)": [[2, "spacr.gui_utils.ensure_after_tasks", false]], "equalize_lengths() (in module spacr.sequencing)": [[2, "spacr.sequencing.equalize_lengths", false]], "erase_brush() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.erase_brush", false]], "erase_brush_release() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.erase_brush_release", false]], "erase_object() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.erase_object", false]], "evaluate_model_core() (in module spacr.deep_spacr)": [[2, "spacr.deep_spacr.evaluate_model_core", false]], "evaluate_model_performance() (in module spacr.deep_spacr)": [[2, "spacr.deep_spacr.evaluate_model_performance", false]], "exponential_decay() (in module spacr.timelapse)": [[2, "spacr.timelapse.exponential_decay", false]], "extract_barcodes_from_fastq() (in module spacr.sequencing)": [[2, "spacr.sequencing.extract_barcodes_from_fastq", false]], "extract_barcodes_from_fastq_v1() (in module spacr.sequencing)": [[2, "spacr.sequencing.extract_barcodes_from_fastq_v1", false]], "extract_barecodes() (in module spacr.sequencing)": [[2, "spacr.sequencing.extract_barecodes", false]], "extract_boundaries() (in module spacr.utils)": [[2, "spacr.utils.extract_boundaries", false]], "extract_features() (in module spacr.utils)": [[2, "spacr.utils.extract_features", false]], "extract_metadata_from_path() (in module spacr.graph_learning)": [[2, "spacr.graph_learning.extract_metadata_from_path", false]], "file_len() (in module spacr.sequencing)": [[2, "spacr.sequencing.file_len", false]], "filepaths_to_database() (in module spacr.measure)": [[2, "spacr.measure.filepaths_to_database", false]], "fill_objects() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.fill_objects", false]], "filter_channels() (spacr.gui_elements.annotateapp method)": [[2, "spacr.gui_elements.AnnotateApp.filter_channels", false]], "filter_columns() (in module spacr.utils)": [[2, "spacr.utils.filter_columns", false]], "filter_dataframe_features() (in module spacr.utils)": [[2, "spacr.utils.filter_dataframe_features", false]], "find_grna() (in module spacr.sequencing)": [[2, "spacr.sequencing.find_grna", false]], "find_non_overlapping_position() (in module spacr.utils)": [[2, "spacr.utils.find_non_overlapping_position", false]], "find_optimal_threshold() (in module spacr.core)": [[2, "spacr.core.find_optimal_threshold", false]], "finish_dividing_line() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.finish_dividing_line", false]], "finish_drawing() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.finish_drawing", false]], "finish_drawing_if_active() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.finish_drawing_if_active", false]], "fishers_odds() (in module spacr.utils)": [[2, "spacr.utils.fishers_odds", false]], "flush() (spacr.gui_utils.writetoqueue method)": [[2, "spacr.gui_utils.WriteToQueue.flush", false]], "focallosswithlogits (class in spacr.utils)": [[2, "spacr.utils.FocalLossWithLogits", false]], "forward() (spacr.graph_learning.decoder method)": [[2, "spacr.graph_learning.Decoder.forward", false]], "forward() (spacr.graph_learning.encoder method)": [[2, "spacr.graph_learning.Encoder.forward", false]], "forward() (spacr.graph_learning.graphtransformer method)": [[2, "spacr.graph_learning.GraphTransformer.forward", false]], "forward() (spacr.utils.customcellclassifier method)": [[2, "spacr.utils.CustomCellClassifier.forward", false]], "forward() (spacr.utils.earlyfusion method)": [[2, "spacr.utils.EarlyFusion.forward", false]], "forward() (spacr.utils.focallosswithlogits method)": [[2, "spacr.utils.FocalLossWithLogits.forward", false]], "forward() (spacr.utils.gradcam method)": [[2, "spacr.utils.GradCAM.forward", false]], "forward() (spacr.utils.multiscaleblockwithattention method)": [[2, "spacr.utils.MultiScaleBlockWithAttention.forward", false]], "forward() (spacr.utils.resnet method)": [[2, "spacr.utils.ResNet.forward", false]], "forward() (spacr.utils.scaleddotproductattention method)": [[2, "spacr.utils.ScaledDotProductAttention.forward", false]], "forward() (spacr.utils.selfattention method)": [[2, "spacr.utils.SelfAttention.forward", false]], "forward() (spacr.utils.spatialattention method)": [[2, "spacr.utils.SpatialAttention.forward", false]], "forward() (spacr.utils.torchmodel method)": [[2, "spacr.utils.TorchModel.forward", false]], "function_gui_wrapper() (in module spacr.gui_utils)": [[2, "spacr.gui_utils.function_gui_wrapper", false]], "generate_annotate_fields() (in module spacr.gui_utils)": [[2, "spacr.gui_utils.generate_annotate_fields", false]], "generate_barecode_mapping() (in module spacr.sequencing)": [[2, "spacr.sequencing.generate_barecode_mapping", false]], "generate_cellpose_masks() (in module spacr.core)": [[2, "spacr.core.generate_cellpose_masks", false]], "generate_cellpose_train_set() (in module spacr.measure)": [[2, "spacr.measure.generate_cellpose_train_set", false]], "generate_cellpose_train_test() (in module spacr.io)": [[2, "spacr.io.generate_cellpose_train_test", false]], "generate_colors() (in module spacr.utils)": [[2, "spacr.utils.generate_colors", false]], "generate_dataset() (in module spacr.core)": [[2, "spacr.core.generate_dataset", false]], "generate_dataset_from_lists() (in module spacr.core)": [[2, "spacr.core.generate_dataset_from_lists", false]], "generate_dataset_v1() (in module spacr.core)": [[2, "spacr.core.generate_dataset_v1", false]], "generate_dependent_variable() (in module spacr.utils)": [[2, "spacr.utils.generate_dependent_variable", false]], "generate_fields() (in module spacr.settings)": [[2, "spacr.settings.generate_fields", false]], "generate_floats() (in module spacr.sim)": [[2, "spacr.sim.generate_floats", false]], "generate_fraction_map() (in module spacr.sequencing)": [[2, "spacr.sequencing.generate_fraction_map", false]], "generate_fraction_map() (in module spacr.utils)": [[2, "spacr.utils.generate_fraction_map", false]], "generate_gene_list() (in module spacr.sim)": [[2, "spacr.sim.generate_gene_list", false]], "generate_gene_weights() (in module spacr.sim)": [[2, "spacr.sim.generate_gene_weights", false]], "generate_image_umap() (in module spacr.core)": [[2, "spacr.core.generate_image_umap", false]], "generate_integers() (in module spacr.sim)": [[2, "spacr.sim.generate_integers", false]], "generate_integrated_gradients() (spacr.utils.integratedgradients method)": [[2, "spacr.utils.IntegratedGradients.generate_integrated_gradients", false]], "generate_loaders() (in module spacr.core)": [[2, "spacr.core.generate_loaders", false]], "generate_mask_random_cmap() (in module spacr.plot)": [[2, "spacr.plot.generate_mask_random_cmap", false]], "generate_masks_from_imgs() (in module spacr.core)": [[2, "spacr.core.generate_masks_from_imgs", false]], "generate_ml_scores() (in module spacr.core)": [[2, "spacr.core.generate_ml_scores", false]], "generate_paramiters() (in module spacr.sim)": [[2, "spacr.sim.generate_paramiters", false]], "generate_plate_heatmap() (in module spacr.plot)": [[2, "spacr.plot.generate_plate_heatmap", false]], "generate_plate_heatmap() (in module spacr.sequencing)": [[2, "spacr.sequencing.generate_plate_heatmap", false]], "generate_plate_map() (in module spacr.sim)": [[2, "spacr.sim.generate_plate_map", false]], "generate_power_law_distribution() (in module spacr.sim)": [[2, "spacr.sim.generate_power_law_distribution", false]], "generate_shap_summary_plot() (in module spacr.sim)": [[2, "spacr.sim.generate_shap_summary_plot", false]], "generate_synthetic_grna_data() (in module spacr.graph_learning)": [[2, "spacr.graph_learning.generate_synthetic_grna_data", false]], "generate_training_data_file_list() (in module spacr.core)": [[2, "spacr.core.generate_training_data_file_list", false]], "generate_training_dataset() (in module spacr.core)": [[2, "spacr.core.generate_training_dataset", false]], "generate_training_dataset_v1() (in module spacr.core)": [[2, "spacr.core.generate_training_dataset_v1", false]], "generate_well_score() (in module spacr.sim)": [[2, "spacr.sim.generate_well_score", false]], "get() (spacr.gui_elements.spacrswitch method)": [[2, "spacr.gui_elements.spacrSwitch.get", false]], "get() (spacr.utils.cache method)": [[2, "spacr.utils.Cache.get", false]], "get_analyze_reads_default_settings() (in module spacr.settings)": [[2, "spacr.settings.get_analyze_reads_default_settings", false]], "get_analyze_recruitment_default_settings() (in module spacr.settings)": [[2, "spacr.settings.get_analyze_recruitment_default_settings", false]], "get_check_cellpose_models_default_settings() (in module spacr.settings)": [[2, "spacr.settings.get_check_cellpose_models_default_settings", false]], "get_components() (in module spacr.measure)": [[2, "spacr.measure.get_components", false]], "get_db_paths() (in module spacr.utils)": [[2, "spacr.utils.get_db_paths", false]], "get_files_from_dir() (in module spacr.utils)": [[2, "spacr.utils.get_files_from_dir", false]], "get_font() (spacr.gui_elements.spacrfont method)": [[2, "spacr.gui_elements.spacrFont.get_font", false]], "get_font_path() (spacr.gui_elements.spacrfont method)": [[2, "spacr.gui_elements.spacrFont.get_font_path", false]], "get_icon_path() (spacr.gui_elements.spacrbutton method)": [[2, "spacr.gui_elements.spacrButton.get_icon_path", false]], "get_identify_masks_finetune_default_settings() (in module spacr.settings)": [[2, "spacr.settings.get_identify_masks_finetune_default_settings", false]], "get_map_barcodes_default_settings() (in module spacr.settings)": [[2, "spacr.settings.get_map_barcodes_default_settings", false]], "get_measure_crop_settings() (in module spacr.settings)": [[2, "spacr.settings.get_measure_crop_settings", false]], "get_ml_results_paths() (in module spacr.utils)": [[2, "spacr.utils.get_ml_results_paths", false]], "get_num_ftrs() (spacr.utils.torchmodel method)": [[2, "spacr.utils.TorchModel.get_num_ftrs", false]], "get_object_counts() (in module spacr.measure)": [[2, "spacr.measure.get_object_counts", false]], "get_on_image_click() (spacr.gui_elements.annotateapp method)": [[2, "spacr.gui_elements.AnnotateApp.get_on_image_click", false]], "get_optimum_threshold() (in module spacr.sim)": [[2, "spacr.sim.get_optimum_threshold", false]], "get_paths_from_db() (in module spacr.utils)": [[2, "spacr.utils.get_paths_from_db", false]], "get_perform_regression_default_settings() (in module spacr.settings)": [[2, "spacr.settings.get_perform_regression_default_settings", false]], "get_plate() (spacr.io.mydataset method)": [[2, "spacr.io.MyDataset.get_plate", false]], "get_read_data() (in module spacr.sequencing)": [[2, "spacr.sequencing.get_read_data", false]], "get_scaling_factors() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.get_scaling_factors", false]], "get_sequence_data() (in module spacr.sequencing)": [[2, "spacr.sequencing.get_sequence_data", false]], "get_sequencing_paths() (in module spacr.utils)": [[2, "spacr.utils.get_sequencing_paths", false]], "get_submodules() (in module spacr.utils)": [[2, "spacr.utils.get_submodules", false]], "get_top_two_matches() (in module spacr.sequencing)": [[2, "spacr.sequencing.get_top_two_matches", false]], "get_train_cellpose_default_settings() (in module spacr.settings)": [[2, "spacr.settings.get_train_cellpose_default_settings", false]], "get_weight_choice() (spacr.utils.torchmodel method)": [[2, "spacr.utils.TorchModel.get_weight_choice", false]], "gini() (in module spacr.sim)": [[2, "spacr.sim.gini", false]], "gini_coefficient() (in module spacr.sim)": [[2, "spacr.sim.gini_coefficient", false]], "gini_gene_well() (in module spacr.sim)": [[2, "spacr.sim.gini_gene_well", false]], "gradcam (class in spacr.utils)": [[2, "spacr.utils.GradCAM", false]], "graphtransformer (class in spacr.graph_learning)": [[2, "spacr.graph_learning.GraphTransformer", false]], "grna_plate_heatmap() (in module spacr.sequencing)": [[2, "spacr.sequencing.grna_plate_heatmap", false]], "gui_app() (in module spacr.gui)": [[2, "spacr.gui.gui_app", false]], "hide_all_settings() (in module spacr.gui_utils)": [[2, "spacr.gui_utils.hide_all_settings", false]], "hide_tooltip() (spacr.gui_elements.spacrtooltip method)": [[2, "spacr.gui_elements.spacrToolTip.hide_tooltip", false]], "identify_masks_finetune() (in module spacr.core)": [[2, "spacr.core.identify_masks_finetune", false]], "image_to_canvas() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.image_to_canvas", false]], "img_list_to_grid() (in module spacr.measure)": [[2, "spacr.measure.img_list_to_grid", false]], "import_settings() (in module spacr.gui_core)": [[2, "spacr.gui_core.import_settings", false]], "infected_vs_noninfected() (in module spacr.timelapse)": [[2, "spacr.timelapse.infected_vs_noninfected", false]], "init_base_model() (spacr.utils.torchmodel method)": [[2, "spacr.utils.TorchModel.init_base_model", false]], "init_spacr_classifier() (spacr.utils.torchmodel method)": [[2, "spacr.utils.TorchModel.init_spacr_classifier", false]], "initialize_base() (spacr.utils.resnet method)": [[2, "spacr.utils.ResNet.initialize_base", false]], "initialize_flags() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.initialize_flags", false]], "initiate_abort() (in module spacr.gui_core)": [[2, "spacr.gui_core.initiate_abort", false]], "initiate_annotation_app() (in module spacr.app_annotate)": [[2, "spacr.app_annotate.initiate_annotation_app", false]], "initiate_counter() (in module spacr.utils)": [[2, "spacr.utils.initiate_counter", false]], "initiate_make_mask_app() (in module spacr.app_make_masks)": [[2, "spacr.app_make_masks.initiate_make_mask_app", false]], "initiate_root() (in module spacr.gui_core)": [[2, "spacr.gui_core.initiate_root", false]], "integratedgradients (class in spacr.utils)": [[2, "spacr.utils.IntegratedGradients", false]], "invert_image() (in module spacr.utils)": [[2, "spacr.utils.invert_image", false]], "invert_mask() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.invert_mask", false]], "is_list_of_lists() (in module spacr.utils)": [[2, "spacr.utils.is_list_of_lists", false]], "is_multiprocessing_process() (in module spacr.utils)": [[2, "spacr.utils.is_multiprocessing_process", false]], "jaccard_index() (in module spacr.utils)": [[2, "spacr.utils.jaccard_index", false]], "jitterplot_by_annotation() (in module spacr.core)": [[2, "spacr.core.jitterplot_by_annotation", false]], "join_measurments_and_annotation() (in module spacr.core)": [[2, "spacr.core.join_measurments_and_annotation", false]], "lasso_reg() (in module spacr.utils)": [[2, "spacr.utils.lasso_reg", false]], "load_app() (in module spacr.gui_utils)": [[2, "spacr.gui_utils.load_app", false]], "load_app() (spacr.gui.mainapp method)": [[2, "spacr.gui.MainApp.load_app", false]], "load_first_image() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.load_first_image", false]], "load_font() (spacr.gui_elements.spacrfont method)": [[2, "spacr.gui_elements.spacrFont.load_font", false]], "load_icon() (spacr.gui_elements.spacrbutton method)": [[2, "spacr.gui_elements.spacrButton.load_icon", false]], "load_image() (in module spacr.utils)": [[2, "spacr.utils.load_image", false]], "load_image() (spacr.io.mydataset method)": [[2, "spacr.io.MyDataset.load_image", false]], "load_image() (spacr.io.noclassdataset method)": [[2, "spacr.io.NoClassDataset.load_image", false]], "load_image_and_mask() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.load_image_and_mask", false]], "load_image_paths() (in module spacr.utils)": [[2, "spacr.utils.load_image_paths", false]], "load_images() (in module spacr.graph_learning)": [[2, "spacr.graph_learning.load_images", false]], "load_images() (spacr.gui_elements.annotateapp method)": [[2, "spacr.gui_elements.AnnotateApp.load_images", false]], "load_mnist_data() (in module spacr.graph_learning)": [[2, "spacr.graph_learning.load_mnist_data", false]], "load_next_app() (in module spacr.gui_utils)": [[2, "spacr.gui_utils.load_next_app", false]], "load_single_image() (spacr.gui_elements.annotateapp method)": [[2, "spacr.gui_elements.AnnotateApp.load_single_image", false]], "loader_iters (spacr.io.combineloaders attribute)": [[2, "spacr.io.CombineLoaders.loader_iters", false]], "log_function_call() (in module spacr.logger)": [[2, "spacr.logger.log_function_call", false]], "magic_wand_normal() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.magic_wand_normal", false]], "magic_wand_zoomed() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.magic_wand_zoomed", false]], "main_thread_update_function() (in module spacr.gui_utils)": [[2, "spacr.gui_utils.main_thread_update_function", false]], "mainapp (class in spacr.gui)": [[2, "spacr.gui.MainApp", false]], "map_condition() (in module spacr.core)": [[2, "spacr.core.map_condition", false]], "map_unmapped_grnas() (in module spacr.sequencing)": [[2, "spacr.sequencing.map_unmapped_grnas", false]], "mask_object_count() (in module spacr.utils)": [[2, "spacr.utils.mask_object_count", false]], "match_masks() (in module spacr.utils)": [[2, "spacr.utils.match_masks", false]], "max_size (spacr.utils.cache attribute)": [[2, "spacr.utils.Cache.max_size", false]], "measure_crop() (in module spacr.measure)": [[2, "spacr.measure.measure_crop", false]], "measure_test_mode() (in module spacr.utils)": [[2, "spacr.utils.measure_test_mode", false]], "merge_dataframes() (in module spacr.utils)": [[2, "spacr.utils.merge_dataframes", false]], "merge_pred_mes() (in module spacr.core)": [[2, "spacr.core.merge_pred_mes", false]], "merge_regression_res_with_metadata() (in module spacr.utils)": [[2, "spacr.utils.merge_regression_res_with_metadata", false]], "merge_touching_objects() (in module spacr.utils)": [[2, "spacr.utils.merge_touching_objects", false]], "ml_analysis() (in module spacr.core)": [[2, "spacr.core.ml_analysis", false]], "mlr() (in module spacr.utils)": [[2, "spacr.utils.MLR", false]], "model_metrics() (in module spacr.utils)": [[2, "spacr.utils.model_metrics", false]], "modifymaskapp (class in spacr.gui_elements)": [[2, "spacr.gui_elements.ModifyMaskApp", false]], "module": [[2, "module-spacr", false], [2, "module-spacr.app_annotate", false], [2, "module-spacr.app_classify", false], [2, "module-spacr.app_make_masks", false], [2, "module-spacr.app_mask", false], [2, "module-spacr.app_measure", false], [2, "module-spacr.app_sequencing", false], [2, "module-spacr.app_umap", false], [2, "module-spacr.core", false], [2, "module-spacr.deep_spacr", false], [2, "module-spacr.graph_learning", false], [2, "module-spacr.gui", false], [2, "module-spacr.gui_core", false], [2, "module-spacr.gui_elements", false], [2, "module-spacr.gui_utils", false], [2, "module-spacr.io", false], [2, "module-spacr.logger", false], [2, "module-spacr.measure", false], [2, "module-spacr.plot", false], [2, "module-spacr.sequencing", false], [2, "module-spacr.settings", false], [2, "module-spacr.sim", false], [2, "module-spacr.sim_app", false], [2, "module-spacr.timelapse", false], [2, "module-spacr.utils", false], [2, "module-spacr.version", false]], "multiscaleblockwithattention (class in spacr.utils)": [[2, "spacr.utils.MultiScaleBlockWithAttention", false]], "mydataset (class in spacr.io)": [[2, "spacr.io.MyDataset", false]], "next_image() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.next_image", false]], "next_page() (spacr.gui_elements.annotateapp method)": [[2, "spacr.gui_elements.AnnotateApp.next_page", false]], "noclassdataset (class in spacr.io)": [[2, "spacr.io.NoClassDataset", false]], "normalize_and_visualize() (in module spacr.plot)": [[2, "spacr.plot.normalize_and_visualize", false]], "normalize_array() (in module spacr.sim)": [[2, "spacr.sim.normalize_array", false]], "normalize_image() (spacr.gui_elements.annotateapp static method)": [[2, "spacr.gui_elements.AnnotateApp.normalize_image", false]], "normalize_image() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.normalize_image", false]], "normalize_sequencing_data() (in module spacr.graph_learning)": [[2, "spacr.graph_learning.normalize_sequencing_data", false]], "normalize_to_dtype() (in module spacr.utils)": [[2, "spacr.utils.normalize_to_dtype", false]], "on_click() (spacr.gui_elements.spacrbutton method)": [[2, "spacr.gui_elements.spacrButton.on_click", false]], "on_click() (spacr.gui_elements.spacrcombo method)": [[2, "spacr.gui_elements.spacrCombo.on_click", false]], "on_click() (spacr.gui_elements.spacrdropdownmenu method)": [[2, "spacr.gui_elements.spacrDropdownMenu.on_click", false]], "on_configure() (spacr.gui_elements.spacrcontainer method)": [[2, "spacr.gui_elements.spacrContainer.on_configure", false]], "on_enter() (spacr.gui_elements.spacrbutton method)": [[2, "spacr.gui_elements.spacrButton.on_enter", false]], "on_enter() (spacr.gui_elements.spacrdropdownmenu method)": [[2, "spacr.gui_elements.spacrDropdownMenu.on_enter", false]], "on_enter_sash() (spacr.gui_elements.spacrcontainer method)": [[2, "spacr.gui_elements.spacrContainer.on_enter_sash", false]], "on_focus_in() (spacr.gui_elements.spacrentry method)": [[2, "spacr.gui_elements.spacrEntry.on_focus_in", false]], "on_focus_out() (spacr.gui_elements.spacrentry method)": [[2, "spacr.gui_elements.spacrEntry.on_focus_out", false]], "on_leave() (spacr.gui_elements.spacrbutton method)": [[2, "spacr.gui_elements.spacrButton.on_leave", false]], "on_leave() (spacr.gui_elements.spacrdropdownmenu method)": [[2, "spacr.gui_elements.spacrDropdownMenu.on_leave", false]], "on_leave_sash() (spacr.gui_elements.spacrcontainer method)": [[2, "spacr.gui_elements.spacrContainer.on_leave_sash", false]], "on_select() (spacr.gui_elements.spacrcombo method)": [[2, "spacr.gui_elements.spacrCombo.on_select", false]], "on_select() (spacr.gui_elements.spacrdropdownmenu method)": [[2, "spacr.gui_elements.spacrDropdownMenu.on_select", false]], "open_dropdown() (spacr.gui_elements.spacrcombo method)": [[2, "spacr.gui_elements.spacrCombo.open_dropdown", false]], "overlay_mask_on_image() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.overlay_mask_on_image", false]], "pad_to_same_shape() (in module spacr.utils)": [[2, "spacr.utils.pad_to_same_shape", false]], "parse_gz_files() (in module spacr.sequencing)": [[2, "spacr.sequencing.parse_gz_files", false]], "parse_list() (in module spacr.gui_utils)": [[2, "spacr.gui_utils.parse_list", false]], "parse_list_v1() (in module spacr.gui_utils)": [[2, "spacr.gui_utils.parse_list_v1", false]], "perform_mixed_model() (in module spacr.sequencing)": [[2, "spacr.sequencing.perform_mixed_model", false]], "perform_regression() (in module spacr.sequencing)": [[2, "spacr.sequencing.perform_regression", false]], "perform_resize() (spacr.gui_elements.spacrcontainer method)": [[2, "spacr.gui_elements.spacrContainer.perform_resize", false]], "perform_statistical_tests() (in module spacr.utils)": [[2, "spacr.utils.perform_statistical_tests", false]], "pick_best_model() (in module spacr.utils)": [[2, "spacr.utils.pick_best_model", false]], "plot_arrays() (in module spacr.plot)": [[2, "spacr.plot.plot_arrays", false]], "plot_clusters() (in module spacr.utils)": [[2, "spacr.utils.plot_clusters", false]], "plot_clusters_grid() (in module spacr.utils)": [[2, "spacr.utils.plot_clusters_grid", false]], "plot_comparison_results() (in module spacr.plot)": [[2, "spacr.plot.plot_comparison_results", false]], "plot_confusion_matrix() (in module spacr.sim)": [[2, "spacr.sim.plot_confusion_matrix", false]], "plot_correlation_matrix() (in module spacr.sim)": [[2, "spacr.sim.plot_correlation_matrix", false]], "plot_data() (in module spacr.sequencing)": [[2, "spacr.sequencing.plot_data", false]], "plot_data() (in module spacr.timelapse)": [[2, "spacr.timelapse.plot_data", false]], "plot_embedding() (in module spacr.utils)": [[2, "spacr.utils.plot_embedding", false]], "plot_feature_importance() (in module spacr.plot)": [[2, "spacr.plot.plot_feature_importance", false]], "plot_feature_importance() (in module spacr.sim)": [[2, "spacr.sim.plot_feature_importance", false]], "plot_grid() (in module spacr.utils)": [[2, "spacr.utils.plot_grid", false]], "plot_histogram() (in module spacr.plot)": [[2, "spacr.plot.plot_histogram", false]], "plot_histogram() (in module spacr.sim)": [[2, "spacr.sim.plot_histogram", false]], "plot_image() (in module spacr.utils)": [[2, "spacr.utils.plot_image", false]], "plot_image_mask_overlay() (in module spacr.plot)": [[2, "spacr.plot.plot_image_mask_overlay", false]], "plot_images_and_arrays() (in module spacr.plot)": [[2, "spacr.plot.plot_images_and_arrays", false]], "plot_images_by_cluster() (in module spacr.utils)": [[2, "spacr.utils.plot_images_by_cluster", false]], "plot_lorenz_curves() (in module spacr.plot)": [[2, "spacr.plot.plot_lorenz_curves", false]], "plot_masks() (in module spacr.plot)": [[2, "spacr.plot.plot_masks", false]], "plot_merged() (in module spacr.plot)": [[2, "spacr.plot.plot_merged", false]], "plot_object_outlines() (in module spacr.plot)": [[2, "spacr.plot.plot_object_outlines", false]], "plot_partial_dependences() (in module spacr.sim)": [[2, "spacr.sim.plot_partial_dependences", false]], "plot_permutation() (in module spacr.plot)": [[2, "spacr.plot.plot_permutation", false]], "plot_plates() (in module spacr.plot)": [[2, "spacr.plot.plot_plates", false]], "plot_plates() (in module spacr.sequencing)": [[2, "spacr.sequencing.plot_plates", false]], "plot_resize() (in module spacr.plot)": [[2, "spacr.plot.plot_resize", false]], "plot_roc_pr() (in module spacr.sim)": [[2, "spacr.sim.plot_roc_pr", false]], "plot_saliency_maps() (spacr.utils.saliencymapgenerator method)": [[2, "spacr.utils.SaliencyMapGenerator.plot_saliency_maps", false]], "plot_simulations() (in module spacr.sim)": [[2, "spacr.sim.plot_simulations", false]], "plot_umap_images() (in module spacr.utils)": [[2, "spacr.utils.plot_umap_images", false]], "pos_dict() (in module spacr.sequencing)": [[2, "spacr.sequencing.pos_dict", false]], "post_menu() (spacr.gui_elements.spacrdropdownmenu method)": [[2, "spacr.gui_elements.spacrDropdownMenu.post_menu", false]], "power_law_dist_gen() (in module spacr.sim)": [[2, "spacr.sim.power_law_dist_gen", false]], "precess_reads() (in module spacr.sequencing)": [[2, "spacr.sequencing.precess_reads", false]], "prefilter_paths_annotations() (spacr.gui_elements.annotateapp method)": [[2, "spacr.gui_elements.AnnotateApp.prefilter_paths_annotations", false]], "prepare_batch_for_cellpose() (in module spacr.core)": [[2, "spacr.core.prepare_batch_for_cellpose", false]], "preprocess_data() (in module spacr.utils)": [[2, "spacr.utils.preprocess_data", false]], "preprocess_generate_masks() (in module spacr.core)": [[2, "spacr.core.preprocess_generate_masks", false]], "preprocess_image() (in module spacr.graph_learning)": [[2, "spacr.graph_learning.preprocess_image", false]], "preprocess_image() (in module spacr.utils)": [[2, "spacr.utils.preprocess_image", false]], "preprocess_img_data() (in module spacr.io)": [[2, "spacr.io.preprocess_img_data", false]], "preprocess_pathogen_data() (in module spacr.timelapse)": [[2, "spacr.timelapse.preprocess_pathogen_data", false]], "previous_image() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.previous_image", false]], "previous_page() (spacr.gui_elements.annotateapp method)": [[2, "spacr.gui_elements.AnnotateApp.previous_page", false]], "print_mask_and_flows() (in module spacr.plot)": [[2, "spacr.plot.print_mask_and_flows", false]], "print_progress() (in module spacr.utils)": [[2, "spacr.utils.print_progress", false]], "proceed_with_app() (in module spacr.gui_utils)": [[2, "spacr.gui_utils.proceed_with_app", false]], "process_barecodes() (in module spacr.sequencing)": [[2, "spacr.sequencing.process_barecodes", false]], "process_chunk_for_consensus() (in module spacr.sequencing)": [[2, "spacr.sequencing.process_chunk_for_consensus", false]], "process_chunk_for_mapping() (in module spacr.sequencing)": [[2, "spacr.sequencing.process_chunk_for_mapping", false]], "process_console_queue() (in module spacr.gui_core)": [[2, "spacr.gui_core.process_console_queue", false]], "process_fig_queue() (in module spacr.gui_core)": [[2, "spacr.gui_core.process_fig_queue", false]], "process_masks() (in module spacr.utils)": [[2, "spacr.utils.process_masks", false]], "process_meassure_crop_results() (in module spacr.measure)": [[2, "spacr.measure.process_meassure_crop_results", false]], "process_reads() (in module spacr.core)": [[2, "spacr.core.process_reads", false]], "process_scores() (in module spacr.sequencing)": [[2, "spacr.sequencing.process_scores", false]], "process_sequencing_df() (in module spacr.graph_learning)": [[2, "spacr.graph_learning.process_sequencing_df", false]], "process_stdout_stderr() (in module spacr.gui_utils)": [[2, "spacr.gui_utils.process_stdout_stderr", false]], "process_vision_results() (in module spacr.utils)": [[2, "spacr.utils.process_vision_results", false]], "put() (spacr.utils.cache method)": [[2, "spacr.utils.Cache.put", false]], "random_cmap() (in module spacr.plot)": [[2, "spacr.plot.random_cmap", false]], "random_forest_feature_importance() (in module spacr.utils)": [[2, "spacr.utils.random_forest_feature_importance", false]], "read_and_plot__vision_results() (in module spacr.plot)": [[2, "spacr.plot.read_and_plot__vision_results", false]], "read_plot_model_stats() (in module spacr.io)": [[2, "spacr.io.read_plot_model_stats", false]], "read_simulations_table() (in module spacr.sim)": [[2, "spacr.sim.read_simulations_table", false]], "recommend_target_layers() (in module spacr.utils)": [[2, "spacr.utils.recommend_target_layers", false]], "reducer_hyperparameter_search() (in module spacr.core)": [[2, "spacr.core.reducer_hyperparameter_search", false]], "reduction_and_clustering() (in module spacr.utils)": [[2, "spacr.utils.reduction_and_clustering", false]], "regression() (in module spacr.sequencing)": [[2, "spacr.sequencing.regression", false]], "regression_analasys() (in module spacr.core)": [[2, "spacr.core.regression_analasys", false]], "regression_model() (in module spacr.sequencing)": [[2, "spacr.sequencing.regression_model", false]], "regression_roc_auc() (in module spacr.sim)": [[2, "spacr.sim.regression_roc_auc", false]], "relabel_objects() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.relabel_objects", false]], "remove_canvas() (in module spacr.utils)": [[2, "spacr.utils.remove_canvas", false]], "remove_columns_with_single_value() (in module spacr.sim)": [[2, "spacr.sim.remove_columns_with_single_value", false]], "remove_constant_columns() (in module spacr.sim)": [[2, "spacr.sim.remove_constant_columns", false]], "remove_highly_correlated_columns() (in module spacr.utils)": [[2, "spacr.utils.remove_highly_correlated_columns", false]], "remove_intensity_objects() (in module spacr.utils)": [[2, "spacr.utils.remove_intensity_objects", false]], "remove_low_variance_columns() (in module spacr.utils)": [[2, "spacr.utils.remove_low_variance_columns", false]], "remove_noise() (in module spacr.utils)": [[2, "spacr.utils.remove_noise", false]], "remove_outliers() (in module spacr.sequencing)": [[2, "spacr.sequencing.remove_outliers", false]], "remove_small_objects() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.remove_small_objects", false]], "reposition_panes() (spacr.gui_elements.spacrcontainer method)": [[2, "spacr.gui_elements.spacrContainer.reposition_panes", false]], "reset_mp() (in module spacr.utils)": [[2, "spacr.utils.reset_mp", false]], "resize_arrays() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.resize_arrays", false]], "resize_images_and_labels() (in module spacr.utils)": [[2, "spacr.utils.resize_images_and_labels", false]], "resize_labels_back() (in module spacr.utils)": [[2, "spacr.utils.resize_labels_back", false]], "resnet (class in spacr.utils)": [[2, "spacr.utils.ResNet", false]], "reverse_complement() (in module spacr.sequencing)": [[2, "spacr.sequencing.reverse_complement", false]], "rounded_rectangle() (spacr.gui_elements.spacrframe method)": [[2, "spacr.gui_elements.spacrFrame.rounded_rectangle", false]], "run_and_save() (in module spacr.sim)": [[2, "spacr.sim.run_and_save", false]], "run_annotate_app() (in module spacr.gui_utils)": [[2, "spacr.gui_utils.run_annotate_app", false]], "run_experiment() (in module spacr.sim)": [[2, "spacr.sim.run_experiment", false]], "run_function_gui() (in module spacr.gui_utils)": [[2, "spacr.gui_utils.run_function_gui", false]], "run_multiple_simulations() (in module spacr.sim)": [[2, "spacr.sim.run_multiple_simulations", false]], "run_simulation() (in module spacr.sim)": [[2, "spacr.sim.run_simulation", false]], "saliencymapgenerator (class in spacr.utils)": [[2, "spacr.utils.SaliencyMapGenerator", false]], "save_and_add_image_to_grid() (in module spacr.measure)": [[2, "spacr.measure.save_and_add_image_to_grid", false]], "save_data() (in module spacr.sim)": [[2, "spacr.sim.save_data", false]], "save_figure() (in module spacr.timelapse)": [[2, "spacr.timelapse.save_figure", false]], "save_file_lists() (in module spacr.utils)": [[2, "spacr.utils.save_file_lists", false]], "save_mask() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.save_mask", false]], "save_plot() (in module spacr.sim)": [[2, "spacr.sim.save_plot", false]], "save_results_and_figure() (in module spacr.core)": [[2, "spacr.core.save_results_and_figure", false]], "save_results_dataframe() (in module spacr.timelapse)": [[2, "spacr.timelapse.save_results_dataframe", false]], "save_shap_plot() (in module spacr.sim)": [[2, "spacr.sim.save_shap_plot", false]], "save_to_hdf() (in module spacr.sequencing)": [[2, "spacr.sequencing.save_to_hdf", false]], "scaleddotproductattention (class in spacr.utils)": [[2, "spacr.utils.ScaledDotProductAttention", false]], "search_reduction_and_clustering() (in module spacr.utils)": [[2, "spacr.utils.search_reduction_and_clustering", false]], "selectchannels (class in spacr.utils)": [[2, "spacr.utils.SelectChannels", false]], "selfattention (class in spacr.utils)": [[2, "spacr.utils.SelfAttention", false]], "sequence_plates() (in module spacr.sim)": [[2, "spacr.sim.sequence_plates", false]], "set() (spacr.gui_elements.spacrcombo method)": [[2, "spacr.gui_elements.spacrCombo.set", false]], "set() (spacr.gui_elements.spacrswitch method)": [[2, "spacr.gui_elements.spacrSwitch.set", false]], "set_annotate_default_settings() (in module spacr.settings)": [[2, "spacr.settings.set_annotate_default_settings", false]], "set_dark_style() (in module spacr.gui_elements)": [[2, "spacr.gui_elements.set_dark_style", false]], "set_default_analyze_screen() (in module spacr.settings)": [[2, "spacr.settings.set_default_analyze_screen", false]], "set_default_generate_barecode_mapping() (in module spacr.settings)": [[2, "spacr.settings.set_default_generate_barecode_mapping", false]], "set_default_plot_merge_settings() (in module spacr.settings)": [[2, "spacr.settings.set_default_plot_merge_settings", false]], "set_default_settings_preprocess_generate_masks() (in module spacr.settings)": [[2, "spacr.settings.set_default_settings_preprocess_generate_masks", false]], "set_default_settings_preprocess_img_data() (in module spacr.settings)": [[2, "spacr.settings.set_default_settings_preprocess_img_data", false]], "set_default_train_test_model() (in module spacr.settings)": [[2, "spacr.settings.set_default_train_test_model", false]], "set_default_umap_image_settings() (in module spacr.settings)": [[2, "spacr.settings.set_default_umap_image_settings", false]], "set_element_size() (in module spacr.gui_elements)": [[2, "spacr.gui_elements.set_element_size", false]], "set_generate_training_dataset_defaults() (in module spacr.settings)": [[2, "spacr.settings.set_generate_training_dataset_defaults", false]], "set_globals() (in module spacr.gui_core)": [[2, "spacr.gui_core.set_globals", false]], "set_label_position() (spacr.gui_elements.spacrprogressbar method)": [[2, "spacr.gui_elements.spacrProgressBar.set_label_position", false]], "set_label_position() (spacr.gui_elements.spacrprogressbar_v1 method)": [[2, "spacr.gui_elements.spacrProgressBar_v1.set_label_position", false]], "set_text() (spacr.gui_elements.spacrlabel method)": [[2, "spacr.gui_elements.spacrLabel.set_text", false]], "set_zoom_rectangle_end() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.set_zoom_rectangle_end", false]], "set_zoom_rectangle_start() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.set_zoom_rectangle_start", false]], "setup_button_section() (in module spacr.gui_core)": [[2, "spacr.gui_core.setup_button_section", false]], "setup_canvas() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.setup_canvas", false]], "setup_console() (in module spacr.gui_core)": [[2, "spacr.gui_core.setup_console", false]], "setup_frame() (in module spacr.gui_utils)": [[2, "spacr.gui_utils.setup_frame", false]], "setup_function_toolbar() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.setup_function_toolbar", false]], "setup_mode_toolbar() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.setup_mode_toolbar", false]], "setup_navigation_toolbar() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.setup_navigation_toolbar", false]], "setup_plot() (in module spacr.utils)": [[2, "spacr.utils.setup_plot", false]], "setup_plot_section() (in module spacr.gui_core)": [[2, "spacr.gui_core.setup_plot_section", false]], "setup_progress_frame() (in module spacr.gui_core)": [[2, "spacr.gui_core.setup_progress_frame", false]], "setup_settings_panel() (in module spacr.gui_core)": [[2, "spacr.gui_core.setup_settings_panel", false]], "setup_usage_panel() (in module spacr.gui_core)": [[2, "spacr.gui_core.setup_usage_panel", false]], "setup_zoom_toolbar() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.setup_zoom_toolbar", false]], "shap_analysis() (in module spacr.core)": [[2, "spacr.core.shap_analysis", false]], "show_cam_on_image() (in module spacr.utils)": [[2, "spacr.utils.show_cam_on_image", false]], "show_description() (spacr.gui.mainapp method)": [[2, "spacr.gui.MainApp.show_description", false]], "show_tooltip() (spacr.gui_elements.spacrtooltip method)": [[2, "spacr.gui_elements.spacrToolTip.show_tooltip", false]], "shuffle_dataset() (spacr.io.mydataset method)": [[2, "spacr.io.MyDataset.shuffle_dataset", false]], "shuffle_dataset() (spacr.io.noclassdataset method)": [[2, "spacr.io.NoClassDataset.shuffle_dataset", false]], "shutdown() (spacr.gui_elements.annotateapp method)": [[2, "spacr.gui_elements.AnnotateApp.shutdown", false]], "smooth_hull_lines() (in module spacr.utils)": [[2, "spacr.utils.smooth_hull_lines", false]], "smoothgrad (class in spacr.deep_spacr)": [[2, "spacr.deep_spacr.SmoothGrad", false]], "spacr": [[2, "module-spacr", false]], "spacr.app_annotate": [[2, "module-spacr.app_annotate", false]], "spacr.app_classify": [[2, "module-spacr.app_classify", false]], "spacr.app_make_masks": [[2, "module-spacr.app_make_masks", false]], "spacr.app_mask": [[2, "module-spacr.app_mask", false]], "spacr.app_measure": [[2, "module-spacr.app_measure", false]], "spacr.app_sequencing": [[2, "module-spacr.app_sequencing", false]], "spacr.app_umap": [[2, "module-spacr.app_umap", false]], "spacr.core": [[2, "module-spacr.core", false]], "spacr.deep_spacr": [[2, "module-spacr.deep_spacr", false]], "spacr.graph_learning": [[2, "module-spacr.graph_learning", false]], "spacr.gui": [[2, "module-spacr.gui", false]], "spacr.gui_core": [[2, "module-spacr.gui_core", false]], "spacr.gui_elements": [[2, "module-spacr.gui_elements", false]], "spacr.gui_utils": [[2, "module-spacr.gui_utils", false]], "spacr.io": [[2, "module-spacr.io", false]], "spacr.logger": [[2, "module-spacr.logger", false]], "spacr.measure": [[2, "module-spacr.measure", false]], "spacr.plot": [[2, "module-spacr.plot", false]], "spacr.sequencing": [[2, "module-spacr.sequencing", false]], "spacr.settings": [[2, "module-spacr.settings", false]], "spacr.sim": [[2, "module-spacr.sim", false]], "spacr.sim_app": [[2, "module-spacr.sim_app", false]], "spacr.timelapse": [[2, "module-spacr.timelapse", false]], "spacr.utils": [[2, "module-spacr.utils", false]], "spacr.version": [[2, "module-spacr.version", false]], "spacrbutton (class in spacr.gui_elements)": [[2, "spacr.gui_elements.spacrButton", false]], "spacrcheck (class in spacr.gui_elements)": [[2, "spacr.gui_elements.spacrCheck", false]], "spacrcheckbutton (class in spacr.gui_elements)": [[2, "spacr.gui_elements.spacrCheckbutton", false]], "spacrcombo (class in spacr.gui_elements)": [[2, "spacr.gui_elements.spacrCombo", false]], "spacrcontainer (class in spacr.gui_elements)": [[2, "spacr.gui_elements.spacrContainer", false]], "spacrdropdownmenu (class in spacr.gui_elements)": [[2, "spacr.gui_elements.spacrDropdownMenu", false]], "spacrentry (class in spacr.gui_elements)": [[2, "spacr.gui_elements.spacrEntry", false]], "spacrfigshow() (in module spacr.gui_utils)": [[2, "spacr.gui_utils.spacrFigShow", false]], "spacrfont (class in spacr.gui_elements)": [[2, "spacr.gui_elements.spacrFont", false]], "spacrframe (class in spacr.gui_elements)": [[2, "spacr.gui_elements.spacrFrame", false]], "spacrlabel (class in spacr.gui_elements)": [[2, "spacr.gui_elements.spacrLabel", false]], "spacrprogressbar (class in spacr.gui_elements)": [[2, "spacr.gui_elements.spacrProgressBar", false]], "spacrprogressbar_v1 (class in spacr.gui_elements)": [[2, "spacr.gui_elements.spacrProgressBar_v1", false]], "spacrscrollbarstyle() (in module spacr.gui_elements)": [[2, "spacr.gui_elements.spacrScrollbarStyle", false]], "spacrswitch (class in spacr.gui_elements)": [[2, "spacr.gui_elements.spacrSwitch", false]], "spacrtooltip (class in spacr.gui_elements)": [[2, "spacr.gui_elements.spacrToolTip", false]], "spatialattention (class in spacr.utils)": [[2, "spacr.utils.SpatialAttention", false]], "split_fastq() (in module spacr.sequencing)": [[2, "spacr.sequencing.split_fastq", false]], "split_my_dataset() (in module spacr.utils)": [[2, "spacr.utils.split_my_dataset", false]], "start_annotate_app() (in module spacr.app_annotate)": [[2, "spacr.app_annotate.start_annotate_app", false]], "start_classify_app() (in module spacr.app_classify)": [[2, "spacr.app_classify.start_classify_app", false]], "start_dividing_line() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.start_dividing_line", false]], "start_make_mask_app() (in module spacr.app_make_masks)": [[2, "spacr.app_make_masks.start_make_mask_app", false]], "start_mask_app() (in module spacr.app_mask)": [[2, "spacr.app_mask.start_mask_app", false]], "start_measure_app() (in module spacr.app_measure)": [[2, "spacr.app_measure.start_measure_app", false]], "start_process() (in module spacr.gui_core)": [[2, "spacr.gui_core.start_process", false]], "start_resize() (spacr.gui_elements.spacrcontainer method)": [[2, "spacr.gui_elements.spacrContainer.start_resize", false]], "start_seq_app() (in module spacr.app_sequencing)": [[2, "spacr.app_sequencing.start_seq_app", false]], "start_umap_app() (in module spacr.app_umap)": [[2, "spacr.app_umap.start_umap_app", false]], "summarize_per_well() (in module spacr.timelapse)": [[2, "spacr.timelapse.summarize_per_well", false]], "summarize_per_well_inf_non_inf() (in module spacr.timelapse)": [[2, "spacr.timelapse.summarize_per_well_inf_non_inf", false]], "tarimagedataset (class in spacr.io)": [[2, "spacr.io.TarImageDataset", false]], "test_error() (in module spacr.sequencing)": [[2, "spacr.sequencing.test_error", false]], "test_model_core() (in module spacr.deep_spacr)": [[2, "spacr.deep_spacr.test_model_core", false]], "test_model_performance() (in module spacr.deep_spacr)": [[2, "spacr.deep_spacr.test_model_performance", false]], "toggle() (spacr.gui_elements.spacrswitch method)": [[2, "spacr.gui_elements.spacrSwitch.toggle", false]], "toggle_brush_mode() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.toggle_brush_mode", false]], "toggle_dividing_line_mode() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.toggle_dividing_line_mode", false]], "toggle_draw_mode() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.toggle_draw_mode", false]], "toggle_erase_mode() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.toggle_erase_mode", false]], "toggle_magic_wand_mode() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.toggle_magic_wand_mode", false]], "toggle_settings() (in module spacr.gui_core)": [[2, "spacr.gui_core.toggle_settings", false]], "toggle_variable() (spacr.gui_elements.spacrcheck method)": [[2, "spacr.gui_elements.spacrCheck.toggle_variable", false]], "toggle_zoom_mode() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.toggle_zoom_mode", false]], "torchmodel (class in spacr.utils)": [[2, "spacr.utils.TorchModel", false]], "train() (in module spacr.graph_learning)": [[2, "spacr.graph_learning.train", false]], "train_cellpose() (in module spacr.core)": [[2, "spacr.core.train_cellpose", false]], "train_graph_transformer() (in module spacr.graph_learning)": [[2, "spacr.graph_learning.train_graph_transformer", false]], "train_loaders (spacr.io.combineloaders attribute)": [[2, "spacr.io.CombineLoaders.train_loaders", false]], "train_model() (in module spacr.deep_spacr)": [[2, "spacr.deep_spacr.train_model", false]], "train_test_model() (in module spacr.deep_spacr)": [[2, "spacr.deep_spacr.train_test_model", false]], "training_dataset_from_annotation() (in module spacr.core)": [[2, "spacr.core.training_dataset_from_annotation", false]], "translate_barecodes() (in module spacr.sequencing)": [[2, "spacr.sequencing.translate_barecodes", false]], "truncate_read() (in module spacr.sequencing)": [[2, "spacr.sequencing.truncate_read", false]], "update_check() (spacr.gui_elements.spacrcheck method)": [[2, "spacr.gui_elements.spacrCheck.update_check", false]], "update_database_worker() (spacr.gui_elements.annotateapp method)": [[2, "spacr.gui_elements.AnnotateApp.update_database_worker", false]], "update_description() (spacr.gui.mainapp method)": [[2, "spacr.gui.MainApp.update_description", false]], "update_description() (spacr.gui_elements.spacrbutton method)": [[2, "spacr.gui_elements.spacrButton.update_description", false]], "update_display() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.update_display", false]], "update_dividing_line_preview() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.update_dividing_line_preview", false]], "update_gui_text() (spacr.gui_elements.annotateapp method)": [[2, "spacr.gui_elements.AnnotateApp.update_gui_text", false]], "update_html() (spacr.gui_elements.annotateapp static method)": [[2, "spacr.gui_elements.AnnotateApp.update_html", false]], "update_label() (spacr.gui_elements.spacrprogressbar method)": [[2, "spacr.gui_elements.spacrProgressBar.update_label", false]], "update_label() (spacr.gui_elements.spacrprogressbar_v1 method)": [[2, "spacr.gui_elements.spacrProgressBar_v1.update_label", false]], "update_mouse_info() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.update_mouse_info", false]], "update_original_mask() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.update_original_mask", false]], "update_original_mask_from_zoom() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.update_original_mask_from_zoom", false]], "update_scores_and_get_cm() (in module spacr.sim)": [[2, "spacr.sim.update_scores_and_get_cm", false]], "update_styles() (spacr.gui_elements.spacrdropdownmenu method)": [[2, "spacr.gui_elements.spacrDropdownMenu.update_styles", false]], "update_switch() (spacr.gui_elements.spacrswitch method)": [[2, "spacr.gui_elements.spacrSwitch.update_switch", false]], "update_zoom_box() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.update_zoom_box", false]], "use_magic_wand() (spacr.gui_elements.modifymaskapp method)": [[2, "spacr.gui_elements.ModifyMaskApp.use_magic_wand", false]], "validate_and_adjust_beta_params() (in module spacr.sim)": [[2, "spacr.sim.validate_and_adjust_beta_params", false]], "vert_horiz() (in module spacr.sequencing)": [[2, "spacr.sequencing.vert_horiz", false]], "vis_dists() (in module spacr.sim)": [[2, "spacr.sim.vis_dists", false]], "visualize_all() (in module spacr.sim)": [[2, "spacr.sim.visualize_all", false]], "visualize_cellpose_masks() (in module spacr.plot)": [[2, "spacr.plot.visualize_cellpose_masks", false]], "visualize_classes() (in module spacr.deep_spacr)": [[2, "spacr.deep_spacr.visualize_classes", false]], "visualize_grad_cam() (in module spacr.deep_spacr)": [[2, "spacr.deep_spacr.visualize_grad_cam", false]], "visualize_integrated_gradients() (in module spacr.deep_spacr)": [[2, "spacr.deep_spacr.visualize_integrated_gradients", false]], "visualize_masks() (in module spacr.plot)": [[2, "spacr.plot.visualize_masks", false]], "visualize_saliency_map() (in module spacr.deep_spacr)": [[2, "spacr.deep_spacr.visualize_saliency_map", false]], "visualize_smooth_grad() (in module spacr.deep_spacr)": [[2, "spacr.deep_spacr.visualize_smooth_grad", false]], "volcano_plot() (in module spacr.plot)": [[2, "spacr.plot.volcano_plot", false]], "write() (spacr.gui_utils.writetoqueue method)": [[2, "spacr.gui_utils.WriteToQueue.write", false]], "writetoqueue (class in spacr.gui_utils)": [[2, "spacr.gui_utils.WriteToQueue", false]], "zoom_icon() (spacr.gui_elements.spacrbutton method)": [[2, "spacr.gui_elements.spacrButton.zoom_icon", false]]}, "objects": {"": [[2, 0, 0, "-", "spacr"]], "spacr": [[2, 0, 0, "-", "app_annotate"], [2, 0, 0, "-", "app_classify"], [2, 0, 0, "-", "app_make_masks"], [2, 0, 0, "-", "app_mask"], [2, 0, 0, "-", "app_measure"], [2, 0, 0, "-", "app_sequencing"], [2, 0, 0, "-", "app_umap"], [2, 0, 0, "-", "core"], [2, 0, 0, "-", "deep_spacr"], [2, 0, 0, "-", "graph_learning"], [2, 0, 0, "-", "gui"], [2, 0, 0, "-", "gui_core"], [2, 0, 0, "-", "gui_elements"], [2, 0, 0, "-", "gui_utils"], [2, 0, 0, "-", "io"], [2, 0, 0, "-", "logger"], [2, 0, 0, "-", "measure"], [2, 0, 0, "-", "plot"], [2, 0, 0, "-", "sequencing"], [2, 0, 0, "-", "settings"], [2, 0, 0, "-", "sim"], [2, 0, 0, "-", "sim_app"], [2, 0, 0, "-", "timelapse"], [2, 0, 0, "-", "utils"], [2, 0, 0, "-", "version"]], "spacr.app_annotate": [[2, 1, 1, "", "initiate_annotation_app"], [2, 1, 1, "", "start_annotate_app"]], "spacr.app_classify": [[2, 1, 1, "", "start_classify_app"]], "spacr.app_make_masks": [[2, 1, 1, "", "initiate_make_mask_app"], [2, 1, 1, "", "start_make_mask_app"]], "spacr.app_mask": [[2, 1, 1, "", "start_mask_app"]], "spacr.app_measure": [[2, 1, 1, "", "start_measure_app"]], "spacr.app_sequencing": [[2, 1, 1, "", "start_seq_app"]], "spacr.app_umap": [[2, 1, 1, "", "start_umap_app"]], "spacr.core": [[2, 1, 1, "", "all_elements_match"], [2, 1, 1, "", "analyze_data_reg"], [2, 1, 1, "", "analyze_plaques"], [2, 1, 1, "", "analyze_recruitment"], [2, 1, 1, "", "annotate_results"], [2, 1, 1, "", "apply_model"], [2, 1, 1, "", "apply_model_to_tar"], [2, 1, 1, "", "apply_model_to_tar_v1"], [2, 1, 1, "", "check_cellpose_models"], [2, 1, 1, "", "check_index"], [2, 1, 1, "", "compare_cellpose_masks"], [2, 1, 1, "", "compare_mask"], [2, 1, 1, "", "find_optimal_threshold"], [2, 1, 1, "", "generate_cellpose_masks"], [2, 1, 1, "", "generate_dataset"], [2, 1, 1, "", "generate_dataset_from_lists"], [2, 1, 1, "", "generate_dataset_v1"], [2, 1, 1, "", "generate_image_umap"], [2, 1, 1, "", "generate_loaders"], [2, 1, 1, "", "generate_masks_from_imgs"], [2, 1, 1, "", "generate_ml_scores"], [2, 1, 1, "", "generate_training_data_file_list"], [2, 1, 1, "", "generate_training_dataset"], [2, 1, 1, "", "generate_training_dataset_v1"], [2, 1, 1, "", "identify_masks_finetune"], [2, 1, 1, "", "jitterplot_by_annotation"], [2, 1, 1, "", "join_measurments_and_annotation"], [2, 1, 1, "", "map_condition"], [2, 1, 1, "", "merge_pred_mes"], [2, 1, 1, "", "ml_analysis"], [2, 1, 1, "", "prepare_batch_for_cellpose"], [2, 1, 1, "", "preprocess_generate_masks"], [2, 1, 1, "", "process_reads"], [2, 1, 1, "", "reducer_hyperparameter_search"], [2, 1, 1, "", "regression_analasys"], [2, 1, 1, "", "save_results_and_figure"], [2, 1, 1, "", "shap_analysis"], [2, 1, 1, "", "train_cellpose"], [2, 1, 1, "", "training_dataset_from_annotation"]], "spacr.deep_spacr": [[2, 2, 1, "", "SmoothGrad"], [2, 1, 1, "", "deep_spacr"], [2, 1, 1, "", "evaluate_model_core"], [2, 1, 1, "", "evaluate_model_performance"], [2, 1, 1, "", "test_model_core"], [2, 1, 1, "", "test_model_performance"], [2, 1, 1, "", "train_model"], [2, 1, 1, "", "train_test_model"], [2, 1, 1, "", "visualize_classes"], [2, 1, 1, "", "visualize_grad_cam"], [2, 1, 1, "", "visualize_integrated_gradients"], [2, 1, 1, "", "visualize_saliency_map"], [2, 1, 1, "", "visualize_smooth_grad"]], "spacr.deep_spacr.SmoothGrad": [[2, 3, 1, "", "compute_smooth_grad"]], "spacr.graph_learning": [[2, 2, 1, "", "Decoder"], [2, 2, 1, "", "Encoder"], [2, 2, 1, "", "GraphTransformer"], [2, 1, 1, "", "analyze_associations"], [2, 1, 1, "", "apply_model"], [2, 1, 1, "", "construct_well_graph"], [2, 1, 1, "", "create_graphs_for_wells"], [2, 1, 1, "", "extract_metadata_from_path"], [2, 1, 1, "", "generate_synthetic_grna_data"], [2, 1, 1, "", "load_images"], [2, 1, 1, "", "load_mnist_data"], [2, 1, 1, "", "normalize_sequencing_data"], [2, 1, 1, "", "preprocess_image"], [2, 1, 1, "", "process_sequencing_df"], [2, 1, 1, "", "train"], [2, 1, 1, "", "train_graph_transformer"]], "spacr.graph_learning.Decoder": [[2, 3, 1, "", "forward"]], "spacr.graph_learning.Encoder": [[2, 3, 1, "", "forward"]], "spacr.graph_learning.GraphTransformer": [[2, 3, 1, "", "forward"]], "spacr.gui": [[2, 2, 1, "", "MainApp"], [2, 1, 1, "", "gui_app"]], "spacr.gui.MainApp": [[2, 3, 1, "", "clear_description"], [2, 3, 1, "", "clear_frame"], [2, 3, 1, "", "create_startup_screen"], [2, 3, 1, "", "create_widgets"], [2, 3, 1, "", "load_app"], [2, 3, 1, "", "show_description"], [2, 3, 1, "", "update_description"]], "spacr.gui_core": [[2, 1, 1, "", "import_settings"], [2, 1, 1, "", "initiate_abort"], [2, 1, 1, "", "initiate_root"], [2, 1, 1, "", "process_console_queue"], [2, 1, 1, "", "process_fig_queue"], [2, 1, 1, "", "set_globals"], [2, 1, 1, "", "setup_button_section"], [2, 1, 1, "", "setup_console"], [2, 1, 1, "", "setup_plot_section"], [2, 1, 1, "", "setup_progress_frame"], [2, 1, 1, "", "setup_settings_panel"], [2, 1, 1, "", "setup_usage_panel"], [2, 1, 1, "", "start_process"], [2, 1, 1, "", "toggle_settings"]], "spacr.gui_elements": [[2, 2, 1, "", "AnnotateApp"], [2, 2, 1, "", "ModifyMaskApp"], [2, 1, 1, "", "create_menu_bar"], [2, 1, 1, "", "set_dark_style"], [2, 1, 1, "", "set_element_size"], [2, 2, 1, "", "spacrButton"], [2, 2, 1, "", "spacrCheck"], [2, 2, 1, "", "spacrCheckbutton"], [2, 2, 1, "", "spacrCombo"], [2, 2, 1, "", "spacrContainer"], [2, 2, 1, "", "spacrDropdownMenu"], [2, 2, 1, "", "spacrEntry"], [2, 2, 1, "", "spacrFont"], [2, 2, 1, "", "spacrFrame"], [2, 2, 1, "", "spacrLabel"], [2, 2, 1, "", "spacrProgressBar"], [2, 2, 1, "", "spacrProgressBar_v1"], [2, 1, 1, "", "spacrScrollbarStyle"], [2, 2, 1, "", "spacrSwitch"], [2, 2, 1, "", "spacrToolTip"]], "spacr.gui_elements.AnnotateApp": [[2, 3, 1, "", "add_colored_border"], [2, 3, 1, "", "calculate_grid_dimensions"], [2, 3, 1, "", "filter_channels"], [2, 3, 1, "", "get_on_image_click"], [2, 3, 1, "", "load_images"], [2, 3, 1, "", "load_single_image"], [2, 3, 1, "", "next_page"], [2, 3, 1, "", "normalize_image"], [2, 3, 1, "", "prefilter_paths_annotations"], [2, 3, 1, "", "previous_page"], [2, 3, 1, "", "shutdown"], [2, 3, 1, "", "update_database_worker"], [2, 3, 1, "", "update_gui_text"], [2, 3, 1, "", "update_html"]], "spacr.gui_elements.ModifyMaskApp": [[2, 3, 1, "", "apply_brush"], [2, 3, 1, "", "apply_brush_release"], [2, 3, 1, "", "apply_dividing_line"], [2, 3, 1, "", "apply_magic_wand"], [2, 3, 1, "", "apply_normalization"], [2, 3, 1, "", "apply_zoom_on_enter"], [2, 3, 1, "", "canvas_to_image"], [2, 3, 1, "", "clear_objects"], [2, 3, 1, "", "display_image"], [2, 3, 1, "", "display_zoomed_image"], [2, 3, 1, "", "draw"], [2, 3, 1, "", "draw_on_zoomed_mask"], [2, 3, 1, "", "erase_brush"], [2, 3, 1, "", "erase_brush_release"], [2, 3, 1, "", "erase_object"], [2, 3, 1, "", "fill_objects"], [2, 3, 1, "", "finish_dividing_line"], [2, 3, 1, "", "finish_drawing"], [2, 3, 1, "", "finish_drawing_if_active"], [2, 3, 1, "", "get_scaling_factors"], [2, 3, 1, "", "image_to_canvas"], [2, 3, 1, "", "initialize_flags"], [2, 3, 1, "", "invert_mask"], [2, 3, 1, "", "load_first_image"], [2, 3, 1, "", "load_image_and_mask"], [2, 3, 1, "", "magic_wand_normal"], [2, 3, 1, "", "magic_wand_zoomed"], [2, 3, 1, "", "next_image"], [2, 3, 1, "", "normalize_image"], [2, 3, 1, "", "overlay_mask_on_image"], [2, 3, 1, "", "previous_image"], [2, 3, 1, "", "relabel_objects"], [2, 3, 1, "", "remove_small_objects"], [2, 3, 1, "", "resize_arrays"], [2, 3, 1, "", "save_mask"], [2, 3, 1, "", "set_zoom_rectangle_end"], [2, 3, 1, "", "set_zoom_rectangle_start"], [2, 3, 1, "", "setup_canvas"], [2, 3, 1, "", "setup_function_toolbar"], [2, 3, 1, "", "setup_mode_toolbar"], [2, 3, 1, "", "setup_navigation_toolbar"], [2, 3, 1, "", "setup_zoom_toolbar"], [2, 3, 1, "", "start_dividing_line"], [2, 3, 1, "", "toggle_brush_mode"], [2, 3, 1, "", "toggle_dividing_line_mode"], [2, 3, 1, "", "toggle_draw_mode"], [2, 3, 1, "", "toggle_erase_mode"], [2, 3, 1, "", "toggle_magic_wand_mode"], [2, 3, 1, "", "toggle_zoom_mode"], [2, 3, 1, "", "update_display"], [2, 3, 1, "", "update_dividing_line_preview"], [2, 3, 1, "", "update_mouse_info"], [2, 3, 1, "", "update_original_mask"], [2, 3, 1, "", "update_original_mask_from_zoom"], [2, 3, 1, "", "update_zoom_box"], [2, 3, 1, "", "use_magic_wand"]], "spacr.gui_elements.spacrButton": [[2, 3, 1, "", "animate_zoom"], [2, 3, 1, "", "clear_description"], [2, 3, 1, "", "create_rounded_rectangle"], [2, 3, 1, "", "get_icon_path"], [2, 3, 1, "", "load_icon"], [2, 3, 1, "", "on_click"], [2, 3, 1, "", "on_enter"], [2, 3, 1, "", "on_leave"], [2, 3, 1, "", "update_description"], [2, 3, 1, "", "zoom_icon"]], "spacr.gui_elements.spacrCheck": [[2, 3, 1, "", "draw_rounded_square"], [2, 3, 1, "", "toggle_variable"], [2, 3, 1, "", "update_check"]], "spacr.gui_elements.spacrCombo": [[2, 3, 1, "", "close_dropdown"], [2, 3, 1, "", "draw_rounded_rectangle"], [2, 3, 1, "", "on_click"], [2, 3, 1, "", "on_select"], [2, 3, 1, "", "open_dropdown"], [2, 3, 1, "", "set"]], "spacr.gui_elements.spacrContainer": [[2, 3, 1, "", "add"], [2, 3, 1, "", "create_sash"], [2, 3, 1, "", "on_configure"], [2, 3, 1, "", "on_enter_sash"], [2, 3, 1, "", "on_leave_sash"], [2, 3, 1, "", "perform_resize"], [2, 3, 1, "", "reposition_panes"], [2, 3, 1, "", "start_resize"]], "spacr.gui_elements.spacrDropdownMenu": [[2, 3, 1, "", "create_rounded_rectangle"], [2, 3, 1, "", "on_click"], [2, 3, 1, "", "on_enter"], [2, 3, 1, "", "on_leave"], [2, 3, 1, "", "on_select"], [2, 3, 1, "", "post_menu"], [2, 3, 1, "", "update_styles"]], "spacr.gui_elements.spacrEntry": [[2, 3, 1, "", "draw_rounded_rectangle"], [2, 3, 1, "", "on_focus_in"], [2, 3, 1, "", "on_focus_out"]], "spacr.gui_elements.spacrFont": [[2, 3, 1, "", "get_font"], [2, 3, 1, "", "get_font_path"], [2, 3, 1, "", "load_font"]], "spacr.gui_elements.spacrFrame": [[2, 3, 1, "", "rounded_rectangle"]], "spacr.gui_elements.spacrLabel": [[2, 3, 1, "", "set_text"]], "spacr.gui_elements.spacrProgressBar": [[2, 3, 1, "", "set_label_position"], [2, 3, 1, "", "update_label"]], "spacr.gui_elements.spacrProgressBar_v1": [[2, 3, 1, "", "set_label_position"], [2, 3, 1, "", "update_label"]], "spacr.gui_elements.spacrSwitch": [[2, 3, 1, "", "animate_movement"], [2, 3, 1, "", "animate_switch"], [2, 3, 1, "", "create_rounded_rectangle"], [2, 3, 1, "", "get"], [2, 3, 1, "", "set"], [2, 3, 1, "", "toggle"], [2, 3, 1, "", "update_switch"]], "spacr.gui_elements.spacrToolTip": [[2, 3, 1, "", "hide_tooltip"], [2, 3, 1, "", "show_tooltip"]], "spacr.gui_utils": [[2, 2, 1, "", "WriteToQueue"], [2, 1, 1, "", "annotate"], [2, 1, 1, "", "annotate_app"], [2, 1, 1, "", "annotate_with_image_refs"], [2, 1, 1, "", "cancel_after_tasks"], [2, 1, 1, "", "convert_settings_dict_for_gui"], [2, 1, 1, "", "create_input_field"], [2, 1, 1, "", "download_dataset"], [2, 1, 1, "", "download_hug_dataset"], [2, 1, 1, "", "ensure_after_tasks"], [2, 1, 1, "", "function_gui_wrapper"], [2, 1, 1, "", "generate_annotate_fields"], [2, 1, 1, "", "hide_all_settings"], [2, 1, 1, "", "load_app"], [2, 1, 1, "", "load_next_app"], [2, 1, 1, "", "main_thread_update_function"], [2, 1, 1, "", "parse_list"], [2, 1, 1, "", "parse_list_v1"], [2, 1, 1, "", "proceed_with_app"], [2, 1, 1, "", "process_stdout_stderr"], [2, 1, 1, "", "run_annotate_app"], [2, 1, 1, "", "run_function_gui"], [2, 1, 1, "", "setup_frame"], [2, 1, 1, "", "spacrFigShow"]], "spacr.gui_utils.WriteToQueue": [[2, 3, 1, "", "flush"], [2, 3, 1, "", "write"]], "spacr.io": [[2, 2, 1, "", "CombineLoaders"], [2, 2, 1, "", "CombinedDataset"], [2, 2, 1, "", "MyDataset"], [2, 2, 1, "", "NoClassDataset"], [2, 2, 1, "", "TarImageDataset"], [2, 1, 1, "", "concatenate_and_normalize"], [2, 1, 1, "", "convert_numpy_to_tiff"], [2, 1, 1, "", "delete_empty_subdirectories"], [2, 1, 1, "", "generate_cellpose_train_test"], [2, 1, 1, "", "preprocess_img_data"], [2, 1, 1, "", "read_plot_model_stats"]], "spacr.io.CombineLoaders": [[2, 3, 1, "", "__iter__"], [2, 3, 1, "", "__next__"], [2, 4, 1, "", "loader_iters"], [2, 4, 1, "", "train_loaders"]], "spacr.io.MyDataset": [[2, 3, 1, "", "get_plate"], [2, 3, 1, "", "load_image"], [2, 3, 1, "", "shuffle_dataset"]], "spacr.io.NoClassDataset": [[2, 3, 1, "", "load_image"], [2, 3, 1, "", "shuffle_dataset"]], "spacr.logger": [[2, 1, 1, "", "log_function_call"]], "spacr.measure": [[2, 1, 1, "", "filepaths_to_database"], [2, 1, 1, "", "generate_cellpose_train_set"], [2, 1, 1, "", "get_components"], [2, 1, 1, "", "get_object_counts"], [2, 1, 1, "", "img_list_to_grid"], [2, 1, 1, "", "measure_crop"], [2, 1, 1, "", "process_meassure_crop_results"], [2, 1, 1, "", "save_and_add_image_to_grid"]], "spacr.plot": [[2, 1, 1, "", "generate_mask_random_cmap"], [2, 1, 1, "", "generate_plate_heatmap"], [2, 1, 1, "", "normalize_and_visualize"], [2, 1, 1, "", "plot_arrays"], [2, 1, 1, "", "plot_comparison_results"], [2, 1, 1, "", "plot_feature_importance"], [2, 1, 1, "", "plot_histogram"], [2, 1, 1, "", "plot_image_mask_overlay"], [2, 1, 1, "", "plot_images_and_arrays"], [2, 1, 1, "", "plot_lorenz_curves"], [2, 1, 1, "", "plot_masks"], [2, 1, 1, "", "plot_merged"], [2, 1, 1, "", "plot_object_outlines"], [2, 1, 1, "", "plot_permutation"], [2, 1, 1, "", "plot_plates"], [2, 1, 1, "", "plot_resize"], [2, 1, 1, "", "print_mask_and_flows"], [2, 1, 1, "", "random_cmap"], [2, 1, 1, "", "read_and_plot__vision_results"], [2, 1, 1, "", "visualize_cellpose_masks"], [2, 1, 1, "", "visualize_masks"], [2, 1, 1, "", "volcano_plot"]], "spacr.sequencing": [[2, 1, 1, "", "apply_transformation"], [2, 1, 1, "", "calculate_p_values"], [2, 1, 1, "", "check_normality"], [2, 1, 1, "", "clean_controls"], [2, 1, 1, "", "complement"], [2, 1, 1, "", "consensus_sequence"], [2, 1, 1, "", "consensus_sequence_v1"], [2, 1, 1, "", "count_mismatches"], [2, 1, 1, "", "equalize_lengths"], [2, 1, 1, "", "extract_barcodes_from_fastq"], [2, 1, 1, "", "extract_barcodes_from_fastq_v1"], [2, 1, 1, "", "extract_barecodes"], [2, 1, 1, "", "file_len"], [2, 1, 1, "", "find_grna"], [2, 1, 1, "", "generate_barecode_mapping"], [2, 1, 1, "", "generate_fraction_map"], [2, 1, 1, "", "generate_plate_heatmap"], [2, 1, 1, "", "get_read_data"], [2, 1, 1, "", "get_sequence_data"], [2, 1, 1, "", "get_top_two_matches"], [2, 1, 1, "", "grna_plate_heatmap"], [2, 1, 1, "", "map_unmapped_grnas"], [2, 1, 1, "", "parse_gz_files"], [2, 1, 1, "", "perform_mixed_model"], [2, 1, 1, "", "perform_regression"], [2, 1, 1, "", "plot_data"], [2, 1, 1, "", "plot_plates"], [2, 1, 1, "", "pos_dict"], [2, 1, 1, "", "precess_reads"], [2, 1, 1, "", "process_barecodes"], [2, 1, 1, "", "process_chunk_for_consensus"], [2, 1, 1, "", "process_chunk_for_mapping"], [2, 1, 1, "", "process_scores"], [2, 1, 1, "", "regression"], [2, 1, 1, "", "regression_model"], [2, 1, 1, "", "remove_outliers"], [2, 1, 1, "", "reverse_complement"], [2, 1, 1, "", "save_to_hdf"], [2, 1, 1, "", "split_fastq"], [2, 1, 1, "", "test_error"], [2, 1, 1, "", "translate_barecodes"], [2, 1, 1, "", "truncate_read"], [2, 1, 1, "", "vert_horiz"]], "spacr.settings": [[2, 1, 1, "", "check_settings"], [2, 1, 1, "", "deep_spacr_defaults"], [2, 1, 1, "", "generate_fields"], [2, 1, 1, "", "get_analyze_reads_default_settings"], [2, 1, 1, "", "get_analyze_recruitment_default_settings"], [2, 1, 1, "", "get_check_cellpose_models_default_settings"], [2, 1, 1, "", "get_identify_masks_finetune_default_settings"], [2, 1, 1, "", "get_map_barcodes_default_settings"], [2, 1, 1, "", "get_measure_crop_settings"], [2, 1, 1, "", "get_perform_regression_default_settings"], [2, 1, 1, "", "get_train_cellpose_default_settings"], [2, 1, 1, "", "set_annotate_default_settings"], [2, 1, 1, "", "set_default_analyze_screen"], [2, 1, 1, "", "set_default_generate_barecode_mapping"], [2, 1, 1, "", "set_default_plot_merge_settings"], [2, 1, 1, "", "set_default_settings_preprocess_generate_masks"], [2, 1, 1, "", "set_default_settings_preprocess_img_data"], [2, 1, 1, "", "set_default_train_test_model"], [2, 1, 1, "", "set_default_umap_image_settings"], [2, 1, 1, "", "set_generate_training_dataset_defaults"]], "spacr.sim": [[2, 1, 1, "", "append_database"], [2, 1, 1, "", "calculate_permutation_importance"], [2, 1, 1, "", "cell_level_roc_auc"], [2, 1, 1, "", "classifier"], [2, 1, 1, "", "classifier_v2"], [2, 1, 1, "", "compute_precision_recall"], [2, 1, 1, "", "compute_roc_auc"], [2, 1, 1, "", "create_database"], [2, 1, 1, "", "dist_gen"], [2, 1, 1, "", "generate_floats"], [2, 1, 1, "", "generate_gene_list"], [2, 1, 1, "", "generate_gene_weights"], [2, 1, 1, "", "generate_integers"], [2, 1, 1, "", "generate_paramiters"], [2, 1, 1, "", "generate_plate_map"], [2, 1, 1, "", "generate_power_law_distribution"], [2, 1, 1, "", "generate_shap_summary_plot"], [2, 1, 1, "", "generate_well_score"], [2, 1, 1, "", "get_optimum_threshold"], [2, 1, 1, "", "gini"], [2, 1, 1, "", "gini_coefficient"], [2, 1, 1, "", "gini_gene_well"], [2, 1, 1, "", "normalize_array"], [2, 1, 1, "", "plot_confusion_matrix"], [2, 1, 1, "", "plot_correlation_matrix"], [2, 1, 1, "", "plot_feature_importance"], [2, 1, 1, "", "plot_histogram"], [2, 1, 1, "", "plot_partial_dependences"], [2, 1, 1, "", "plot_roc_pr"], [2, 1, 1, "", "plot_simulations"], [2, 1, 1, "", "power_law_dist_gen"], [2, 1, 1, "", "read_simulations_table"], [2, 1, 1, "", "regression_roc_auc"], [2, 1, 1, "", "remove_columns_with_single_value"], [2, 1, 1, "", "remove_constant_columns"], [2, 1, 1, "", "run_and_save"], [2, 1, 1, "", "run_experiment"], [2, 1, 1, "", "run_multiple_simulations"], [2, 1, 1, "", "run_simulation"], [2, 1, 1, "", "save_data"], [2, 1, 1, "", "save_plot"], [2, 1, 1, "", "save_shap_plot"], [2, 1, 1, "", "sequence_plates"], [2, 1, 1, "", "update_scores_and_get_cm"], [2, 1, 1, "", "validate_and_adjust_beta_params"], [2, 1, 1, "", "vis_dists"], [2, 1, 1, "", "visualize_all"]], "spacr.timelapse": [[2, 1, 1, "", "analyze_calcium_oscillations"], [2, 1, 1, "", "exponential_decay"], [2, 1, 1, "", "infected_vs_noninfected"], [2, 1, 1, "", "plot_data"], [2, 1, 1, "", "preprocess_pathogen_data"], [2, 1, 1, "", "save_figure"], [2, 1, 1, "", "save_results_dataframe"], [2, 1, 1, "", "summarize_per_well"], [2, 1, 1, "", "summarize_per_well_inf_non_inf"]], "spacr.utils": [[2, 2, 1, "", "Cache"], [2, 2, 1, "", "CustomCellClassifier"], [2, 2, 1, "", "EarlyFusion"], [2, 2, 1, "", "FocalLossWithLogits"], [2, 2, 1, "", "GradCAM"], [2, 2, 1, "", "IntegratedGradients"], [2, 1, 1, "", "MLR"], [2, 2, 1, "", "MultiScaleBlockWithAttention"], [2, 2, 1, "", "ResNet"], [2, 2, 1, "", "SaliencyMapGenerator"], [2, 2, 1, "", "ScaledDotProductAttention"], [2, 2, 1, "", "SelectChannels"], [2, 2, 1, "", "SelfAttention"], [2, 2, 1, "", "SpatialAttention"], [2, 2, 1, "", "TorchModel"], [2, 1, 1, "", "add_images_to_tar"], [2, 1, 1, "", "adjust_cell_masks"], [2, 1, 1, "", "annotate_conditions"], [2, 1, 1, "", "annotate_predictions"], [2, 1, 1, "", "apply_mask"], [2, 1, 1, "", "assign_colors"], [2, 1, 1, "", "augment_classes"], [2, 1, 1, "", "augment_dataset"], [2, 1, 1, "", "augment_image"], [2, 1, 1, "", "augment_images"], [2, 1, 1, "", "augment_single_image"], [2, 1, 1, "", "boundary_f1_score"], [2, 1, 1, "", "calculate_iou"], [2, 1, 1, "", "calculate_loss"], [2, 1, 1, "", "check_mask_folder"], [2, 1, 1, "", "check_multicollinearity"], [2, 1, 1, "", "check_normality"], [2, 1, 1, "", "check_overlap"], [2, 1, 1, "", "choose_model"], [2, 1, 1, "", "class_visualization"], [2, 1, 1, "", "classification_metrics"], [2, 1, 1, "", "close_file_descriptors"], [2, 1, 1, "", "close_multiprocessing_processes"], [2, 1, 1, "", "cluster_feature_analysis"], [2, 1, 1, "", "combine_results"], [2, 1, 1, "", "compute_ap_over_iou_thresholds"], [2, 1, 1, "", "compute_average_precision"], [2, 1, 1, "", "compute_irm_penalty"], [2, 1, 1, "", "compute_segmentation_ap"], [2, 1, 1, "", "convert_and_relabel_masks"], [2, 1, 1, "", "correct_masks"], [2, 1, 1, "", "correct_paths"], [2, 1, 1, "", "count_reads_in_fastq"], [2, 1, 1, "", "create_circular_mask"], [2, 1, 1, "", "delete_folder"], [2, 1, 1, "", "dice_coefficient"], [2, 1, 1, "", "extract_boundaries"], [2, 1, 1, "", "extract_features"], [2, 1, 1, "", "filter_columns"], [2, 1, 1, "", "filter_dataframe_features"], [2, 1, 1, "", "find_non_overlapping_position"], [2, 1, 1, "", "fishers_odds"], [2, 1, 1, "", "generate_colors"], [2, 1, 1, "", "generate_dependent_variable"], [2, 1, 1, "", "generate_fraction_map"], [2, 1, 1, "", "get_db_paths"], [2, 1, 1, "", "get_files_from_dir"], [2, 1, 1, "", "get_ml_results_paths"], [2, 1, 1, "", "get_paths_from_db"], [2, 1, 1, "", "get_sequencing_paths"], [2, 1, 1, "", "get_submodules"], [2, 1, 1, "", "initiate_counter"], [2, 1, 1, "", "invert_image"], [2, 1, 1, "", "is_list_of_lists"], [2, 1, 1, "", "is_multiprocessing_process"], [2, 1, 1, "", "jaccard_index"], [2, 1, 1, "", "lasso_reg"], [2, 1, 1, "", "load_image"], [2, 1, 1, "", "load_image_paths"], [2, 1, 1, "", "mask_object_count"], [2, 1, 1, "", "match_masks"], [2, 1, 1, "", "measure_test_mode"], [2, 1, 1, "", "merge_dataframes"], [2, 1, 1, "", "merge_regression_res_with_metadata"], [2, 1, 1, "", "merge_touching_objects"], [2, 1, 1, "", "model_metrics"], [2, 1, 1, "", "normalize_to_dtype"], [2, 1, 1, "", "pad_to_same_shape"], [2, 1, 1, "", "perform_statistical_tests"], [2, 1, 1, "", "pick_best_model"], [2, 1, 1, "", "plot_clusters"], [2, 1, 1, "", "plot_clusters_grid"], [2, 1, 1, "", "plot_embedding"], [2, 1, 1, "", "plot_grid"], [2, 1, 1, "", "plot_image"], [2, 1, 1, "", "plot_images_by_cluster"], [2, 1, 1, "", "plot_umap_images"], [2, 1, 1, "", "preprocess_data"], [2, 1, 1, "", "preprocess_image"], [2, 1, 1, "", "print_progress"], [2, 1, 1, "", "process_masks"], [2, 1, 1, "", "process_vision_results"], [2, 1, 1, "", "random_forest_feature_importance"], [2, 1, 1, "", "recommend_target_layers"], [2, 1, 1, "", "reduction_and_clustering"], [2, 1, 1, "", "remove_canvas"], [2, 1, 1, "", "remove_highly_correlated_columns"], [2, 1, 1, "", "remove_intensity_objects"], [2, 1, 1, "", "remove_low_variance_columns"], [2, 1, 1, "", "remove_noise"], [2, 1, 1, "", "reset_mp"], [2, 1, 1, "", "resize_images_and_labels"], [2, 1, 1, "", "resize_labels_back"], [2, 1, 1, "", "save_file_lists"], [2, 1, 1, "", "search_reduction_and_clustering"], [2, 1, 1, "", "setup_plot"], [2, 1, 1, "", "show_cam_on_image"], [2, 1, 1, "", "smooth_hull_lines"], [2, 1, 1, "", "split_my_dataset"]], "spacr.utils.Cache": [[2, 4, 1, "", "cache"], [2, 3, 1, "", "get"], [2, 4, 1, "", "max_size"], [2, 3, 1, "", "put"]], "spacr.utils.CustomCellClassifier": [[2, 3, 1, "", "custom_forward"], [2, 3, 1, "", "forward"]], "spacr.utils.EarlyFusion": [[2, 3, 1, "", "forward"]], "spacr.utils.FocalLossWithLogits": [[2, 3, 1, "", "forward"]], "spacr.utils.GradCAM": [[2, 3, 1, "", "forward"]], "spacr.utils.IntegratedGradients": [[2, 3, 1, "", "generate_integrated_gradients"]], "spacr.utils.MultiScaleBlockWithAttention": [[2, 3, 1, "", "custom_forward"], [2, 3, 1, "", "forward"]], "spacr.utils.ResNet": [[2, 3, 1, "", "forward"], [2, 3, 1, "", "initialize_base"]], "spacr.utils.SaliencyMapGenerator": [[2, 3, 1, "", "compute_saliency_maps"], [2, 3, 1, "", "plot_saliency_maps"]], "spacr.utils.ScaledDotProductAttention": [[2, 3, 1, "", "forward"]], "spacr.utils.SelfAttention": [[2, 3, 1, "", "forward"]], "spacr.utils.SpatialAttention": [[2, 3, 1, "", "forward"]], "spacr.utils.TorchModel": [[2, 3, 1, "", "apply_dropout_rate"], [2, 3, 1, "", "forward"], [2, 3, 1, "", "get_num_ftrs"], [2, 3, 1, "", "get_weight_choice"], [2, 3, 1, "", "init_base_model"], [2, 3, 1, "", "init_spacr_classifier"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "terms": {"": 2, "0": 2, "0001": 2, "001": 2, "01": 2, "05": 2, "1": 2, "10": 2, "100": 2, "1000": 2, "100000": 2, "1000000": 2, "12": 2, "128": 2, "15": 2, "16": 2, "1d": 2, "2": 2, "20": 2, "200": 2, "2024": 2, "224": 2, "25": 2, "2nd": 2, "3": 2, "30": 2, "3025": 2, "32": 2, "4": 2, "5": 2, "50": 2, "55": 2, "6": 2, "64": 2, "65": 2, "7": 2, "75": 2, "8": 2, "85": 2, "9": 2, "95": 2, "98": 2, "98th": 2, "99": 2, "A": 2, "If": 2, "The": 2, "_": 2, "__iter__": [1, 2], "__next__": [1, 2], "_metadata": 2, "_time": 2, "abort": 2, "about": 2, "abov": 2, "accord": 2, "accumul": 2, "accuraci": 2, "action": 2, "activ": 2, "active_categori": 2, "active_color": 2, "active_gene_list": 2, "ad": 2, "adamw": 2, "add": [1, 2], "add_colored_bord": [1, 2], "add_images_to_tar": [1, 2], "addit": 2, "adjust": 2, "adjust_cell_mask": [1, 2], "advanc": 2, "advanced_set": 2, "after": 2, "afterward": 2, "against": 2, "agg_typ": 2, "algorithm": 2, "align": 2, "align_length": 2, "all": 2, "all_df": 2, "all_elements_match": [1, 2], "all_label": 2, "allq": 2, "alpha": 2, "alpha_valu": 2, "although": 2, "alwai": 2, "amsgrad": 2, "an": 2, "analysi": 2, "analyz": 2, "analyze_associ": [1, 2], "analyze_calcium_oscil": [1, 2], "analyze_data_reg": [1, 2], "analyze_plaqu": [1, 2], "analyze_recruit": [1, 2], "ani": 2, "anim": 2, "animate_mov": [1, 2], "animate_switch": [1, 2], "animate_zoom": [1, 2], "annot": [1, 2], "annotate_app": [1, 2], "annotate_condit": [1, 2], "annotate_predict": [1, 2], "annotate_result": [1, 2], "annotate_with_image_ref": [1, 2], "annotateapp": [1, 2], "annotated_class": 2, "annotation_column": 2, "anoth": 2, "anova": 2, "anova_df": 2, "app_annot": 1, "app_classifi": 1, "app_func": 2, "app_make_mask": 1, "app_mask": 1, "app_measur": 1, "app_nam": 2, "app_sequenc": 1, "app_umap": 1, "append": 2, "append_databas": [1, 2], "appli": 2, "applic": 2, "apply_brush": [1, 2], "apply_brush_releas": [1, 2], "apply_dividing_lin": [1, 2], "apply_dropout_r": [1, 2], "apply_magic_wand": [1, 2], "apply_mask": [1, 2], "apply_model": [1, 2], "apply_model_to_tar": [1, 2], "apply_model_to_tar_v1": [1, 2], "apply_norm": [1, 2], "apply_transform": [1, 2], "apply_zoom_on_ent": [1, 2], "ar": 2, "area": 2, "arg": 2, "arr": 2, "arrai": 2, "assign_color": [1, 2], "attempt": 2, "attent": 2, "auc": 2, "augment": 2, "augment_class": [1, 2], "augment_dataset": [1, 2], "augment_imag": [1, 2], "augment_single_imag": [1, 2], "augmented_dataset": 2, "augmented_imag": 2, "avail": 2, "averag": 2, "avg": 2, "avg_cells_per_wel": 2, "avg_genes_per_wel": 2, "avg_reads_per_gen": 2, "avoid": 2, "ax": 2, "axi": 2, "b": 2, "background": 2, "balanc": 2, "bar": 2, "barcod": 2, "barcode_coordin": 2, "barcode_dict": 2, "barcode_map": 2, "base": 2, "base_dir": 2, "base_model_dict": 2, "base_path": 2, "baselin": 2, "batch": 2, "batch_siz": 2, "been": 2, "being": 2, "below": 2, "beta": 2, "between": 2, "bg": 2, "bg_color": 2, "bin": 2, "binari": 2, "binary_cross_entropy_with_logit": 2, "binwidth": 2, "black": 2, "black_background": 2, "block": 2, "blue": 2, "blur_everi": 2, "bool": 2, "boost": 2, "border_color": 2, "border_width": 2, "bottom": 2, "boundari": 2, "boundary_f1_scor": [1, 2], "btn_col": 2, "buffer": 2, "button_scrollable_fram": 2, "by_plat": 2, "c": 2, "c1": 2, "c2": 2, "c3": 2, "cach": [1, 2], "calcul": 2, "calculate_grid_dimens": [1, 2], "calculate_i": [1, 2], "calculate_loss": [1, 2], "calculate_p_valu": [1, 2], "calculate_permutation_import": [1, 2], "call": 2, "callabl": 2, "can": 2, "cancel_after_task": [1, 2], "canva": 2, "canvas_height": 2, "canvas_to_imag": [1, 2], "canvas_var": 2, "canvas_widget": 2, "canvas_widget_var": 2, "canvas_width": 2, "care": 2, "case": 2, "categori": 2, "cell": 2, "cell_area": 2, "cell_channel": 2, "cell_channel_1_mean_intens": 2, "cell_cm": 2, "cell_df": 2, "cell_dim": 2, "cell_fold": 2, "cell_id": 2, "cell_level_roc_auc": [1, 2], "cell_loc": 2, "cell_mask": 2, "cell_min": 2, "cell_png": 2, "cell_pr_dict": 2, "cell_pr_dict_df": 2, "cell_roc_dict": 2, "cell_roc_dict_df": 2, "cell_scor": 2, "cell_size_min": 2, "cellprob_threshold": 2, "cells_per_wel": 2, "center": 2, "chan_dict": 2, "channel": 2, "channel_of_interest": 2, "charact": 2, "characterist": 2, "check": 2, "check_cellpose_model": [1, 2], "check_index": [1, 2], "check_mask_fold": [1, 2], "check_multicollinear": [1, 2], "check_norm": [1, 2], "check_overlap": [1, 2], "check_set": [1, 2], "checkbutton": 2, "checkpoint": 2, "choic": 2, "choos": 2, "choose_model": [1, 2], "chosen": 2, "chri": 1, "chunk": 2, "chunk_siz": 2, "circular": 2, "class": 2, "class_data": 2, "class_metadata": 2, "class_nam": 2, "class_visu": [1, 2], "classif": 2, "classifi": [1, 2], "classification_metr": [1, 2], "classifier_accuraci": 2, "classifier_v2": [1, 2], "clean": 2, "clean_control": [1, 2], "clean_regress": 2, "clear_descript": [1, 2], "clear_fram": [1, 2], "clear_object": [1, 2], "close": 2, "close_dropdown": [1, 2], "close_file_descriptor": [1, 2], "close_multiprocessing_process": [1, 2], "closest": 2, "cluster": 2, "cluster_cent": 2, "cluster_col": 2, "cluster_data": 2, "cluster_feature_analysi": [1, 2], "cluster_imag": 2, "cluster_indic": 2, "cm": 2, "cmap": 2, "coef_df": 2, "coeff": 2, "coeffici": 2, "col": 2, "col_to_compar": 2, "col_valu": 2, "color": 2, "colormap": 2, "column": 2, "com": 2, "combin": 2, "combine_result": [1, 2], "combineddataset": [1, 2], "combineload": [1, 2], "command": 2, "compar": 2, "compare_cellpose_mask": [1, 2], "compare_mask": [1, 2], "comparison": 2, "comparison_result": 2, "comparison_titl": 2, "complement": [1, 2], "complevel": 2, "compon": 2, "compress": 2, "comput": 2, "compute_ap_over_iou_threshold": [1, 2], "compute_average_precis": [1, 2], "compute_irm_penalti": [1, 2], "compute_precision_recal": [1, 2], "compute_roc_auc": [1, 2], "compute_saliency_map": [1, 2], "compute_segmentation_ap": [1, 2], "compute_smooth_grad": [1, 2], "concatenate_and_norm": [1, 2], "condit": 2, "confus": 2, "consensu": 2, "consensus_sequ": [1, 2], "consensus_sequence_v1": [1, 2], "consid": 2, "console_output_var": 2, "constant": 2, "construct_well_graph": [1, 2], "contain": 2, "content": 1, "control": 2, "control_gene_list": 2, "convert": 2, "convert_and_relabel_mask": [1, 2], "convert_numpy_to_tiff": [1, 2], "convert_settings_dict_for_gui": [1, 2], "coordin": 2, "copyright": 2, "core": 1, "correct_mask": [1, 2], "correct_path": [1, 2], "correctli": 2, "correl": 2, "correspond": 2, "count": 2, "count_mismatch": [1, 2], "count_reads_in_fastq": [1, 2], "counter_": 2, "cpu": 2, "creat": 2, "create_circular_mask": [1, 2], "create_databas": [1, 2], "create_graphs_for_wel": [1, 2], "create_input_field": [1, 2], "create_menu_bar": [1, 2], "create_rounded_rectangl": [1, 2], "create_sash": [1, 2], "create_startup_screen": [1, 2], "create_widget": [1, 2], "criteria": 2, "crop": 2, "crop_mod": 2, "csv": 2, "csv_file": 2, "csv_loc": 2, "csv_path": 2, "current": 2, "current_posit": 2, "curv": 2, "custom": 2, "custom_forward": [1, 2], "custom_measur": 2, "customcellclassifi": [1, 2], "cytoplasm": 2, "d_k": 2, "dark_grai": 2, "data": 2, "data_df": 2, "data_dir": 2, "data_set": 2, "databas": 2, "datafram": 2, "dataload": 2, "dataset": 2, "db_loc": 2, "db_path": 2, "dbscan": 2, "dbscan_param": 2, "decai": 2, "decod": [1, 2], "deep_spacr": 1, "deep_spacr_default": [1, 2], "default": 2, "default_app": 2, "default_valu": 2, "defin": 2, "degre": 2, "delai": 2, "delet": 2, "delete_empty_subdirectori": [1, 2], "delete_fold": [1, 2], "depend": 2, "dependent_vari": 2, "descript": 2, "descriptor": 2, "destin": 2, "determin": 2, "deviat": 2, "devic": 2, "df": 2, "df_l": 2, "diamet": 2, "dice_coeffici": [1, 2], "dict": 2, "dictionari": 2, "differ": 2, "dilation_radiu": 2, "dimension": 2, "dir_path": 2, "direct": 2, "directori": 2, "displai": 2, "display_imag": [1, 2], "display_zoomed_imag": [1, 2], "dist": 2, "dist_gen": [1, 2], "distanc": 2, "distribut": 2, "dna_sequ": 2, "dot": 2, "dot_siz": 2, "download": 2, "download_dataset": [1, 2], "download_hug_dataset": [1, 2], "draw": [1, 2], "draw_coordin": 2, "draw_on_zoomed_mask": [1, 2], "draw_rounded_rectangl": [1, 2], "draw_rounded_squar": [1, 2], "dropout": 2, "dropout_r": 2, "dst": 2, "dtype": 2, "dummi": 2, "dummy_w": 2, "dure": 2, "dv_df": 2, "dv_loc": 2, "e": 2, "each": 2, "earli": 2, "earlyfus": [1, 2], "effect_size_threshold": 2, "einarolafsson": 2, "element": 2, "embed": 2, "embedding_by_control": 2, "empir": 2, "empti": 2, "encod": [1, 2], "end": 2, "end_x": 2, "ensur": 2, "ensure_after_task": [1, 2], "entir": 2, "entri": 2, "ep": 2, "epoch": 2, "epsilon": 2, "eq": 2, "equal": 2, "equalize_length": [1, 2], "erase_brush": [1, 2], "erase_brush_releas": [1, 2], "erase_object": [1, 2], "erm": 2, "error": 2, "etc": 2, "evalu": 2, "evaluate_model_cor": [1, 2], "evaluate_model_perform": [1, 2], "event": 2, "everi": 2, "everyon": 2, "exclud": 2, "exhaust": 2, "exist": 2, "expect": 2, "expected_typ": 2, "experi": 2, "exponential_decai": [1, 2], "extens": 2, "extract": 2, "extract_barcodes_from_fastq": [1, 2], "extract_barcodes_from_fastq_v1": [1, 2], "extract_barecod": [1, 2], "extract_boundari": [1, 2], "extract_featur": [1, 2], "extract_metadata_from_path": [1, 2], "f1": 2, "f1_score": 2, "face": 2, "failur": 2, "fals": 2, "faster": 2, "fastq": 2, "fastq_fil": 2, "fastq_r1": 2, "fastq_r2": 2, "featur": 2, "feature_importance_df": 2, "feature_str": 2, "fg_color": 2, "fig": 2, "fig_queu": 2, "fig_queue_var": 2, "figur": 2, "figure_numb": 2, "figures": 2, "file": 2, "file_extens": 2, "file_len": [1, 2], "file_metadata": 2, "file_path": 2, "file_typ": 2, "filenam": 2, "filepath": 2, "filepaths_to_databas": [1, 2], "files_process": 2, "files_to_process": 2, "fill": 2, "fill_object": [1, 2], "filter": 2, "filter_bi": 2, "filter_channel": [1, 2], "filter_column": [1, 2], "filter_data": 2, "filter_dataframe_featur": [1, 2], "filter_valu": 2, "filtered_df": 2, "final_color": 2, "find": 2, "find_grna": [1, 2], "find_non_overlapping_posit": [1, 2], "find_optimal_threshold": [1, 2], "finish_dividing_lin": [1, 2], "finish_draw": [1, 2], "finish_drawing_if_act": [1, 2], "first": 2, "fisher": 2, "fishers_odd": [1, 2], "fit": 2, "flag": 2, "float": 2, "float32": 2, "flow": 2, "flow_threshold": 2, "fluctuation_threshold": 2, "flush": [1, 2], "fname": 2, "focallosswithlogit": [1, 2], "folder": 2, "folder_path": 2, "follow": 2, "font": 2, "font_famili": 2, "font_nam": 2, "font_siz": 2, "font_styl": 2, "fontsiz": 2, "forest": 2, "format": 2, "former": 2, "forward": [1, 2], "fpr": 2, "fraction": 2, "fraction_threshold": 2, "frame": 2, "from": 2, "func": 2, "function": 2, "function_gui_wrapp": [1, 2], "fusion": 2, "g": 2, "gamma": 2, "gene": 2, "gene_column": 2, "gene_fraction_map": 2, "gene_ineq_coeff": 2, "gener": 2, "generate_annotate_field": [1, 2], "generate_barecode_map": [1, 2], "generate_cellpose_mask": [1, 2], "generate_cellpose_train_set": [1, 2], "generate_cellpose_train_test": [1, 2], "generate_color": [1, 2], "generate_dataset": [1, 2], "generate_dataset_from_list": [1, 2], "generate_dataset_v1": [1, 2], "generate_dependent_vari": [1, 2], "generate_field": [1, 2], "generate_float": [1, 2], "generate_fraction_map": [1, 2], "generate_gene_list": [1, 2], "generate_gene_weight": [1, 2], "generate_image_umap": [1, 2], "generate_integ": [1, 2], "generate_integrated_gradi": [1, 2], "generate_load": [1, 2], "generate_mask_random_cmap": [1, 2], "generate_masks_from_img": [1, 2], "generate_ml_scor": [1, 2], "generate_paramit": [1, 2], "generate_plate_heatmap": [1, 2], "generate_plate_map": [1, 2], "generate_power_law_distribut": [1, 2], "generate_shap_summary_plot": [1, 2], "generate_synthetic_grna_data": [1, 2], "generate_training_data_file_list": [1, 2], "generate_training_dataset": [1, 2], "generate_training_dataset_v1": [1, 2], "generate_well_scor": [1, 2], "genes_per_well_df": 2, "get": [1, 2], "get_analyze_reads_default_set": [1, 2], "get_analyze_recruitment_default_set": [1, 2], "get_check_cellpose_models_default_set": [1, 2], "get_compon": [1, 2], "get_db_path": [1, 2], "get_files_from_dir": [1, 2], "get_font": [1, 2], "get_font_path": [1, 2], "get_icon_path": [1, 2], "get_identify_masks_finetune_default_set": [1, 2], "get_map_barcodes_default_set": [1, 2], "get_measure_crop_set": [1, 2], "get_ml_results_path": [1, 2], "get_num_ftr": [1, 2], "get_object_count": [1, 2], "get_on_image_click": [1, 2], "get_optimum_threshold": [1, 2], "get_paths_from_db": [1, 2], "get_perform_regression_default_set": [1, 2], "get_plat": [1, 2], "get_read_data": [1, 2], "get_scaling_factor": [1, 2], "get_sequence_data": [1, 2], "get_sequencing_path": [1, 2], "get_submodul": [1, 2], "get_top_two_match": [1, 2], "get_train_cellpose_default_set": [1, 2], "get_weight_choic": [1, 2], "gif": 2, "gini": [1, 2], "gini_coeffici": [1, 2], "gini_gene_wel": [1, 2], "given": 2, "grad_cam": 2, "gradcam": [1, 2], "gradient": 2, "gradient_accumul": 2, "gradient_accumulation_step": 2, "gradient_boost": 2, "graph": 2, "graph_learn": 1, "graphtransform": [1, 2], "grayscal": 2, "green": 2, "grid": 2, "grna": 2, "grna_data": 2, "grna_df": 2, "grna_plate_heatmap": [1, 2], "group": 2, "grouping_var": 2, "gui": 1, "gui_app": [1, 2], "gui_cor": 1, "gui_el": 1, "gui_util": 1, "gz": 2, "h": 2, "ha": 2, "have": 2, "hdf": 2, "heatmap": 2, "height": 2, "hela": 2, "help": 2, "helper": 2, "hidden_feat": 2, "hide": 2, "hide_all_set": [1, 2], "hide_tooltip": [1, 2], "high": 2, "highest": 2, "highli": 2, "histogram": 2, "hit": 2, "home": 2, "hook": 2, "horizontal_contain": 2, "host": 2, "htm": 2, "http": 2, "hug": 2, "hyperparamet": 2, "i": 2, "icon_nam": 2, "id": 2, "ident": 2, "identifi": 2, "identify_masks_finetun": [1, 2], "ignor": 2, "imag": 2, "image_fold": 2, "image_metadata": 2, "image_nr": 2, "image_path": 2, "image_paths_df": 2, "image_posit": 2, "image_s": 2, "image_to_canva": [1, 2], "image_typ": 2, "imagenet": 2, "img": 2, "img_height": 2, "img_list_to_grid": [1, 2], "img_path": 2, "img_siz": 2, "img_width": 2, "img_zoom": 2, "implement": 2, "import": 2, "import_btn": 2, "import_set": [1, 2], "improv": 2, "in_channel": 2, "in_feat": 2, "inactive_color": 2, "includ": 2, "include_multiinfect": 2, "include_multinucl": 2, "include_noninfect": 2, "incom": 2, "index": [0, 2], "indic": 2, "individu": 2, "inequ": 2, "infected_vs_noninfect": [1, 2], "infer": 2, "inferno": 2, "inform": 2, "init_base_model": [1, 2], "init_spacr_classifi": [1, 2], "init_weight": 2, "initi": 2, "initialize_bas": [1, 2], "initialize_flag": [1, 2], "initiate_abort": [1, 2], "initiate_annotation_app": [1, 2], "initiate_count": [1, 2], "initiate_make_mask_app": [1, 2], "initiate_root": [1, 2], "input": 2, "input_fastq": 2, "input_tensor": 2, "instanc": 2, "instead": 2, "int": 2, "int64": 2, "integ": 2, "integr": 2, "integrated_grad": 2, "integratedgradi": [1, 2], "intens": 2, "intensity_threshold": 2, "interest": 2, "intermedeate_sav": 2, "intermedi": 2, "introduc": 2, "invari": 2, "invert": 2, "invert_imag": [1, 2], "invert_mask": [1, 2], "io": 1, "iou_threshold": 2, "irm": 2, "is_act": 2, "is_grayscal": 2, "is_list_of_list": [1, 2], "is_multiprocessing_process": [1, 2], "iter": 2, "its": 2, "itself": 2, "jaccard_index": [1, 2], "jitter": 2, "jitterplot_by_annot": [1, 2], "job": 2, "join_measurments_and_annot": [1, 2], "k": 2, "kei": 2, "kernel_s": 2, "kmean": 2, "kmeans_param": 2, "kruskal": 2, "kruskal_df": 2, "kwarg": 2, "l": 2, "l2_reg": 2, "label": 2, "label_text": 2, "lasso": 2, "lasso_reg": [1, 2], "later": 2, "latter": 2, "law": 2, "layer": 2, "layout": 2, "learn": 2, "learning_r": 2, "legend": 2, "length": 2, "level": 2, "like": 2, "likelihood": 2, "limit": 2, "line": 2, "linestyl": 2, "list": 2, "list1": 2, "list2": 2, "listedcolormap": 2, "load": 2, "load_app": [1, 2], "load_first_imag": [1, 2], "load_font": [1, 2], "load_icon": [1, 2], "load_imag": [1, 2], "load_image_and_mask": [1, 2], "load_image_path": [1, 2], "load_mnist_data": [1, 2], "load_next_app": [1, 2], "load_single_imag": [1, 2], "load_to_memori": 2, "loader": 2, "loader_class": 2, "loader_it": [1, 2], "loader_nam": 2, "loader_name_list": 2, "local": 2, "local_dir": 2, "locat": 2, "location_column": 2, "lock_": 2, "log": 2, "log_data": 2, "log_function_cal": [1, 2], "log_i": 2, "log_x": 2, "logarithm": 2, "logger": 1, "logistic_regress": 2, "logit": 2, "look": 2, "loss": 2, "loss_fn": 2, "loss_typ": 2, "low": 2, "lower": 2, "lower_percentil": 2, "lower_quantil": 2, "lr": 2, "lw": 2, "magic_wand_norm": [1, 2], "magic_wand_zoom": [1, 2], "main_thread_update_funct": [1, 2], "mainapp": [1, 2], "map": 2, "map_condit": [1, 2], "map_unmap": 2, "map_unmapped_grna": [1, 2], "marker": 2, "mask": 2, "mask1": 2, "mask2": 2, "mask3": 2, "mask_chan": 2, "mask_fldr": 2, "mask_fold": 2, "mask_object_count": [1, 2], "mask_pr": 2, "mask_tru": 2, "match": 2, "match_mask": [1, 2], "matplotlib": 2, "matrix": 2, "max_": 2, "max_attempt": 2, "max_jitt": 2, "max_nr": 2, "max_show": 2, "max_siz": [1, 2], "max_wel": 2, "maximum": 2, "maxvit": 2, "mean": 2, "mean_pr": 2, "measur": 1, "measure_crop": [1, 2], "measure_test_mod": [1, 2], "mechan": 2, "memori": 2, "merg": 2, "merge_datafram": [1, 2], "merge_pred_m": [1, 2], "merge_regression_res_with_metadata": [1, 2], "merge_touching_object": [1, 2], "merged_df": 2, "messag": 2, "metadata": 2, "metadata_fil": 2, "metadata_list": 2, "metadata_set": 2, "metadata_type_bi": 2, "method": 2, "metric": 2, "metrick": 2, "min_": 2, "min_cel": 2, "min_cell_count": 2, "min_count": 2, "min_dist": 2, "min_frequ": 2, "min_max": 2, "min_object": 2, "min_read": 2, "min_sampl": 2, "min_wel": 2, "minim": 2, "minimum": 2, "minu": 2, "mix": 2, "ml_analysi": [1, 2], "mlr": [1, 2], "mode": 2, "model": 2, "model_metr": [1, 2], "model_nam": 2, "model_path": 2, "model_typ": 2, "modif": 2, "modifymaskapp": [1, 2], "modul": [0, 1], "morphologi": 2, "move": 2, "msg": 2, "multicollinear": 2, "multipl": 2, "multiprocess": 2, "multiscaleblockwithattent": [1, 2], "must": 2, "mydataset": [1, 2], "n": 2, "n_class": 2, "n_cluster": 2, "n_col": 2, "n_estim": 2, "n_featur": 2, "n_job": 2, "n_neighbor": 2, "n_repeat": 2, "n_sampl": 2, "name": 2, "name_split": 2, "nan": 2, "nc": 2, "nc_max": 2, "ndarrai": 2, "necessari": 2, "need": 2, "neg": 2, "negative_control": 2, "negative_mean": 2, "negative_vari": 2, "neighbor": 2, "new": 2, "new_dtyp": 2, "new_stack": 2, "next": 2, "next_imag": [1, 2], "next_pag": [1, 2], "nn": 2, "noclassdataset": [1, 2], "non": 2, "none": 2, "nonparametric_method": 2, "normal": 2, "normalize_and_visu": [1, 2], "normalize_arrai": [1, 2], "normalize_imag": [1, 2], "normalize_sequencing_data": [1, 2], "normalize_to_dtyp": [1, 2], "normalized_distribut": 2, "normalized_imag": 2, "np": 2, "npy": 2, "npz": 2, "nr": 2, "nr_plate": 2, "nuclei": 2, "nuclei_fold": 2, "nucleu": 2, "nucleus_channel": 2, "nucleus_df": 2, "nucleus_dim": 2, "nucleus_mask": 2, "nucleus_min": 2, "nucleus_size_min": 2, "num_class": 2, "num_clust": 2, "num_el": 2, "num_fil": 2, "num_iter": 2, "num_lin": 2, "num_object": 2, "num_pred_mask": 2, "num_step": 2, "num_true_mask": 2, "number": 2, "number_of_all_gen": 2, "number_of_gen": 2, "numer": 2, "numeric_data": 2, "numpi": 2, "o": 2, "object": 2, "object_typ": 2, "ol": 2, "on_click": [1, 2], "on_configur": [1, 2], "on_ent": [1, 2], "on_enter_sash": [1, 2], "on_focus_in": [1, 2], "on_focus_out": [1, 2], "on_leav": [1, 2], "on_leave_sash": [1, 2], "on_select": [1, 2], "one": 2, "onli": 2, "open_dropdown": [1, 2], "opensan": 2, "oper": 2, "operation_typ": 2, "optim": 2, "optimizer_typ": 2, "optimum": 2, "option": 2, "ordereddict": 2, "orient": 2, "orig_dim": 2, "origin": 2, "other": 2, "other_posit": 2, "out_channel": 2, "out_feat": 2, "outlin": 2, "output": 2, "output_bas": 2, "output_fil": 2, "output_path": 2, "output_valu": 2, "overlai": 2, "overlap": 2, "overlap_threshold": 2, "overlay_mask_on_imag": [1, 2], "overridden": 2, "own": 2, "p1": 2, "p2": 2, "p3": 2, "p4": 2, "packag": [0, 1], "pad_char": 2, "pad_to_same_shap": [1, 2], "page": 0, "pair": 2, "panda": 2, "parallel": 2, "paramet": 2, "parasit": 2, "parasite_fold": 2, "parent": 2, "parent_fram": 2, "parent_frame_var": 2, "pars": 2, "parse_gz_fil": [1, 2], "parse_list": [1, 2], "parse_list_v1": [1, 2], "partial": 2, "partial_result": 2, "pass": 2, "path": 2, "path_annotation_tupl": 2, "pathogen": 2, "pathogen_channel": 2, "pathogen_df": 2, "pathogen_dim": 2, "pathogen_loc": 2, "pathogen_mask": 2, "pathogen_min": 2, "pathogen_size_min": 2, "paths_chunk": 2, "pc": 2, "pc_min": 2, "pd": 2, "pdf": 2, "peak_details_df": 2, "peak_height": 2, "penalti": 2, "per": 2, "percentag": 2, "percentil": 2, "percentile_list": 2, "perfect": 2, "perform": 2, "perform_mixed_model": [1, 2], "perform_regress": [1, 2], "perform_res": [1, 2], "perform_statistical_test": [1, 2], "perimet": 2, "perimeter_threshold": 2, "permut": 2, "permutation_df": 2, "perplex": 2, "phenotyp_col": 2, "pick_best_model": [1, 2], "pil": 2, "pin": 2, "pin_memori": 2, "plate": 2, "plate1": 2, "plate_map": 2, "plate_nam": 2, "plate_numb": 2, "plate_well_field_objectnumb": 2, "plot": 1, "plot_arrai": [1, 2], "plot_by_clust": 2, "plot_clust": [1, 2], "plot_clusters_grid": [1, 2], "plot_comparison_result": [1, 2], "plot_confusion_matrix": [1, 2], "plot_correlation_matrix": [1, 2], "plot_data": [1, 2], "plot_embed": [1, 2], "plot_feature_import": [1, 2], "plot_grid": [1, 2], "plot_histogram": [1, 2], "plot_imag": [1, 2], "plot_image_mask_overlai": [1, 2], "plot_images_and_arrai": [1, 2], "plot_images_by_clust": [1, 2], "plot_lorenz_curv": [1, 2], "plot_mask": [1, 2], "plot_merg": [1, 2], "plot_object_outlin": [1, 2], "plot_outlin": 2, "plot_partial_depend": [1, 2], "plot_permut": [1, 2], "plot_plat": [1, 2], "plot_point": 2, "plot_res": [1, 2], "plot_roc_pr": [1, 2], "plot_saliency_map": [1, 2], "plot_simul": [1, 2], "plot_titl": 2, "plot_umap_imag": [1, 2], "plt": 2, "png": 2, "png_channel": 2, "png_df": 2, "png_type": 2, "po": 2, "point": 2, "pointsiz": 2, "poisson": 2, "popul": 2, "pos_dict": [1, 2], "posit": 2, "positive_control": 2, "positive_mean": 2, "positive_vari": 2, "possibl": 2, "post_menu": [1, 2], "power": 2, "power_law_dist_gen": [1, 2], "pr": 2, "prauc": 2, "pre": 2, "precess_read": [1, 2], "precis": 2, "precomput": 2, "pred_loc": 2, "pred_mask": 2, "predict": 2, "prediction_pos_prob": 2, "predictor": 2, "prefilter_paths_annot": [1, 2], "prefix": 2, "preload": 2, "prepare_batch_for_cellpos": [1, 2], "preprocess": 2, "preprocess_data": [1, 2], "preprocess_generate_mask": [1, 2], "preprocess_imag": [1, 2], "preprocess_img_data": [1, 2], "preprocess_pathogen_data": [1, 2], "pretrain": 2, "previous_imag": [1, 2], "previous_pag": [1, 2], "print": 2, "print_mask_and_flow": [1, 2], "print_object_numb": 2, "print_progress": [1, 2], "probabl": 2, "proceed_with_app": [1, 2], "process": 2, "process_barecod": [1, 2], "process_chunk_for_consensu": [1, 2], "process_chunk_for_map": [1, 2], "process_console_queu": [1, 2], "process_fig_queu": [1, 2], "process_mask": [1, 2], "process_meassure_crop_result": [1, 2], "process_read": [1, 2], "process_scor": [1, 2], "process_sequencing_df": [1, 2], "process_stdout_stderr": [1, 2], "process_vision_result": [1, 2], "product": 2, "progress_bar_var": 2, "progressbar": 2, "proport": 2, "protein": 2, "provid": 2, "put": [1, 2], "q": 2, "q1": 2, "q2": 2, "q_var": 2, "qual": 2, "queri": 2, "queue": 2, "r": 2, "r1": 2, "r1_chunk": 2, "r1_fastq": 2, "r2": 2, "r2_chunk": 2, "r2_fastq": 2, "radiu": 2, "rais": 2, "random": 2, "random_cmap": [1, 2], "random_color": 2, "random_forest": 2, "random_forest_feature_import": [1, 2], "random_st": 2, "randomforestregressor": 2, "randomli": 2, "rang": 2, "rate": 2, "ratio": 2, "read": 2, "read_and_plot__vision_result": [1, 2], "read_plot_model_stat": [1, 2], "read_simulations_t": [1, 2], "recal": 2, "receiv": 2, "recip": 2, "recommend_target_lay": [1, 2], "record": 2, "recruit": 2, "redirect": 2, "reduc": 2, "reducer_hyperparameter_search": [1, 2], "reduct": 2, "reduction_and_clust": [1, 2], "reduction_method": 2, "reduction_param": 2, "refer": 2, "refine_model": 2, "reflect": 2, "reg_cm": 2, "reg_pr_dict_df": 2, "reg_roc_dict_df": 2, "reg_typ": 2, "regist": 2, "regress": [1, 2], "regression_analasi": [1, 2], "regression_model": [1, 2], "regression_roc_auc": [1, 2], "regression_typ": 2, "relabel": 2, "relabel_object": [1, 2], "remov": 2, "remove_background": 2, "remove_canva": [1, 2], "remove_columns_with_single_valu": [1, 2], "remove_constant_column": [1, 2], "remove_highly_correl": 2, "remove_highly_correlated_column": [1, 2], "remove_highly_correlated_featur": 2, "remove_image_canva": 2, "remove_intensity_object": [1, 2], "remove_kei": 2, "remove_low_variance_column": [1, 2], "remove_low_variance_featur": 2, "remove_nois": [1, 2], "remove_outli": [1, 2], "remove_outlier_gen": 2, "remove_row_column_effect": 2, "remove_small_object": [1, 2], "remove_transi": 2, "repeat": 2, "replac": 2, "repo_id": 2, "reposition_pan": [1, 2], "repositori": 2, "repres": 2, "reproduc": 2, "reset_mp": [1, 2], "resiz": 2, "resize_arrai": [1, 2], "resize_images_and_label": [1, 2], "resize_labels_back": [1, 2], "resized_imag": 2, "resized_label": 2, "resnet": [1, 2], "resnet50": 2, "resnet_typ": 2, "result": 2, "result_df": 2, "results_df": 2, "results_fil": 2, "results_nam": 2, "retain": 2, "retri": 2, "return": 2, "return_model": 2, "revers": 2, "reverse_compl": [1, 2], "rf_df": 2, "rh": 2, "right": 2, "risk": 2, "roc": 2, "root": 2, "rotat": 2, "rounded_rectangl": [1, 2], "row": 2, "row_limit": 2, "run": 2, "run_and_sav": [1, 2], "run_annotate_app": [1, 2], "run_experi": [1, 2], "run_function_gui": [1, 2], "run_multiple_simul": [1, 2], "run_simul": [1, 2], "salienc": 2, "saliency_map": 2, "saliencymapgener": [1, 2], "same": 2, "sampl": 2, "sample_s": 2, "save": 2, "save_al": 2, "save_and_add_image_to_grid": [1, 2], "save_cam": 2, "save_data": [1, 2], "save_dir": 2, "save_dtyp": 2, "save_figur": [1, 2], "save_file_list": [1, 2], "save_filtered_filelist": 2, "save_integrated_grad": 2, "save_mask": [1, 2], "save_pdf": 2, "save_plot": [1, 2], "save_results_and_figur": [1, 2], "save_results_datafram": [1, 2], "save_sali": 2, "save_shap_plot": [1, 2], "save_smooth_grad": 2, "save_to_hdf": [1, 2], "scale": 2, "scale_factor": 2, "scaleddotproductattent": [1, 2], "scatter": 2, "schedul": 2, "score": 2, "scrollable_fram": 2, "scrollable_frame_var": 2, "scrollbar": 2, "sd": 2, "sd_cells_per_wel": 2, "sd_genes_per_wel": 2, "sd_reads_per_gen": 2, "search": [0, 2], "search_reduction_and_clust": [1, 2], "second": 2, "seed": 2, "seed_point": 2, "select": 2, "selectchannel": [1, 2], "self": 2, "selfattent": [1, 2], "send": 2, "separ": 2, "seq": 2, "seq1": 2, "seq2": 2, "seqrecord": 2, "sequenc": 1, "sequence_pl": [1, 2], "sequencing_data": 2, "sequencing_error": 2, "sequencing_loc": 2, "seri": 2, "set": 1, "set_annotate_default_set": [1, 2], "set_dark_styl": [1, 2], "set_default_analyze_screen": [1, 2], "set_default_generate_barecode_map": [1, 2], "set_default_plot_merge_set": [1, 2], "set_default_settings_preprocess_generate_mask": [1, 2], "set_default_settings_preprocess_img_data": [1, 2], "set_default_train_test_model": [1, 2], "set_default_umap_image_set": [1, 2], "set_element_s": [1, 2], "set_generate_training_dataset_default": [1, 2], "set_glob": [1, 2], "set_label_posit": [1, 2], "set_text": [1, 2], "set_zoom_rectangle_end": [1, 2], "set_zoom_rectangle_start": [1, 2], "settings_typ": 2, "setup_button_sect": [1, 2], "setup_canva": [1, 2], "setup_consol": [1, 2], "setup_fram": [1, 2], "setup_function_toolbar": [1, 2], "setup_mode_toolbar": [1, 2], "setup_navigation_toolbar": [1, 2], "setup_plot": [1, 2], "setup_plot_sect": [1, 2], "setup_progress_fram": [1, 2], "setup_settings_panel": [1, 2], "setup_usage_panel": [1, 2], "setup_zoom_toolbar": [1, 2], "shap": 2, "shap_analysi": [1, 2], "shape": 2, "shapiro": 2, "share": 2, "should": 2, "show": 2, "show_cam_on_imag": [1, 2], "show_descript": [1, 2], "show_everi": 2, "show_exampl": 2, "show_text": 2, "show_tooltip": [1, 2], "shuffl": 2, "shuffle_dataset": [1, 2], "shutdown": [1, 2], "shutdown_callback": 2, "signal_to_nois": 2, "signific": 2, "silent": 2, "sim": 1, "sim_app": 1, "sim_param": 2, "sim_stat": 2, "simul": 2, "sinc": 2, "singl": 2, "size": 2, "size_filt": 2, "smooth": 2, "smooth_grad": 2, "smooth_hull_lin": [1, 2], "smooth_lin": 2, "smoothgrad": [1, 2], "sne": 2, "someth": 2, "sourc": 2, "source_fold": 2, "spacr_set": 2, "spacrbutton": [1, 2], "spacrcheck": [1, 2], "spacrcheckbutton": [1, 2], "spacrcombo": [1, 2], "spacrcontain": [1, 2], "spacrdropdownmenu": [1, 2], "spacrentri": [1, 2], "spacrfigshow": [1, 2], "spacrfont": [1, 2], "spacrfram": [1, 2], "spacrlabel": [1, 2], "spacrprogressbar": [1, 2], "spacrprogressbar_v1": [1, 2], "spacrscrollbarstyl": [1, 2], "spacrswitch": [1, 2], "spacrtooltip": [1, 2], "spatial": 2, "spatialattent": [1, 2], "specif": 2, "specifi": 2, "specific_fil": 2, "specific_grna": 2, "specific_label": 2, "split": 2, "split_char": 2, "split_fastq": [1, 2], "split_my_dataset": [1, 2], "split_ratio": 2, "sqlite": 2, "src": 2, "stack": 2, "standard": 2, "start": 2, "start_annotate_app": [1, 2], "start_classify_app": [1, 2], "start_dividing_lin": [1, 2], "start_make_mask_app": [1, 2], "start_mask_app": [1, 2], "start_measure_app": [1, 2], "start_process": [1, 2], "start_res": [1, 2], "start_seq_app": [1, 2], "start_umap_app": [1, 2], "start_x": 2, "stat0206_wmf": 2, "static": 2, "statist": 2, "statsdirect": 2, "stderr": 2, "stdev_spread": 2, "stdout": 2, "step": 2, "stop": 2, "stop_request": 2, "stopiter": 2, "store": 2, "str": 2, "stream": 2, "stretch": 2, "string": 2, "structur": 2, "style": 2, "subclass": 2, "subdirectori": 2, "subfold": 2, "submodul": 1, "subset": 2, "substr": 2, "summari": 2, "summarize_per_wel": [1, 2], "summarize_per_well_inf_non_inf": [1, 2], "t": 2, "tabl": 2, "table_nam": 2, "take": 2, "taken": 2, "tar_path": 2, "target": 2, "target_class": 2, "target_height": 2, "target_i": 2, "target_label_idx": 2, "target_lay": 2, "target_min": 2, "target_scal": 2, "target_vari": 2, "target_width": 2, "tarimagedataset": [1, 2], "tensor": 2, "test": 2, "test_error": [1, 2], "test_load": 2, "test_mod": 2, "test_model_cor": [1, 2], "test_model_perform": [1, 2], "test_siz": 2, "test_split": 2, "text": 2, "textbox": 2, "textiobas": 2, "textvari": 2, "tggt1_220950_1": 2, "tggt1_233460_4": 2, "thei": 2, "them": 2, "thi": 2, "thick": 2, "those": 2, "thread": 2, "thread_control_var": 2, "threshold": 2, "tif": 2, "tiff": 2, "time": 2, "time_l": 2, "timelaps": 1, "titl": 2, "tk": 2, "tkfont": 2, "tkinter": 2, "toggl": [1, 2], "toggle_brush_mod": [1, 2], "toggle_dividing_line_mod": [1, 2], "toggle_draw_mod": [1, 2], "toggle_erase_mod": [1, 2], "toggle_magic_wand_mod": [1, 2], "toggle_set": [1, 2], "toggle_vari": [1, 2], "toggle_zoom_mod": [1, 2], "toler": 2, "top": 2, "top_featur": 2, "torch": 2, "torchmodel": [1, 2], "torchvis": 2, "total": 2, "total_imag": 2, "total_sim": 2, "touch": 2, "toxo_mito": 2, "tpr": 2, "train": [1, 2], "train_cellpos": [1, 2], "train_graph_transform": [1, 2], "train_load": [1, 2], "train_loader_nam": 2, "train_mod": 2, "train_model": [1, 2], "train_test_model": [1, 2], "training_dataset_from_annot": [1, 2], "transfer": 2, "transform": 2, "transience_threshold": 2, "translate_barecod": [1, 2], "treat": 2, "treatment": 2, "treatment_loc": 2, "tree": 2, "true": 2, "true_mask": 2, "truncate_read": [1, 2], "tsg101_screen": 2, "tsne": 2, "tupl": 2, "two": 2, "type": 2, "uint16": 2, "umap": 2, "under": 2, "uniqu": 2, "unique_label": 2, "up": 2, "updat": 2, "update_check": [1, 2], "update_database_work": [1, 2], "update_descript": [1, 2], "update_displai": [1, 2], "update_dividing_line_preview": [1, 2], "update_gui_text": [1, 2], "update_html": [1, 2], "update_label": [1, 2], "update_mouse_info": [1, 2], "update_original_mask": [1, 2], "update_original_mask_from_zoom": [1, 2], "update_scores_and_get_cm": [1, 2], "update_styl": [1, 2], "update_switch": [1, 2], "update_zoom_box": [1, 2], "upper": 2, "upper_percentil": 2, "upper_quantil": 2, "us": 2, "usag": 2, "usage_bars_var": 2, "use_attent": 2, "use_checkpoint": 2, "use_cuda": 2, "use_magic_wand": [1, 2], "user": 2, "util": 1, "v": 2, "val_load": 2, "valid": 2, "validate_and_adjust_beta_param": [1, 2], "validation_split": 2, "valu": 2, "valueerror": 2, "var": 2, "var_typ": 2, "variabl": 2, "variable_nam": 2, "varianc": 2, "variou": 2, "vars_dict": 2, "vars_dict_var": 2, "vector": 2, "verbos": 2, "version": 1, "vert_horiz": [1, 2], "vertic": 2, "vertical_contain": 2, "vif": 2, "vif_threshold": 2, "viridi": 2, "vis_dist": [1, 2], "visual": 2, "visualize_al": [1, 2], "visualize_cellpose_mask": [1, 2], "visualize_class": [1, 2], "visualize_grad_cam": [1, 2], "visualize_integrated_gradi": [1, 2], "visualize_mask": [1, 2], "visualize_saliency_map": [1, 2], "visualize_smooth_grad": [1, 2], "volcano_plot": [1, 2], "w": 2, "walli": 2, "weight": 2, "weight_decai": 2, "well": 2, "well_ineq_coeff": 2, "well_scor": 2, "wells_per_gene_df": 2, "when": 2, "where": 2, "whether": 2, "which": 2, "while": 2, "white": 2, "widget": 2, "width": 2, "wilk": 2, "within": 2, "worker": 2, "wrap": 2, "write": [1, 2], "writetoqueu": [1, 2], "written": 2, "www": 2, "x": 2, "x0": 2, "x1": 2, "x2": 2, "x_axi": 2, "x_canva": 2, "x_column": 2, "x_imag": 2, "x_label": 2, "x_rotat": 2, "x_test": 2, "x_train": 2, "xgboost": 2, "y": 2, "y0": 2, "y1": 2, "y2": 2, "y_axi": 2, "y_canva": 2, "y_column": 2, "y_imag": 2, "y_label": 2, "y_lim": 2, "y_pred_proba": 2, "y_true": 2, "zlib": 2, "zoom_icon": [1, 2], "zoomed_mask": 2}, "titles": ["Welcome to spacr\u2019s documentation!", "spacr", "spacr package"], "titleterms": {"": 0, "app_annot": 2, "app_classifi": 2, "app_make_mask": 2, "app_mask": 2, "app_measur": 2, "app_sequenc": 2, "app_umap": 2, "chri": 2, "content": [0, 2], "core": 2, "deep_spacr": 2, "document": 0, "graph_learn": 2, "gui": 2, "gui_cor": 2, "gui_el": 2, "gui_util": 2, "indic": 0, "io": 2, "logger": 2, "measur": 2, "modul": 2, "packag": 2, "plot": 2, "sequenc": 2, "set": 2, "sim": 2, "sim_app": 2, "spacr": [0, 1, 2], "submodul": 2, "tabl": 0, "timelaps": 2, "util": 2, "version": 2, "welcom": 0}})