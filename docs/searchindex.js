Search.setIndex({"alltitles": {"Modules": [[21, null]], "Welcome to SpaCr": [[15, null]], "__main__ module": [[0, null]], "app_annotate module": [[1, null]], "app_classify module": [[2, null]], "app_make_masks module": [[3, null]], "app_mask module": [[4, null]], "app_measure module": [[5, null]], "app_sequencing module": [[6, null]], "app_umap module": [[7, null]], "chat_bot module": [[8, null]], "core module": [[9, null]], "deep_spacr module": [[10, null]], "gui module": [[11, null]], "gui_core module": [[12, null]], "gui_elements module": [[13, null]], "gui_utils module": [[14, null]], "io module": [[16, null]], "logger module": [[17, null]], "measure module": [[18, null]], "mediar module": [[19, null]], "ml module": [[20, null]], "openai module": [[22, null]], "plot module": [[23, null]], "sequencing module": [[24, null]], "settings module": [[25, null]], "sim module": [[26, null]], "sp_stats module": [[27, null]], "spacr_cellpose module": [[28, null]], "submodules module": [[29, null]], "timelapse module": [[30, null]], "toxo module": [[31, null]], "utils module": [[32, null]], "version module": [[33, null]]}, "docnames": ["__main__", "app_annotate", "app_classify", "app_make_masks", "app_mask", "app_measure", "app_sequencing", "app_umap", "chat_bot", "core", "deep_spacr", "gui", "gui_core", "gui_elements", "gui_utils", "index", "io", "logger", "measure", "mediar", "ml", "modules", "openai", "plot", "sequencing", "settings", "sim", "sp_stats", "spacr_cellpose", "submodules", "timelapse", "toxo", "utils", "version"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["__main__.rst", "app_annotate.rst", "app_classify.rst", "app_make_masks.rst", "app_mask.rst", "app_measure.rst", "app_sequencing.rst", "app_umap.rst", "chat_bot.rst", "core.rst", "deep_spacr.rst", "gui.rst", "gui_core.rst", "gui_elements.rst", "gui_utils.rst", "index.rst", "io.rst", "logger.rst", "measure.rst", "mediar.rst", "ml.rst", "modules.rst", "openai.rst", "plot.rst", "sequencing.rst", "settings.rst", "sim.rst", "sp_stats.rst", "spacr_cellpose.rst", "submodules.rst", "timelapse.rst", "toxo.rst", "utils.rst", "version.rst"], "indexentries": {"__iter__() (spacr.io.combineloaders method)": [[16, "spacr.io.CombineLoaders.__iter__", false]], "__next__() (spacr.io.combineloaders method)": [[16, "spacr.io.CombineLoaders.__next__", false]], "activation_correlations_to_database() (in module spacr.utils)": [[32, "spacr.utils.activation_correlations_to_database", false]], "activation_maps_to_database() (in module spacr.utils)": [[32, "spacr.utils.activation_maps_to_database", false]], "add_column_to_database() (in module spacr.utils)": [[32, "spacr.utils.add_column_to_database", false]], "add_images_to_tar() (in module spacr.utils)": [[32, "spacr.utils.add_images_to_tar", false]], "adjust_cell_masks() (in module spacr.utils)": [[32, "spacr.utils.adjust_cell_masks", false]], "all_elements_match() (in module spacr.utils)": [[32, "spacr.utils.all_elements_match", false]], "analyze_calcium_oscillations() (in module spacr.timelapse)": [[30, "spacr.timelapse.analyze_calcium_oscillations", false]], "annotate_conditions() (in module spacr.utils)": [[32, "spacr.utils.annotate_conditions", false]], "annotate_filter_vision() (in module spacr.deep_spacr)": [[10, "spacr.deep_spacr.annotate_filter_vision", false]], "annotate_predictions() (in module spacr.utils)": [[32, "spacr.utils.annotate_predictions", false]], "append_database() (in module spacr.sim)": [[26, "spacr.sim.append_database", false]], "apply_augmentation() (in module spacr.io)": [[16, "spacr.io.apply_augmentation", false]], "apply_dropout_rate() (spacr.utils.torchmodel method)": [[32, "spacr.utils.TorchModel.apply_dropout_rate", false]], "apply_mask() (in module spacr.utils)": [[32, "spacr.utils.apply_mask", false]], "apply_model() (in module spacr.deep_spacr)": [[10, "spacr.deep_spacr.apply_model", false]], "apply_model_to_tar() (in module spacr.deep_spacr)": [[10, "spacr.deep_spacr.apply_model_to_tar", false]], "assign_colors() (in module spacr.utils)": [[32, "spacr.utils.assign_colors", false]], "augment_classes() (in module spacr.utils)": [[32, "spacr.utils.augment_classes", false]], "augment_dataset() (in module spacr.utils)": [[32, "spacr.utils.augment_dataset", false]], "augment_image() (in module spacr.utils)": [[32, "spacr.utils.augment_image", false]], "augment_images() (in module spacr.utils)": [[32, "spacr.utils.augment_images", false]], "augment_single_image() (in module spacr.utils)": [[32, "spacr.utils.augment_single_image", false]], "barecodes_reverse_complement() (in module spacr.sequencing)": [[24, "spacr.sequencing.barecodes_reverse_complement", false]], "boundary_f1_score() (in module spacr.utils)": [[32, "spacr.utils.boundary_f1_score", false]], "cache (class in spacr.utils)": [[32, "spacr.utils.Cache", false]], "cache (spacr.utils.cache attribute)": [[32, "spacr.utils.Cache.cache", false]], "calculate_activation_correlations() (in module spacr.utils)": [[32, "spacr.utils.calculate_activation_correlations", false]], "calculate_iou() (in module spacr.utils)": [[32, "spacr.utils.calculate_iou", false]], "calculate_loss() (in module spacr.utils)": [[32, "spacr.utils.calculate_loss", false]], "calculate_permutation_importance() (in module spacr.sim)": [[26, "spacr.sim.calculate_permutation_importance", false]], "calculate_shortest_distance() (in module spacr.utils)": [[32, "spacr.utils.calculate_shortest_distance", false]], "cell_level_roc_auc() (in module spacr.sim)": [[26, "spacr.sim.cell_level_roc_auc", false]], "check_index() (in module spacr.utils)": [[32, "spacr.utils.check_index", false]], "check_mask_folder() (in module spacr.utils)": [[32, "spacr.utils.check_mask_folder", false]], "check_multicollinearity() (in module spacr.utils)": [[32, "spacr.utils.check_multicollinearity", false]], "check_normality() (in module spacr.utils)": [[32, "spacr.utils.check_normality", false]], "check_overlap() (in module spacr.utils)": [[32, "spacr.utils.check_overlap", false]], "check_settings() (in module spacr.settings)": [[25, "spacr.settings.check_settings", false]], "choose_model() (in module spacr.utils)": [[32, "spacr.utils.choose_model", false]], "class_visualization() (in module spacr.utils)": [[32, "spacr.utils.class_visualization", false]], "classification_metrics() (in module spacr.utils)": [[32, "spacr.utils.classification_metrics", false]], "classifier() (in module spacr.sim)": [[26, "spacr.sim.classifier", false]], "classifier_v2() (in module spacr.sim)": [[26, "spacr.sim.classifier_v2", false]], "cleanup() (spacr.io.spacrdataloader method)": [[16, "spacr.io.spacrDataLoader.cleanup", false]], "close_file_descriptors() (in module spacr.utils)": [[32, "spacr.utils.close_file_descriptors", false]], "close_multiprocessing_processes() (in module spacr.utils)": [[32, "spacr.utils.close_multiprocessing_processes", false]], "cluster_feature_analysis() (in module spacr.utils)": [[32, "spacr.utils.cluster_feature_analysis", false]], "combine_results() (in module spacr.utils)": [[32, "spacr.utils.combine_results", false]], "combineddataset (class in spacr.io)": [[16, "spacr.io.CombinedDataset", false]], "combineloaders (class in spacr.io)": [[16, "spacr.io.CombineLoaders", false]], "compute_ap_over_iou_thresholds() (in module spacr.utils)": [[32, "spacr.utils.compute_ap_over_iou_thresholds", false]], "compute_average_precision() (in module spacr.utils)": [[32, "spacr.utils.compute_average_precision", false]], "compute_gradcam_and_predictions() (spacr.utils.gradcamgenerator method)": [[32, "spacr.utils.GradCAMGenerator.compute_gradcam_and_predictions", false]], "compute_gradcam_maps() (spacr.utils.gradcamgenerator method)": [[32, "spacr.utils.GradCAMGenerator.compute_gradcam_maps", false]], "compute_irm_penalty() (in module spacr.utils)": [[32, "spacr.utils.compute_irm_penalty", false]], "compute_precision_recall() (in module spacr.sim)": [[26, "spacr.sim.compute_precision_recall", false]], "compute_roc_auc() (in module spacr.sim)": [[26, "spacr.sim.compute_roc_auc", false]], "compute_saliency_and_predictions() (spacr.utils.saliencymapgenerator method)": [[32, "spacr.utils.SaliencyMapGenerator.compute_saliency_and_predictions", false]], "compute_saliency_maps() (spacr.utils.saliencymapgenerator method)": [[32, "spacr.utils.SaliencyMapGenerator.compute_saliency_maps", false]], "compute_segmentation_ap() (in module spacr.utils)": [[32, "spacr.utils.compute_segmentation_ap", false]], "compute_smooth_grad() (spacr.deep_spacr.smoothgrad method)": [[10, "spacr.deep_spacr.SmoothGrad.compute_smooth_grad", false]], "concatenate_and_normalize() (in module spacr.io)": [[16, "spacr.io.concatenate_and_normalize", false]], "control_filelist() (in module spacr.utils)": [[32, "spacr.utils.control_filelist", false]], "convert_and_relabel_masks() (in module spacr.utils)": [[32, "spacr.utils.convert_and_relabel_masks", false]], "convert_numpy_to_tiff() (in module spacr.io)": [[16, "spacr.io.convert_numpy_to_tiff", false]], "convert_separate_files_to_yokogawa() (in module spacr.io)": [[16, "spacr.io.convert_separate_files_to_yokogawa", false]], "convert_to_yokogawa() (in module spacr.io)": [[16, "spacr.io.convert_to_yokogawa", false]], "copy_images_to_consolidated() (in module spacr.utils)": [[32, "spacr.utils.copy_images_to_consolidated", false]], "correct_masks() (in module spacr.utils)": [[32, "spacr.utils.correct_masks", false]], "correct_metadata() (in module spacr.utils)": [[32, "spacr.utils.correct_metadata", false]], "correct_metadata_column_names() (in module spacr.utils)": [[32, "spacr.utils.correct_metadata_column_names", false]], "correct_paths() (in module spacr.utils)": [[32, "spacr.utils.correct_paths", false]], "count_reads_in_fastq() (in module spacr.utils)": [[32, "spacr.utils.count_reads_in_fastq", false]], "create_circular_mask() (in module spacr.utils)": [[32, "spacr.utils.create_circular_mask", false]], "create_consensus() (in module spacr.sequencing)": [[24, "spacr.sequencing.create_consensus", false]], "create_database() (in module spacr.sim)": [[26, "spacr.sim.create_database", false]], "create_grouped_plot() (in module spacr.plot)": [[23, "spacr.plot.create_grouped_plot", false]], "create_plot() (spacr.plot.spacrgraph method)": [[23, "spacr.plot.spacrGraph.create_plot", false]], "create_venn_diagram() (in module spacr.plot)": [[23, "spacr.plot.create_venn_diagram", false]], "custom_forward() (spacr.utils.customcellclassifier method)": [[32, "spacr.utils.CustomCellClassifier.custom_forward", false]], "custom_forward() (spacr.utils.multiscaleblockwithattention method)": [[32, "spacr.utils.MultiScaleBlockWithAttention.custom_forward", false]], "customcellclassifier (class in spacr.utils)": [[32, "spacr.utils.CustomCellClassifier", false]], "deep_spacr() (in module spacr.deep_spacr)": [[10, "spacr.deep_spacr.deep_spacr", false]], "deep_spacr_defaults() (in module spacr.settings)": [[25, "spacr.settings.deep_spacr_defaults", false]], "default_settings_analyze_percent_positive() (in module spacr.settings)": [[25, "spacr.settings.default_settings_analyze_percent_positive", false]], "delete_empty_subdirectories() (in module spacr.io)": [[16, "spacr.io.delete_empty_subdirectories", false]], "delete_folder() (in module spacr.utils)": [[32, "spacr.utils.delete_folder", false]], "delete_intermedeate_files() (in module spacr.utils)": [[32, "spacr.utils.delete_intermedeate_files", false]], "dice_coefficient() (in module spacr.utils)": [[32, "spacr.utils.dice_coefficient", false]], "dist_gen() (in module spacr.sim)": [[26, "spacr.sim.dist_gen", false]], "download_models() (in module spacr.utils)": [[32, "spacr.utils.download_models", false]], "earlyfusion (class in spacr.utils)": [[32, "spacr.utils.EarlyFusion", false]], "evaluate_model_performance() (in module spacr.deep_spacr)": [[10, "spacr.deep_spacr.evaluate_model_performance", false]], "exponential_decay() (in module spacr.timelapse)": [[30, "spacr.timelapse.exponential_decay", false]], "extract_boundaries() (in module spacr.utils)": [[32, "spacr.utils.extract_boundaries", false]], "extract_features() (in module spacr.utils)": [[32, "spacr.utils.extract_features", false]], "extract_sequence_and_quality() (in module spacr.sequencing)": [[24, "spacr.sequencing.extract_sequence_and_quality", false]], "extract_tar_bz2_files() (in module spacr.utils)": [[32, "spacr.utils.extract_tar_bz2_files", false]], "filepaths_to_database() (in module spacr.utils)": [[32, "spacr.utils.filepaths_to_database", false]], "fill_holes_in_mask() (in module spacr.utils)": [[32, "spacr.utils.fill_holes_in_mask", false]], "filter_and_save_csv() (in module spacr.utils)": [[32, "spacr.utils.filter_and_save_csv", false]], "filter_columns() (in module spacr.utils)": [[32, "spacr.utils.filter_columns", false]], "filter_dataframe_features() (in module spacr.utils)": [[32, "spacr.utils.filter_dataframe_features", false]], "find_non_overlapping_position() (in module spacr.utils)": [[32, "spacr.utils.find_non_overlapping_position", false]], "fishers_odds() (in module spacr.utils)": [[32, "spacr.utils.fishers_odds", false]], "focallosswithlogits (class in spacr.utils)": [[32, "spacr.utils.FocalLossWithLogits", false]], "format_path_for_system() (in module spacr.utils)": [[32, "spacr.utils.format_path_for_system", false]], "forward() (spacr.utils.customcellclassifier method)": [[32, "spacr.utils.CustomCellClassifier.forward", false]], "forward() (spacr.utils.earlyfusion method)": [[32, "spacr.utils.EarlyFusion.forward", false]], "forward() (spacr.utils.focallosswithlogits method)": [[32, "spacr.utils.FocalLossWithLogits.forward", false]], "forward() (spacr.utils.gradcam method)": [[32, "spacr.utils.GradCAM.forward", false]], "forward() (spacr.utils.multiscaleblockwithattention method)": [[32, "spacr.utils.MultiScaleBlockWithAttention.forward", false]], "forward() (spacr.utils.resnet method)": [[32, "spacr.utils.ResNet.forward", false]], "forward() (spacr.utils.scaleddotproductattention method)": [[32, "spacr.utils.ScaledDotProductAttention.forward", false]], "forward() (spacr.utils.selfattention method)": [[32, "spacr.utils.SelfAttention.forward", false]], "forward() (spacr.utils.spatialattention method)": [[32, "spacr.utils.SpatialAttention.forward", false]], "forward() (spacr.utils.torchmodel method)": [[32, "spacr.utils.TorchModel.forward", false]], "generate_activation_map() (in module spacr.deep_spacr)": [[10, "spacr.deep_spacr.generate_activation_map", false]], "generate_barecode_mapping() (in module spacr.sequencing)": [[24, "spacr.sequencing.generate_barecode_mapping", false]], "generate_cellpose_masks() (in module spacr.core)": [[9, "spacr.core.generate_cellpose_masks", false]], "generate_cellpose_train_set() (in module spacr.measure)": [[18, "spacr.measure.generate_cellpose_train_set", false]], "generate_cellpose_train_test() (in module spacr.io)": [[16, "spacr.io.generate_cellpose_train_test", false]], "generate_colors() (in module spacr.utils)": [[32, "spacr.utils.generate_colors", false]], "generate_cytoplasm_mask() (in module spacr.utils)": [[32, "spacr.utils.generate_cytoplasm_mask", false]], "generate_dataset() (in module spacr.io)": [[16, "spacr.io.generate_dataset", false]], "generate_dataset_from_lists() (in module spacr.io)": [[16, "spacr.io.generate_dataset_from_lists", false]], "generate_fields() (in module spacr.settings)": [[25, "spacr.settings.generate_fields", false]], "generate_floats() (in module spacr.sim)": [[26, "spacr.sim.generate_floats", false]], "generate_fraction_map() (in module spacr.utils)": [[32, "spacr.utils.generate_fraction_map", false]], "generate_gene_list() (in module spacr.sim)": [[26, "spacr.sim.generate_gene_list", false]], "generate_gene_weights() (in module spacr.sim)": [[26, "spacr.sim.generate_gene_weights", false]], "generate_image_path_map() (in module spacr.utils)": [[32, "spacr.utils.generate_image_path_map", false]], "generate_image_umap() (in module spacr.core)": [[9, "spacr.core.generate_image_umap", false]], "generate_integers() (in module spacr.sim)": [[26, "spacr.sim.generate_integers", false]], "generate_integrated_gradients() (spacr.utils.integratedgradients method)": [[32, "spacr.utils.IntegratedGradients.generate_integrated_gradients", false]], "generate_loaders() (in module spacr.io)": [[16, "spacr.io.generate_loaders", false]], "generate_mask_random_cmap() (in module spacr.plot)": [[23, "spacr.plot.generate_mask_random_cmap", false]], "generate_mediar_masks() (in module spacr.core)": [[9, "spacr.core.generate_mediar_masks", false]], "generate_paramiters() (in module spacr.sim)": [[26, "spacr.sim.generate_paramiters", false]], "generate_path_list_from_db() (in module spacr.utils)": [[32, "spacr.utils.generate_path_list_from_db", false]], "generate_plate_heatmap() (in module spacr.plot)": [[23, "spacr.plot.generate_plate_heatmap", false]], "generate_plate_map() (in module spacr.sim)": [[26, "spacr.sim.generate_plate_map", false]], "generate_power_law_distribution() (in module spacr.sim)": [[26, "spacr.sim.generate_power_law_distribution", false]], "generate_screen_graphs() (in module spacr.core)": [[9, "spacr.core.generate_screen_graphs", false]], "generate_shap_summary_plot() (in module spacr.sim)": [[26, "spacr.sim.generate_shap_summary_plot", false]], "generate_training_dataset() (in module spacr.io)": [[16, "spacr.io.generate_training_dataset", false]], "generate_well_score() (in module spacr.sim)": [[26, "spacr.sim.generate_well_score", false]], "get() (spacr.utils.cache method)": [[32, "spacr.utils.Cache.get", false]], "get_analyze_plaque_settings() (in module spacr.settings)": [[25, "spacr.settings.get_analyze_plaque_settings", false]], "get_analyze_reads_default_settings() (in module spacr.settings)": [[25, "spacr.settings.get_analyze_reads_default_settings", false]], "get_analyze_recruitment_default_settings() (in module spacr.settings)": [[25, "spacr.settings.get_analyze_recruitment_default_settings", false]], "get_check_cellpose_models_default_settings() (in module spacr.settings)": [[25, "spacr.settings.get_check_cellpose_models_default_settings", false]], "get_components() (in module spacr.measure)": [[18, "spacr.measure.get_components", false]], "get_consensus_base() (in module spacr.sequencing)": [[24, "spacr.sequencing.get_consensus_base", false]], "get_cuda_version() (in module spacr.utils)": [[32, "spacr.utils.get_cuda_version", false]], "get_db_paths() (in module spacr.utils)": [[32, "spacr.utils.get_db_paths", false]], "get_default_apply_cellpose_model_settings() (in module spacr.settings)": [[25, "spacr.settings.get_default_apply_cellpose_model_settings", false]], "get_default_generate_activation_map_settings() (in module spacr.settings)": [[25, "spacr.settings.get_default_generate_activation_map_settings", false]], "get_default_test_cellpose_model_settings() (in module spacr.settings)": [[25, "spacr.settings.get_default_test_cellpose_model_settings", false]], "get_figure() (spacr.plot.spacrgraph method)": [[23, "spacr.plot.spacrGraph.get_figure", false]], "get_files_from_dir() (in module spacr.utils)": [[32, "spacr.utils.get_files_from_dir", false]], "get_identify_masks_finetune_default_settings() (in module spacr.settings)": [[25, "spacr.settings.get_identify_masks_finetune_default_settings", false]], "get_layer() (spacr.utils.gradcamgenerator method)": [[32, "spacr.utils.GradCAMGenerator.get_layer", false]], "get_map_barcodes_default_settings() (in module spacr.settings)": [[25, "spacr.settings.get_map_barcodes_default_settings", false]], "get_measure_crop_settings() (in module spacr.settings)": [[25, "spacr.settings.get_measure_crop_settings", false]], "get_ml_results_paths() (in module spacr.utils)": [[32, "spacr.utils.get_ml_results_paths", false]], "get_num_ftrs() (spacr.utils.torchmodel method)": [[32, "spacr.utils.TorchModel.get_num_ftrs", false]], "get_object_counts() (in module spacr.measure)": [[18, "spacr.measure.get_object_counts", false]], "get_optimum_threshold() (in module spacr.sim)": [[26, "spacr.sim.get_optimum_threshold", false]], "get_paths_from_db() (in module spacr.utils)": [[32, "spacr.utils.get_paths_from_db", false]], "get_perform_regression_default_settings() (in module spacr.settings)": [[25, "spacr.settings.get_perform_regression_default_settings", false]], "get_plate() (spacr.io.spacrdataset method)": [[16, "spacr.io.spacrDataset.get_plate", false]], "get_results() (spacr.plot.spacrgraph method)": [[23, "spacr.plot.spacrGraph.get_results", false]], "get_sequencing_paths() (in module spacr.utils)": [[32, "spacr.utils.get_sequencing_paths", false]], "get_submodules() (in module spacr.utils)": [[32, "spacr.utils.get_submodules", false]], "get_train_cellpose_default_settings() (in module spacr.settings)": [[25, "spacr.settings.get_train_cellpose_default_settings", false]], "get_train_test_model_settings() (in module spacr.settings)": [[25, "spacr.settings.get_train_test_model_settings", false]], "get_weight_choice() (spacr.utils.torchmodel method)": [[32, "spacr.utils.TorchModel.get_weight_choice", false]], "gini() (in module spacr.sim)": [[26, "spacr.sim.gini", false]], "gini_coefficient() (in module spacr.sim)": [[26, "spacr.sim.gini_coefficient", false]], "gini_gene_well() (in module spacr.sim)": [[26, "spacr.sim.gini_gene_well", false]], "gradcam (class in spacr.utils)": [[32, "spacr.utils.GradCAM", false]], "gradcamgenerator (class in spacr.utils)": [[32, "spacr.utils.GradCAMGenerator", false]], "graph_importance() (in module spacr.plot)": [[23, "spacr.plot.graph_importance", false]], "graph_sequencing_stats() (in module spacr.sequencing)": [[24, "spacr.sequencing.graph_sequencing_stats", false]], "group_feature_class() (in module spacr.utils)": [[32, "spacr.utils.group_feature_class", false]], "hook_layers() (spacr.utils.gradcamgenerator method)": [[32, "spacr.utils.GradCAMGenerator.hook_layers", false]], "img_list_to_grid() (in module spacr.measure)": [[18, "spacr.measure.img_list_to_grid", false]], "infected_vs_noninfected() (in module spacr.timelapse)": [[30, "spacr.timelapse.infected_vs_noninfected", false]], "init_base_model() (spacr.utils.torchmodel method)": [[32, "spacr.utils.TorchModel.init_base_model", false]], "init_spacr_classifier() (spacr.utils.torchmodel method)": [[32, "spacr.utils.TorchModel.init_spacr_classifier", false]], "initialize_base() (spacr.utils.resnet method)": [[32, "spacr.utils.ResNet.initialize_base", false]], "initiate_counter() (in module spacr.utils)": [[32, "spacr.utils.initiate_counter", false]], "integratedgradients (class in spacr.utils)": [[32, "spacr.utils.IntegratedGradients", false]], "invert_image() (in module spacr.utils)": [[32, "spacr.utils.invert_image", false]], "is_list_of_lists() (in module spacr.utils)": [[32, "spacr.utils.is_list_of_lists", false]], "is_multiprocessing_process() (in module spacr.utils)": [[32, "spacr.utils.is_multiprocessing_process", false]], "jaccard_index() (in module spacr.utils)": [[32, "spacr.utils.jaccard_index", false]], "jitterplot_by_annotation() (in module spacr.plot)": [[23, "spacr.plot.jitterplot_by_annotation", false]], "lasso_reg() (in module spacr.utils)": [[32, "spacr.utils.lasso_reg", false]], "load_image() (in module spacr.utils)": [[32, "spacr.utils.load_image", false]], "load_image() (spacr.io.noclassdataset method)": [[16, "spacr.io.NoClassDataset.load_image", false]], "load_image() (spacr.io.spacrdataset method)": [[16, "spacr.io.spacrDataset.load_image", false]], "load_image_paths() (in module spacr.utils)": [[32, "spacr.utils.load_image_paths", false]], "load_images_from_paths() (in module spacr.io)": [[16, "spacr.io.load_images_from_paths", false]], "load_settings() (in module spacr.utils)": [[32, "spacr.utils.load_settings", false]], "loader_iters (spacr.io.combineloaders attribute)": [[16, "spacr.io.CombineLoaders.loader_iters", false]], "map_condition() (in module spacr.utils)": [[32, "spacr.utils.map_condition", false]], "map_sequences_to_names() (in module spacr.sequencing)": [[24, "spacr.sequencing.map_sequences_to_names", false]], "mask_object_count() (in module spacr.utils)": [[32, "spacr.utils.mask_object_count", false]], "match_masks() (in module spacr.utils)": [[32, "spacr.utils.match_masks", false]], "max_size (spacr.utils.cache attribute)": [[32, "spacr.utils.Cache.max_size", false]], "measure_crop() (in module spacr.measure)": [[18, "spacr.measure.measure_crop", false]], "measure_test_mode() (in module spacr.utils)": [[32, "spacr.utils.measure_test_mode", false]], "merge_dataframes() (in module spacr.utils)": [[32, "spacr.utils.merge_dataframes", false]], "merge_regression_res_with_metadata() (in module spacr.utils)": [[32, "spacr.utils.merge_regression_res_with_metadata", false]], "merge_touching_objects() (in module spacr.utils)": [[32, "spacr.utils.merge_touching_objects", false]], "mlr() (in module spacr.utils)": [[32, "spacr.utils.MLR", false]], "model_fusion() (in module spacr.deep_spacr)": [[10, "spacr.deep_spacr.model_fusion", false]], "model_knowledge_transfer() (in module spacr.deep_spacr)": [[10, "spacr.deep_spacr.model_knowledge_transfer", false]], "model_metrics() (in module spacr.utils)": [[32, "spacr.utils.model_metrics", false]], "module": [[9, "module-spacr.core", false], [10, "module-spacr.deep_spacr", false], [16, "module-spacr.io", false], [18, "module-spacr.measure", false], [23, "module-spacr.plot", false], [24, "module-spacr.sequencing", false], [25, "module-spacr.settings", false], [26, "module-spacr.sim", false], [30, "module-spacr.timelapse", false], [32, "module-spacr.utils", false]], "multiscaleblockwithattention (class in spacr.utils)": [[32, "spacr.utils.MultiScaleBlockWithAttention", false]], "noclassdataset (class in spacr.io)": [[16, "spacr.io.NoClassDataset", false]], "normalize_and_visualize() (in module spacr.plot)": [[23, "spacr.plot.normalize_and_visualize", false]], "normalize_array() (in module spacr.sim)": [[26, "spacr.sim.normalize_array", false]], "normalize_src_path() (in module spacr.utils)": [[32, "spacr.utils.normalize_src_path", false]], "normalize_to_dtype() (in module spacr.utils)": [[32, "spacr.utils.normalize_to_dtype", false]], "overlay_masks_on_images() (in module spacr.plot)": [[23, "spacr.plot.overlay_masks_on_images", false]], "pad_to_same_shape() (in module spacr.utils)": [[32, "spacr.utils.pad_to_same_shape", false]], "paired_read_chunked_processing() (in module spacr.sequencing)": [[24, "spacr.sequencing.paired_read_chunked_processing", false]], "parse_gz_files() (in module spacr.io)": [[16, "spacr.io.parse_gz_files", false]], "percentile_normalize() (spacr.utils.gradcamgenerator method)": [[32, "spacr.utils.GradCAMGenerator.percentile_normalize", false]], "percentile_normalize() (spacr.utils.saliencymapgenerator method)": [[32, "spacr.utils.SaliencyMapGenerator.percentile_normalize", false]], "perform_levene_test() (spacr.plot.spacrgraph method)": [[23, "spacr.plot.spacrGraph.perform_levene_test", false]], "perform_normality_tests() (spacr.plot.spacrgraph method)": [[23, "spacr.plot.spacrGraph.perform_normality_tests", false]], "perform_posthoc_tests() (spacr.plot.spacrgraph method)": [[23, "spacr.plot.spacrGraph.perform_posthoc_tests", false]], "perform_statistical_tests() (in module spacr.utils)": [[32, "spacr.utils.perform_statistical_tests", false]], "perform_statistical_tests() (spacr.plot.spacrgraph method)": [[23, "spacr.plot.spacrGraph.perform_statistical_tests", false]], "pick_best_model() (in module spacr.utils)": [[32, "spacr.utils.pick_best_model", false]], "plot_activation_grid() (spacr.utils.gradcamgenerator method)": [[32, "spacr.utils.GradCAMGenerator.plot_activation_grid", false]], "plot_activation_grid() (spacr.utils.saliencymapgenerator method)": [[32, "spacr.utils.SaliencyMapGenerator.plot_activation_grid", false]], "plot_arrays() (in module spacr.plot)": [[23, "spacr.plot.plot_arrays", false]], "plot_clusters() (in module spacr.utils)": [[32, "spacr.utils.plot_clusters", false]], "plot_clusters_grid() (in module spacr.utils)": [[32, "spacr.utils.plot_clusters_grid", false]], "plot_comparison_results() (in module spacr.plot)": [[23, "spacr.plot.plot_comparison_results", false]], "plot_confusion_matrix() (in module spacr.sim)": [[26, "spacr.sim.plot_confusion_matrix", false]], "plot_correlation_matrix() (in module spacr.sim)": [[26, "spacr.sim.plot_correlation_matrix", false]], "plot_data() (in module spacr.timelapse)": [[30, "spacr.timelapse.plot_data", false]], "plot_data_from_csv() (in module spacr.plot)": [[23, "spacr.plot.plot_data_from_csv", false]], "plot_data_from_db() (in module spacr.plot)": [[23, "spacr.plot.plot_data_from_db", false]], "plot_embedding() (in module spacr.utils)": [[32, "spacr.utils.plot_embedding", false]], "plot_feature_importance() (in module spacr.plot)": [[23, "spacr.plot.plot_feature_importance", false]], "plot_feature_importance() (in module spacr.sim)": [[26, "spacr.sim.plot_feature_importance", false]], "plot_grid() (in module spacr.utils)": [[32, "spacr.utils.plot_grid", false]], "plot_histogram() (in module spacr.plot)": [[23, "spacr.plot.plot_histogram", false]], "plot_histogram() (in module spacr.sim)": [[26, "spacr.sim.plot_histogram", false]], "plot_image() (in module spacr.utils)": [[32, "spacr.utils.plot_image", false]], "plot_image_grid() (in module spacr.plot)": [[23, "spacr.plot.plot_image_grid", false]], "plot_image_mask_overlay() (in module spacr.plot)": [[23, "spacr.plot.plot_image_mask_overlay", false]], "plot_images_and_arrays() (in module spacr.plot)": [[23, "spacr.plot.plot_images_and_arrays", false]], "plot_images_by_cluster() (in module spacr.utils)": [[32, "spacr.utils.plot_images_by_cluster", false]], "plot_lorenz_curves() (in module spacr.plot)": [[23, "spacr.plot.plot_lorenz_curves", false]], "plot_masks() (in module spacr.plot)": [[23, "spacr.plot.plot_masks", false]], "plot_merged() (in module spacr.plot)": [[23, "spacr.plot.plot_merged", false]], "plot_object_outlines() (in module spacr.plot)": [[23, "spacr.plot.plot_object_outlines", false]], "plot_partial_dependences() (in module spacr.sim)": [[26, "spacr.sim.plot_partial_dependences", false]], "plot_permutation() (in module spacr.plot)": [[23, "spacr.plot.plot_permutation", false]], "plot_plates() (in module spacr.plot)": [[23, "spacr.plot.plot_plates", false]], "plot_proportion_stacked_bars() (in module spacr.plot)": [[23, "spacr.plot.plot_proportion_stacked_bars", false]], "plot_region() (in module spacr.plot)": [[23, "spacr.plot.plot_region", false]], "plot_resize() (in module spacr.plot)": [[23, "spacr.plot.plot_resize", false]], "plot_resize_v1() (in module spacr.plot)": [[23, "spacr.plot.plot_resize_v1", false]], "plot_roc_pr() (in module spacr.sim)": [[26, "spacr.sim.plot_roc_pr", false]], "plot_simulations() (in module spacr.sim)": [[26, "spacr.sim.plot_simulations", false]], "plot_umap_images() (in module spacr.utils)": [[32, "spacr.utils.plot_umap_images", false]], "power_law_dist_gen() (in module spacr.sim)": [[26, "spacr.sim.power_law_dist_gen", false]], "prepare_batch_for_segmentation() (in module spacr.utils)": [[32, "spacr.utils.prepare_batch_for_segmentation", false]], "prepare_cellpose_dataset() (in module spacr.io)": [[16, "spacr.io.prepare_cellpose_dataset", false]], "preprocess_data() (in module spacr.utils)": [[32, "spacr.utils.preprocess_data", false]], "preprocess_data() (spacr.plot.spacrgraph method)": [[23, "spacr.plot.spacrGraph.preprocess_data", false]], "preprocess_generate_masks() (in module spacr.core)": [[9, "spacr.core.preprocess_generate_masks", false]], "preprocess_image() (in module spacr.utils)": [[32, "spacr.utils.preprocess_image", false]], "preprocess_img_data() (in module spacr.io)": [[16, "spacr.io.preprocess_img_data", false]], "preprocess_pathogen_data() (in module spacr.timelapse)": [[30, "spacr.timelapse.preprocess_pathogen_data", false]], "print_mask_and_flows() (in module spacr.plot)": [[23, "spacr.plot.print_mask_and_flows", false]], "print_progress() (in module spacr.utils)": [[32, "spacr.utils.print_progress", false]], "process_chunk() (in module spacr.sequencing)": [[24, "spacr.sequencing.process_chunk", false]], "process_instruction() (in module spacr.io)": [[16, "spacr.io.process_instruction", false]], "process_masks() (in module spacr.utils)": [[32, "spacr.utils.process_masks", false]], "process_meassure_crop_results() (in module spacr.measure)": [[18, "spacr.measure.process_meassure_crop_results", false]], "process_non_tif_non_2d_images() (in module spacr.io)": [[16, "spacr.io.process_non_tif_non_2D_images", false]], "process_vision_results() (in module spacr.utils)": [[32, "spacr.utils.process_vision_results", false]], "put() (spacr.utils.cache method)": [[32, "spacr.utils.Cache.put", false]], "random_cmap() (in module spacr.plot)": [[23, "spacr.plot.random_cmap", false]], "random_forest_feature_importance() (in module spacr.utils)": [[32, "spacr.utils.random_forest_feature_importance", false]], "read_and_plot__vision_results() (in module spacr.plot)": [[23, "spacr.plot.read_and_plot__vision_results", false]], "read_plot_model_stats() (in module spacr.io)": [[16, "spacr.io.read_plot_model_stats", false]], "read_simulations_table() (in module spacr.sim)": [[26, "spacr.sim.read_simulations_table", false]], "recommend_target_layers() (in module spacr.utils)": [[32, "spacr.utils.recommend_target_layers", false]], "reducer_hyperparameter_search() (in module spacr.core)": [[9, "spacr.core.reducer_hyperparameter_search", false]], "reduction_and_clustering() (in module spacr.utils)": [[32, "spacr.utils.reduction_and_clustering", false]], "regression_roc_auc() (in module spacr.sim)": [[26, "spacr.sim.regression_roc_auc", false]], "remove_canvas() (in module spacr.utils)": [[32, "spacr.utils.remove_canvas", false]], "remove_columns_with_single_value() (in module spacr.sim)": [[26, "spacr.sim.remove_columns_with_single_value", false]], "remove_constant_columns() (in module spacr.sim)": [[26, "spacr.sim.remove_constant_columns", false]], "remove_highly_correlated_columns() (in module spacr.utils)": [[32, "spacr.utils.remove_highly_correlated_columns", false]], "remove_intensity_objects() (in module spacr.utils)": [[32, "spacr.utils.remove_intensity_objects", false]], "remove_low_variance_columns() (in module spacr.utils)": [[32, "spacr.utils.remove_low_variance_columns", false]], "remove_noise() (in module spacr.utils)": [[32, "spacr.utils.remove_noise", false]], "remove_outliers_from_plot() (spacr.plot.spacrgraph method)": [[23, "spacr.plot.spacrGraph.remove_outliers_from_plot", false]], "rename_columns_in_db() (in module spacr.utils)": [[32, "spacr.utils.rename_columns_in_db", false]], "reset_mp() (in module spacr.utils)": [[32, "spacr.utils.reset_mp", false]], "resize_images_and_labels() (in module spacr.utils)": [[32, "spacr.utils.resize_images_and_labels", false]], "resize_labels_back() (in module spacr.utils)": [[32, "spacr.utils.resize_labels_back", false]], "resnet (class in spacr.utils)": [[32, "spacr.utils.ResNet", false]], "reverse_complement() (in module spacr.sequencing)": [[24, "spacr.sequencing.reverse_complement", false]], "run_and_save() (in module spacr.sim)": [[26, "spacr.sim.run_and_save", false]], "run_experiment() (in module spacr.sim)": [[26, "spacr.sim.run_experiment", false]], "run_multiple_simulations() (in module spacr.sim)": [[26, "spacr.sim.run_multiple_simulations", false]], "run_simulation() (in module spacr.sim)": [[26, "spacr.sim.run_simulation", false]], "saliencymapgenerator (class in spacr.utils)": [[32, "spacr.utils.SaliencyMapGenerator", false]], "save_and_add_image_to_grid() (in module spacr.measure)": [[18, "spacr.measure.save_and_add_image_to_grid", false]], "save_data() (in module spacr.sim)": [[26, "spacr.sim.save_data", false]], "save_df_to_hdf5() (in module spacr.sequencing)": [[24, "spacr.sequencing.save_df_to_hdf5", false]], "save_figure() (in module spacr.timelapse)": [[30, "spacr.timelapse.save_figure", false]], "save_file_lists() (in module spacr.utils)": [[32, "spacr.utils.save_file_lists", false]], "save_plot() (in module spacr.sim)": [[26, "spacr.sim.save_plot", false]], "save_qc_df_to_csv() (in module spacr.sequencing)": [[24, "spacr.sequencing.save_qc_df_to_csv", false]], "save_results_dataframe() (in module spacr.timelapse)": [[30, "spacr.timelapse.save_results_dataframe", false]], "save_settings() (in module spacr.utils)": [[32, "spacr.utils.save_settings", false]], "save_shap_plot() (in module spacr.sim)": [[26, "spacr.sim.save_shap_plot", false]], "save_unique_combinations_to_csv() (in module spacr.sequencing)": [[24, "spacr.sequencing.save_unique_combinations_to_csv", false]], "saver_process() (in module spacr.sequencing)": [[24, "spacr.sequencing.saver_process", false]], "scaleddotproductattention (class in spacr.utils)": [[32, "spacr.utils.ScaledDotProductAttention", false]], "search_reduction_and_clustering() (in module spacr.utils)": [[32, "spacr.utils.search_reduction_and_clustering", false]], "selectchannels (class in spacr.utils)": [[32, "spacr.utils.SelectChannels", false]], "selfattention (class in spacr.utils)": [[32, "spacr.utils.SelfAttention", false]], "sequence_plates() (in module spacr.sim)": [[26, "spacr.sim.sequence_plates", false]], "set_analyze_class_proportion_defaults() (in module spacr.settings)": [[25, "spacr.settings.set_analyze_class_proportion_defaults", false]], "set_analyze_endodyogeny_defaults() (in module spacr.settings)": [[25, "spacr.settings.set_analyze_endodyogeny_defaults", false]], "set_annotate_default_settings() (in module spacr.settings)": [[25, "spacr.settings.set_annotate_default_settings", false]], "set_default_analyze_screen() (in module spacr.settings)": [[25, "spacr.settings.set_default_analyze_screen", false]], "set_default_generate_barecode_mapping() (in module spacr.settings)": [[25, "spacr.settings.set_default_generate_barecode_mapping", false]], "set_default_plot_merge_settings() (in module spacr.settings)": [[25, "spacr.settings.set_default_plot_merge_settings", false]], "set_default_settings_preprocess_generate_masks() (in module spacr.settings)": [[25, "spacr.settings.set_default_settings_preprocess_generate_masks", false]], "set_default_settings_preprocess_img_data() (in module spacr.settings)": [[25, "spacr.settings.set_default_settings_preprocess_img_data", false]], "set_default_train_test_model() (in module spacr.settings)": [[25, "spacr.settings.set_default_train_test_model", false]], "set_default_umap_image_settings() (in module spacr.settings)": [[25, "spacr.settings.set_default_umap_image_settings", false]], "set_generate_dataset_defaults() (in module spacr.settings)": [[25, "spacr.settings.set_generate_dataset_defaults", false]], "set_generate_training_dataset_defaults() (in module spacr.settings)": [[25, "spacr.settings.set_generate_training_dataset_defaults", false]], "set_graph_importance_defaults() (in module spacr.settings)": [[25, "spacr.settings.set_graph_importance_defaults", false]], "set_interperate_vision_model_defaults() (in module spacr.settings)": [[25, "spacr.settings.set_interperate_vision_model_defaults", false]], "setup_plot() (in module spacr.utils)": [[32, "spacr.utils.setup_plot", false]], "show_cam_on_image() (in module spacr.utils)": [[32, "spacr.utils.show_cam_on_image", false]], "shuffle_dataset() (spacr.io.noclassdataset method)": [[16, "spacr.io.NoClassDataset.shuffle_dataset", false]], "shuffle_dataset() (spacr.io.spacrdataset method)": [[16, "spacr.io.spacrDataset.shuffle_dataset", false]], "single_read_chunked_processing() (in module spacr.sequencing)": [[24, "spacr.sequencing.single_read_chunked_processing", false]], "smooth_hull_lines() (in module spacr.utils)": [[32, "spacr.utils.smooth_hull_lines", false]], "smoothgrad (class in spacr.deep_spacr)": [[10, "spacr.deep_spacr.SmoothGrad", false]], "spacr.core": [[9, "module-spacr.core", false]], "spacr.deep_spacr": [[10, "module-spacr.deep_spacr", false]], "spacr.io": [[16, "module-spacr.io", false]], "spacr.measure": [[18, "module-spacr.measure", false]], "spacr.plot": [[23, "module-spacr.plot", false]], "spacr.sequencing": [[24, "module-spacr.sequencing", false]], "spacr.settings": [[25, "module-spacr.settings", false]], "spacr.sim": [[26, "module-spacr.sim", false]], "spacr.timelapse": [[30, "module-spacr.timelapse", false]], "spacr.utils": [[32, "module-spacr.utils", false]], "spacrdataloader (class in spacr.io)": [[16, "spacr.io.spacrDataLoader", false]], "spacrdataset (class in spacr.io)": [[16, "spacr.io.spacrDataset", false]], "spacrgraph (class in spacr.plot)": [[23, "spacr.plot.spacrGraph", false]], "spatialattention (class in spacr.utils)": [[32, "spacr.utils.SpatialAttention", false]], "split_my_dataset() (in module spacr.utils)": [[32, "spacr.utils.split_my_dataset", false]], "summarize_per_well() (in module spacr.timelapse)": [[30, "spacr.timelapse.summarize_per_well", false]], "summarize_per_well_inf_non_inf() (in module spacr.timelapse)": [[30, "spacr.timelapse.summarize_per_well_inf_non_inf", false]], "tarimagedataset (class in spacr.io)": [[16, "spacr.io.TarImageDataset", false]], "test_model_core() (in module spacr.deep_spacr)": [[10, "spacr.deep_spacr.test_model_core", false]], "test_model_performance() (in module spacr.deep_spacr)": [[10, "spacr.deep_spacr.test_model_performance", false]], "torchmodel (class in spacr.utils)": [[32, "spacr.utils.TorchModel", false]], "train_loaders (spacr.io.combineloaders attribute)": [[16, "spacr.io.CombineLoaders.train_loaders", false]], "train_model() (in module spacr.deep_spacr)": [[10, "spacr.deep_spacr.train_model", false]], "train_test_model() (in module spacr.deep_spacr)": [[10, "spacr.deep_spacr.train_test_model", false]], "training_dataset_from_annotation() (in module spacr.io)": [[16, "spacr.io.training_dataset_from_annotation", false]], "training_dataset_from_annotation_metadata() (in module spacr.io)": [[16, "spacr.io.training_dataset_from_annotation_metadata", false]], "update_scores_and_get_cm() (in module spacr.sim)": [[26, "spacr.sim.update_scores_and_get_cm", false]], "validate_and_adjust_beta_params() (in module spacr.sim)": [[26, "spacr.sim.validate_and_adjust_beta_params", false]], "vis_dists() (in module spacr.sim)": [[26, "spacr.sim.vis_dists", false]], "visualize_all() (in module spacr.sim)": [[26, "spacr.sim.visualize_all", false]], "visualize_cellpose_masks() (in module spacr.plot)": [[23, "spacr.plot.visualize_cellpose_masks", false]], "visualize_classes() (in module spacr.deep_spacr)": [[10, "spacr.deep_spacr.visualize_classes", false]], "visualize_integrated_gradients() (in module spacr.deep_spacr)": [[10, "spacr.deep_spacr.visualize_integrated_gradients", false]], "visualize_masks() (in module spacr.plot)": [[23, "spacr.plot.visualize_masks", false]], "visualize_smooth_grad() (in module spacr.deep_spacr)": [[10, "spacr.deep_spacr.visualize_smooth_grad", false]], "volcano_plot() (in module spacr.plot)": [[23, "spacr.plot.volcano_plot", false]]}, "objects": {"spacr": [[9, 0, 0, "-", "core"], [10, 0, 0, "-", "deep_spacr"], [16, 0, 0, "-", "io"], [18, 0, 0, "-", "measure"], [23, 0, 0, "-", "plot"], [24, 0, 0, "-", "sequencing"], [25, 0, 0, "-", "settings"], [26, 0, 0, "-", "sim"], [30, 0, 0, "-", "timelapse"], [32, 0, 0, "-", "utils"]], "spacr.core": [[9, 1, 1, "", "generate_cellpose_masks"], [9, 1, 1, "", "generate_image_umap"], [9, 1, 1, "", "generate_mediar_masks"], [9, 1, 1, "", "generate_screen_graphs"], [9, 1, 1, "", "preprocess_generate_masks"], [9, 1, 1, "", "reducer_hyperparameter_search"]], "spacr.deep_spacr": [[10, 2, 1, "", "SmoothGrad"], [10, 1, 1, "", "annotate_filter_vision"], [10, 1, 1, "", "apply_model"], [10, 1, 1, "", "apply_model_to_tar"], [10, 1, 1, "", "deep_spacr"], [10, 1, 1, "", "evaluate_model_performance"], [10, 1, 1, "", "generate_activation_map"], [10, 1, 1, "", "model_fusion"], [10, 1, 1, "", "model_knowledge_transfer"], [10, 1, 1, "", "test_model_core"], [10, 1, 1, "", "test_model_performance"], [10, 1, 1, "", "train_model"], [10, 1, 1, "", "train_test_model"], [10, 1, 1, "", "visualize_classes"], [10, 1, 1, "", "visualize_integrated_gradients"], [10, 1, 1, "", "visualize_smooth_grad"]], "spacr.deep_spacr.SmoothGrad": [[10, 3, 1, "", "compute_smooth_grad"]], "spacr.io": [[16, 2, 1, "", "CombineLoaders"], [16, 2, 1, "", "CombinedDataset"], [16, 2, 1, "", "NoClassDataset"], [16, 2, 1, "", "TarImageDataset"], [16, 1, 1, "", "apply_augmentation"], [16, 1, 1, "", "concatenate_and_normalize"], [16, 1, 1, "", "convert_numpy_to_tiff"], [16, 1, 1, "", "convert_separate_files_to_yokogawa"], [16, 1, 1, "", "convert_to_yokogawa"], [16, 1, 1, "", "delete_empty_subdirectories"], [16, 1, 1, "", "generate_cellpose_train_test"], [16, 1, 1, "", "generate_dataset"], [16, 1, 1, "", "generate_dataset_from_lists"], [16, 1, 1, "", "generate_loaders"], [16, 1, 1, "", "generate_training_dataset"], [16, 1, 1, "", "load_images_from_paths"], [16, 1, 1, "", "parse_gz_files"], [16, 1, 1, "", "prepare_cellpose_dataset"], [16, 1, 1, "", "preprocess_img_data"], [16, 1, 1, "", "process_instruction"], [16, 1, 1, "", "process_non_tif_non_2D_images"], [16, 1, 1, "", "read_plot_model_stats"], [16, 2, 1, "", "spacrDataLoader"], [16, 2, 1, "", "spacrDataset"], [16, 1, 1, "", "training_dataset_from_annotation"], [16, 1, 1, "", "training_dataset_from_annotation_metadata"]], "spacr.io.CombineLoaders": [[16, 3, 1, "", "__iter__"], [16, 3, 1, "", "__next__"], [16, 4, 1, "", "loader_iters"], [16, 4, 1, "", "train_loaders"]], "spacr.io.NoClassDataset": [[16, 3, 1, "", "load_image"], [16, 3, 1, "", "shuffle_dataset"]], "spacr.io.spacrDataLoader": [[16, 3, 1, "", "cleanup"]], "spacr.io.spacrDataset": [[16, 3, 1, "", "get_plate"], [16, 3, 1, "", "load_image"], [16, 3, 1, "", "shuffle_dataset"]], "spacr.measure": [[18, 1, 1, "", "generate_cellpose_train_set"], [18, 1, 1, "", "get_components"], [18, 1, 1, "", "get_object_counts"], [18, 1, 1, "", "img_list_to_grid"], [18, 1, 1, "", "measure_crop"], [18, 1, 1, "", "process_meassure_crop_results"], [18, 1, 1, "", "save_and_add_image_to_grid"]], "spacr.plot": [[23, 1, 1, "", "create_grouped_plot"], [23, 1, 1, "", "create_venn_diagram"], [23, 1, 1, "", "generate_mask_random_cmap"], [23, 1, 1, "", "generate_plate_heatmap"], [23, 1, 1, "", "graph_importance"], [23, 1, 1, "", "jitterplot_by_annotation"], [23, 1, 1, "", "normalize_and_visualize"], [23, 1, 1, "", "overlay_masks_on_images"], [23, 1, 1, "", "plot_arrays"], [23, 1, 1, "", "plot_comparison_results"], [23, 1, 1, "", "plot_data_from_csv"], [23, 1, 1, "", "plot_data_from_db"], [23, 1, 1, "", "plot_feature_importance"], [23, 1, 1, "", "plot_histogram"], [23, 1, 1, "", "plot_image_grid"], [23, 1, 1, "", "plot_image_mask_overlay"], [23, 1, 1, "", "plot_images_and_arrays"], [23, 1, 1, "", "plot_lorenz_curves"], [23, 1, 1, "", "plot_masks"], [23, 1, 1, "", "plot_merged"], [23, 1, 1, "", "plot_object_outlines"], [23, 1, 1, "", "plot_permutation"], [23, 1, 1, "", "plot_plates"], [23, 1, 1, "", "plot_proportion_stacked_bars"], [23, 1, 1, "", "plot_region"], [23, 1, 1, "", "plot_resize"], [23, 1, 1, "", "plot_resize_v1"], [23, 1, 1, "", "print_mask_and_flows"], [23, 1, 1, "", "random_cmap"], [23, 1, 1, "", "read_and_plot__vision_results"], [23, 2, 1, "", "spacrGraph"], [23, 1, 1, "", "visualize_cellpose_masks"], [23, 1, 1, "", "visualize_masks"], [23, 1, 1, "", "volcano_plot"]], "spacr.plot.spacrGraph": [[23, 3, 1, "", "create_plot"], [23, 3, 1, "", "get_figure"], [23, 3, 1, "", "get_results"], [23, 3, 1, "", "perform_levene_test"], [23, 3, 1, "", "perform_normality_tests"], [23, 3, 1, "", "perform_posthoc_tests"], [23, 3, 1, "", "perform_statistical_tests"], [23, 3, 1, "", "preprocess_data"], [23, 3, 1, "", "remove_outliers_from_plot"]], "spacr.sequencing": [[24, 1, 1, "", "barecodes_reverse_complement"], [24, 1, 1, "", "create_consensus"], [24, 1, 1, "", "extract_sequence_and_quality"], [24, 1, 1, "", "generate_barecode_mapping"], [24, 1, 1, "", "get_consensus_base"], [24, 1, 1, "", "graph_sequencing_stats"], [24, 1, 1, "", "map_sequences_to_names"], [24, 1, 1, "", "paired_read_chunked_processing"], [24, 1, 1, "", "process_chunk"], [24, 1, 1, "", "reverse_complement"], [24, 1, 1, "", "save_df_to_hdf5"], [24, 1, 1, "", "save_qc_df_to_csv"], [24, 1, 1, "", "save_unique_combinations_to_csv"], [24, 1, 1, "", "saver_process"], [24, 1, 1, "", "single_read_chunked_processing"]], "spacr.settings": [[25, 1, 1, "", "check_settings"], [25, 1, 1, "", "deep_spacr_defaults"], [25, 1, 1, "", "default_settings_analyze_percent_positive"], [25, 1, 1, "", "generate_fields"], [25, 1, 1, "", "get_analyze_plaque_settings"], [25, 1, 1, "", "get_analyze_reads_default_settings"], [25, 1, 1, "", "get_analyze_recruitment_default_settings"], [25, 1, 1, "", "get_check_cellpose_models_default_settings"], [25, 1, 1, "", "get_default_apply_cellpose_model_settings"], [25, 1, 1, "", "get_default_generate_activation_map_settings"], [25, 1, 1, "", "get_default_test_cellpose_model_settings"], [25, 1, 1, "", "get_identify_masks_finetune_default_settings"], [25, 1, 1, "", "get_map_barcodes_default_settings"], [25, 1, 1, "", "get_measure_crop_settings"], [25, 1, 1, "", "get_perform_regression_default_settings"], [25, 1, 1, "", "get_train_cellpose_default_settings"], [25, 1, 1, "", "get_train_test_model_settings"], [25, 1, 1, "", "set_analyze_class_proportion_defaults"], [25, 1, 1, "", "set_analyze_endodyogeny_defaults"], [25, 1, 1, "", "set_annotate_default_settings"], [25, 1, 1, "", "set_default_analyze_screen"], [25, 1, 1, "", "set_default_generate_barecode_mapping"], [25, 1, 1, "", "set_default_plot_merge_settings"], [25, 1, 1, "", "set_default_settings_preprocess_generate_masks"], [25, 1, 1, "", "set_default_settings_preprocess_img_data"], [25, 1, 1, "", "set_default_train_test_model"], [25, 1, 1, "", "set_default_umap_image_settings"], [25, 1, 1, "", "set_generate_dataset_defaults"], [25, 1, 1, "", "set_generate_training_dataset_defaults"], [25, 1, 1, "", "set_graph_importance_defaults"], [25, 1, 1, "", "set_interperate_vision_model_defaults"]], "spacr.sim": [[26, 1, 1, "", "append_database"], [26, 1, 1, "", "calculate_permutation_importance"], [26, 1, 1, "", "cell_level_roc_auc"], [26, 1, 1, "", "classifier"], [26, 1, 1, "", "classifier_v2"], [26, 1, 1, "", "compute_precision_recall"], [26, 1, 1, "", "compute_roc_auc"], [26, 1, 1, "", "create_database"], [26, 1, 1, "", "dist_gen"], [26, 1, 1, "", "generate_floats"], [26, 1, 1, "", "generate_gene_list"], [26, 1, 1, "", "generate_gene_weights"], [26, 1, 1, "", "generate_integers"], [26, 1, 1, "", "generate_paramiters"], [26, 1, 1, "", "generate_plate_map"], [26, 1, 1, "", "generate_power_law_distribution"], [26, 1, 1, "", "generate_shap_summary_plot"], [26, 1, 1, "", "generate_well_score"], [26, 1, 1, "", "get_optimum_threshold"], [26, 1, 1, "", "gini"], [26, 1, 1, "", "gini_coefficient"], [26, 1, 1, "", "gini_gene_well"], [26, 1, 1, "", "normalize_array"], [26, 1, 1, "", "plot_confusion_matrix"], [26, 1, 1, "", "plot_correlation_matrix"], [26, 1, 1, "", "plot_feature_importance"], [26, 1, 1, "", "plot_histogram"], [26, 1, 1, "", "plot_partial_dependences"], [26, 1, 1, "", "plot_roc_pr"], [26, 1, 1, "", "plot_simulations"], [26, 1, 1, "", "power_law_dist_gen"], [26, 1, 1, "", "read_simulations_table"], [26, 1, 1, "", "regression_roc_auc"], [26, 1, 1, "", "remove_columns_with_single_value"], [26, 1, 1, "", "remove_constant_columns"], [26, 1, 1, "", "run_and_save"], [26, 1, 1, "", "run_experiment"], [26, 1, 1, "", "run_multiple_simulations"], [26, 1, 1, "", "run_simulation"], [26, 1, 1, "", "save_data"], [26, 1, 1, "", "save_plot"], [26, 1, 1, "", "save_shap_plot"], [26, 1, 1, "", "sequence_plates"], [26, 1, 1, "", "update_scores_and_get_cm"], [26, 1, 1, "", "validate_and_adjust_beta_params"], [26, 1, 1, "", "vis_dists"], [26, 1, 1, "", "visualize_all"]], "spacr.timelapse": [[30, 1, 1, "", "analyze_calcium_oscillations"], [30, 1, 1, "", "exponential_decay"], [30, 1, 1, "", "infected_vs_noninfected"], [30, 1, 1, "", "plot_data"], [30, 1, 1, "", "preprocess_pathogen_data"], [30, 1, 1, "", "save_figure"], [30, 1, 1, "", "save_results_dataframe"], [30, 1, 1, "", "summarize_per_well"], [30, 1, 1, "", "summarize_per_well_inf_non_inf"]], "spacr.utils": [[32, 2, 1, "", "Cache"], [32, 2, 1, "", "CustomCellClassifier"], [32, 2, 1, "", "EarlyFusion"], [32, 2, 1, "", "FocalLossWithLogits"], [32, 2, 1, "", "GradCAM"], [32, 2, 1, "", "GradCAMGenerator"], [32, 2, 1, "", "IntegratedGradients"], [32, 1, 1, "", "MLR"], [32, 2, 1, "", "MultiScaleBlockWithAttention"], [32, 2, 1, "", "ResNet"], [32, 2, 1, "", "SaliencyMapGenerator"], [32, 2, 1, "", "ScaledDotProductAttention"], [32, 2, 1, "", "SelectChannels"], [32, 2, 1, "", "SelfAttention"], [32, 2, 1, "", "SpatialAttention"], [32, 2, 1, "", "TorchModel"], [32, 1, 1, "", "activation_correlations_to_database"], [32, 1, 1, "", "activation_maps_to_database"], [32, 1, 1, "", "add_column_to_database"], [32, 1, 1, "", "add_images_to_tar"], [32, 1, 1, "", "adjust_cell_masks"], [32, 1, 1, "", "all_elements_match"], [32, 1, 1, "", "annotate_conditions"], [32, 1, 1, "", "annotate_predictions"], [32, 1, 1, "", "apply_mask"], [32, 1, 1, "", "assign_colors"], [32, 1, 1, "", "augment_classes"], [32, 1, 1, "", "augment_dataset"], [32, 1, 1, "", "augment_image"], [32, 1, 1, "", "augment_images"], [32, 1, 1, "", "augment_single_image"], [32, 1, 1, "", "boundary_f1_score"], [32, 1, 1, "", "calculate_activation_correlations"], [32, 1, 1, "", "calculate_iou"], [32, 1, 1, "", "calculate_loss"], [32, 1, 1, "", "calculate_shortest_distance"], [32, 1, 1, "", "check_index"], [32, 1, 1, "", "check_mask_folder"], [32, 1, 1, "", "check_multicollinearity"], [32, 1, 1, "", "check_normality"], [32, 1, 1, "", "check_overlap"], [32, 1, 1, "", "choose_model"], [32, 1, 1, "", "class_visualization"], [32, 1, 1, "", "classification_metrics"], [32, 1, 1, "", "close_file_descriptors"], [32, 1, 1, "", "close_multiprocessing_processes"], [32, 1, 1, "", "cluster_feature_analysis"], [32, 1, 1, "", "combine_results"], [32, 1, 1, "", "compute_ap_over_iou_thresholds"], [32, 1, 1, "", "compute_average_precision"], [32, 1, 1, "", "compute_irm_penalty"], [32, 1, 1, "", "compute_segmentation_ap"], [32, 1, 1, "", "control_filelist"], [32, 1, 1, "", "convert_and_relabel_masks"], [32, 1, 1, "", "copy_images_to_consolidated"], [32, 1, 1, "", "correct_masks"], [32, 1, 1, "", "correct_metadata"], [32, 1, 1, "", "correct_metadata_column_names"], [32, 1, 1, "", "correct_paths"], [32, 1, 1, "", "count_reads_in_fastq"], [32, 1, 1, "", "create_circular_mask"], [32, 1, 1, "", "delete_folder"], [32, 1, 1, "", "delete_intermedeate_files"], [32, 1, 1, "", "dice_coefficient"], [32, 1, 1, "", "download_models"], [32, 1, 1, "", "extract_boundaries"], [32, 1, 1, "", "extract_features"], [32, 1, 1, "", "extract_tar_bz2_files"], [32, 1, 1, "", "filepaths_to_database"], [32, 1, 1, "", "fill_holes_in_mask"], [32, 1, 1, "", "filter_and_save_csv"], [32, 1, 1, "", "filter_columns"], [32, 1, 1, "", "filter_dataframe_features"], [32, 1, 1, "", "find_non_overlapping_position"], [32, 1, 1, "", "fishers_odds"], [32, 1, 1, "", "format_path_for_system"], [32, 1, 1, "", "generate_colors"], [32, 1, 1, "", "generate_cytoplasm_mask"], [32, 1, 1, "", "generate_fraction_map"], [32, 1, 1, "", "generate_image_path_map"], [32, 1, 1, "", "generate_path_list_from_db"], [32, 1, 1, "", "get_cuda_version"], [32, 1, 1, "", "get_db_paths"], [32, 1, 1, "", "get_files_from_dir"], [32, 1, 1, "", "get_ml_results_paths"], [32, 1, 1, "", "get_paths_from_db"], [32, 1, 1, "", "get_sequencing_paths"], [32, 1, 1, "", "get_submodules"], [32, 1, 1, "", "group_feature_class"], [32, 1, 1, "", "initiate_counter"], [32, 1, 1, "", "invert_image"], [32, 1, 1, "", "is_list_of_lists"], [32, 1, 1, "", "is_multiprocessing_process"], [32, 1, 1, "", "jaccard_index"], [32, 1, 1, "", "lasso_reg"], [32, 1, 1, "", "load_image"], [32, 1, 1, "", "load_image_paths"], [32, 1, 1, "", "load_settings"], [32, 1, 1, "", "map_condition"], [32, 1, 1, "", "mask_object_count"], [32, 1, 1, "", "match_masks"], [32, 1, 1, "", "measure_test_mode"], [32, 1, 1, "", "merge_dataframes"], [32, 1, 1, "", "merge_regression_res_with_metadata"], [32, 1, 1, "", "merge_touching_objects"], [32, 1, 1, "", "model_metrics"], [32, 1, 1, "", "normalize_src_path"], [32, 1, 1, "", "normalize_to_dtype"], [32, 1, 1, "", "pad_to_same_shape"], [32, 1, 1, "", "perform_statistical_tests"], [32, 1, 1, "", "pick_best_model"], [32, 1, 1, "", "plot_clusters"], [32, 1, 1, "", "plot_clusters_grid"], [32, 1, 1, "", "plot_embedding"], [32, 1, 1, "", "plot_grid"], [32, 1, 1, "", "plot_image"], [32, 1, 1, "", "plot_images_by_cluster"], [32, 1, 1, "", "plot_umap_images"], [32, 1, 1, "", "prepare_batch_for_segmentation"], [32, 1, 1, "", "preprocess_data"], [32, 1, 1, "", "preprocess_image"], [32, 1, 1, "", "print_progress"], [32, 1, 1, "", "process_masks"], [32, 1, 1, "", "process_vision_results"], [32, 1, 1, "", "random_forest_feature_importance"], [32, 1, 1, "", "recommend_target_layers"], [32, 1, 1, "", "reduction_and_clustering"], [32, 1, 1, "", "remove_canvas"], [32, 1, 1, "", "remove_highly_correlated_columns"], [32, 1, 1, "", "remove_intensity_objects"], [32, 1, 1, "", "remove_low_variance_columns"], [32, 1, 1, "", "remove_noise"], [32, 1, 1, "", "rename_columns_in_db"], [32, 1, 1, "", "reset_mp"], [32, 1, 1, "", "resize_images_and_labels"], [32, 1, 1, "", "resize_labels_back"], [32, 1, 1, "", "save_file_lists"], [32, 1, 1, "", "save_settings"], [32, 1, 1, "", "search_reduction_and_clustering"], [32, 1, 1, "", "setup_plot"], [32, 1, 1, "", "show_cam_on_image"], [32, 1, 1, "", "smooth_hull_lines"], [32, 1, 1, "", "split_my_dataset"]], "spacr.utils.Cache": [[32, 4, 1, "", "cache"], [32, 3, 1, "", "get"], [32, 4, 1, "", "max_size"], [32, 3, 1, "", "put"]], "spacr.utils.CustomCellClassifier": [[32, 3, 1, "", "custom_forward"], [32, 3, 1, "", "forward"]], "spacr.utils.EarlyFusion": [[32, 3, 1, "", "forward"]], "spacr.utils.FocalLossWithLogits": [[32, 3, 1, "", "forward"]], "spacr.utils.GradCAM": [[32, 3, 1, "", "forward"]], "spacr.utils.GradCAMGenerator": [[32, 3, 1, "", "compute_gradcam_and_predictions"], [32, 3, 1, "", "compute_gradcam_maps"], [32, 3, 1, "", "get_layer"], [32, 3, 1, "", "hook_layers"], [32, 3, 1, "", "percentile_normalize"], [32, 3, 1, "", "plot_activation_grid"]], "spacr.utils.IntegratedGradients": [[32, 3, 1, "", "generate_integrated_gradients"]], "spacr.utils.MultiScaleBlockWithAttention": [[32, 3, 1, "", "custom_forward"], [32, 3, 1, "", "forward"]], "spacr.utils.ResNet": [[32, 3, 1, "", "forward"], [32, 3, 1, "", "initialize_base"]], "spacr.utils.SaliencyMapGenerator": [[32, 3, 1, "", "compute_saliency_and_predictions"], [32, 3, 1, "", "compute_saliency_maps"], [32, 3, 1, "", "percentile_normalize"], [32, 3, 1, "", "plot_activation_grid"]], "spacr.utils.ScaledDotProductAttention": [[32, 3, 1, "", "forward"]], "spacr.utils.SelfAttention": [[32, 3, 1, "", "forward"]], "spacr.utils.SpatialAttention": [[32, 3, 1, "", "forward"]], "spacr.utils.TorchModel": [[32, 3, 1, "", "apply_dropout_rate"], [32, 3, 1, "", "forward"], [32, 3, 1, "", "get_num_ftrs"], [32, 3, 1, "", "get_weight_choice"], [32, 3, 1, "", "init_base_model"], [32, 3, 1, "", "init_spacr_classifier"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "terms": {"": [9, 23, 32], "0": [9, 10, 16, 23, 26, 30, 32], "0001": 10, "001": 32, "01": [26, 30, 32], "02": 32, "05": [10, 26], "1": [10, 16, 23, 26, 32], "10": [10, 23, 26, 32], "100": [10, 23, 32], "1000": 23, "10000": 24, "15": [10, 32], "16": 32, "1d": 26, "1st": 23, "2": [10, 16, 23, 32], "20": [10, 23], "224": [10, 16, 32], "25": [30, 32], "3": [10, 16, 23, 32], "30": 32, "32": 16, "4": 10, "5": [10, 18, 24, 32], "50": [10, 23, 32], "500x500": 23, "55": 32, "6": 32, "64": [10, 32], "65": 32, "7": 32, "75": 32, "8": [16, 23, 32], "85": 32, "9": [23, 30, 32], "95": 32, "98": [23, 32], "99": 23, "99th": 23, "A": [10, 16, 18, 23, 26, 32], "If": [16, 23, 32], "The": [10, 16, 18, 23, 26, 32], "_": 32, "__iter__": 16, "__next__": 16, "_metadata": 32, "_time": 23, "about": 26, "abov": 32, "accord": [26, 32], "accumul": 10, "accuraci": 23, "activ": [26, 32], "activation_correlations_to_databas": 32, "activation_map": 32, "activation_maps_to_databas": 32, "active_gene_list": 26, "ad": [18, 32], "adamw": 10, "add": [18, 32], "add_column_to_databas": 32, "add_images_to_tar": 32, "addit": [9, 16, 23, 26, 32], "adjust": 26, "adjust_cell_mask": 32, "after": [23, 26, 32], "against": 26, "aggreg": [10, 23], "all": [16, 23, 26, 32], "all_df": 32, "all_elements_match": 32, "all_label": [10, 32], "all_on_al": 23, "all_outlin": 23, "all_to_al": 23, "allow": 23, "along": 23, "alpha": [10, 26], "alpha_valu": 32, "alphabet": 23, "alreadi": 32, "amsgrad": 10, "an": [9, 18, 23, 26, 32], "analysi": [9, 15, 23, 26], "analyze_calcium_oscil": 30, "ani": [16, 23, 32], "annot": [26, 32], "annotate_condit": 32, "annotate_filter_vis": 10, "annotate_predict": 32, "annotated_class": 16, "annotation_column": 16, "anoth": [23, 32], "anova": 32, "anova_df": 32, "append": 26, "append_databas": 26, "appli": [23, 26, 32], "apply_augment": 16, "apply_dropout_r": 32, "apply_mask": 32, "apply_model": 10, "apply_model_to_tar": 10, "ar": [16, 23, 26, 32], "area": 26, "arg": [16, 23, 26, 32], "arr": 26, "arrai": [18, 23, 26, 32], "assai": 15, "assign_color": 32, "attempt": 32, "attent": 32, "auc": 26, "augment": [16, 32], "augment_class": 32, "augment_data": 16, "augment_dataset": 32, "augment_imag": 32, "augment_single_imag": 32, "augmented_dataset": 32, "augmented_imag": 32, "avail": [26, 32], "averag": 26, "avg": 26, "avg_cells_per_wel": 26, "avg_genes_per_wel": 26, "avg_reads_per_gen": 26, "avoid": 26, "ax": [23, 26, 30, 32], "axi": [9, 23, 26], "b": [10, 30], "background": 9, "balanc": 23, "bar": [9, 23, 26], "barecodes_reverse_compl": 24, "base": [9, 10, 16, 18, 23, 24, 26, 32], "base_dir": 23, "base_model_dict": 32, "base_path": 32, "baselin": 32, "batch": [16, 23, 32], "batch_siz": [10, 16, 32], "been": 16, "being": 26, "below": 32, "beta": 26, "between": [26, 32], "bin": 26, "bin_column": 23, "binari": [18, 32], "binary_cross_entropy_with_logit": [10, 32], "binwidth": 26, "bit": 16, "black": [9, 23], "black_background": [9, 32], "blue": 16, "blur_everi": 32, "bmp": 32, "bool": [9, 10, 16, 18, 23, 26, 32], "boolean": [23, 32], "bottom": 26, "boundari": 32, "boundary_f1_scor": 32, "box": 23, "bz2": 32, "c": [30, 32], "c1": [16, 32], "c2": [16, 32], "c3": 32, "cach": 32, "calcul": [26, 32], "calculate_activation_correl": 32, "calculate_i": 32, "calculate_loss": 32, "calculate_permutation_import": 26, "calculate_shortest_dist": 32, "cam_typ": 32, "can": 32, "canva": 9, "case": 32, "categor": 23, "categori": 23, "cell": [9, 18, 23, 26, 32], "cell_area": 30, "cell_channel": 23, "cell_channel_1_mean_intens": 30, "cell_cm": 26, "cell_df": 26, "cell_fold": 32, "cell_id": 18, "cell_level_roc_auc": 26, "cell_loc": 32, "cell_mask": [18, 32], "cell_png": 32, "cell_pr_dict": 26, "cell_pr_dict_df": 26, "cell_roc_dict": 26, "cell_roc_dict_df": 26, "cell_scor": 26, "center": 32, "chan_dict": [10, 32], "chang": 15, "channel": [10, 16, 18, 23, 32], "channel_of_interest": 32, "characterist": 26, "check": 32, "check_index": 32, "check_mask_fold": 32, "check_multicollinear": 32, "check_norm": 32, "check_overlap": 32, "check_set": 25, "checkpoint": [10, 32], "chi": 23, "chi2": 23, "chi_pairwis": 23, "choic": 32, "choos": 32, "choose_model": 32, "chosen": [23, 32], "chunk_data": 24, "chunk_siz": 24, "class": [10, 16, 23, 32], "class_data": 16, "class_metadata": 16, "class_nam": [10, 32], "class_visu": 32, "classif": [10, 26, 32], "classifi": [26, 32], "classification_metr": 32, "classifier_accuraci": 26, "classifier_v2": 26, "clean": 26, "cleanup": 16, "close": 32, "close_file_descriptor": 32, "close_multiprocessing_process": 32, "cluster": [9, 32], "cluster_cent": 32, "cluster_col": 32, "cluster_data": 32, "cluster_feature_analysi": 32, "cluster_imag": 32, "cluster_indic": 32, "cmap": [23, 26], "coef_df": 23, "coeff": 26, "coeffici": [23, 26], "col_to_compar": 9, "col_valu": 32, "color": [23, 26, 32], "colormap": 23, "column": [9, 18, 23, 26, 32], "column_csv": 24, "column_list": 32, "column_nam": 32, "columnid": [16, 32], "com": 26, "combin": [16, 26, 32], "combine_result": 32, "combineddataset": 16, "combineload": 16, "common": 32, "comp_level": 24, "comp_typ": 24, "compar": 9, "compare_group": 23, "comparison": [23, 32], "comparison_result": 23, "comparison_titl": 23, "compart": 32, "compat": 32, "compon": 18, "comput": [26, 32], "compute_ap_over_iou_threshold": 32, "compute_average_precis": 32, "compute_gradcam_and_predict": 32, "compute_gradcam_map": 32, "compute_irm_penalti": 32, "compute_precision_recal": 26, "compute_roc_auc": 26, "compute_saliency_and_predict": 32, "compute_saliency_map": 32, "compute_segmentation_ap": 32, "compute_smooth_grad": 10, "concatenate_and_norm": 16, "condit": [26, 32], "confus": 26, "connect": 32, "consid": [16, 23], "consolid": 32, "constant": 26, "contain": [9, 10, 16, 18, 23, 26, 32], "content": 26, "conting": 23, "contour": 23, "control": [9, 26], "control_filelist": 32, "control_gene_list": 26, "convert": [16, 32], "convert_and_relabel_mask": 32, "convert_numpy_to_tiff": 16, "convert_separate_files_to_yokogawa": 16, "convert_to_yokogawa": 16, "copi": 32, "copy_images_to_consolid": 32, "correct_mask": 32, "correct_metadata": 32, "correct_metadata_column_nam": 32, "correct_path": 32, "correctli": [26, 32], "correl": [9, 26, 32], "correspond": [9, 16, 23, 32], "count": [23, 26, 32], "count_reads_in_fastq": 32, "counter_": 32, "cpu": 10, "creat": [23, 26, 32], "create_circular_mask": 32, "create_consensu": 24, "create_databas": 26, "create_grouped_plot": 23, "create_plot": 23, "create_venn_diagram": 23, "crispr": 15, "criteria": 32, "crop": 18, "crop_mod": 32, "csv": [23, 32], "csv_file": [23, 24], "csv_file_path": 32, "csv_loc": 32, "csv_path": 32, "current": [10, 32], "current_posit": 32, "curv": 26, "custom": 32, "custom_forward": 32, "customcellclassifi": 32, "cytoplasm": [9, 30, 32], "cytoplasm_mask": 32, "czi": 32, "d_k": 32, "data": [9, 10, 16, 23, 26, 32], "data_column": 23, "data_df": [10, 32], "data_load": 10, "data_set": 32, "databas": [9, 26, 32], "datafram": [9, 10, 18, 23, 26, 32], "dataload": [10, 16], "dataset": [16, 32], "db_loc": 30, "db_path": [16, 26, 32], "dbscan": [9, 32], "dbscan_param": 9, "debug": 32, "decai": 10, "deep_spacr_default": 25, "default": [9, 10, 16, 23, 26, 32], "default_settings_analyze_percent_posit": 25, "defin": [26, 32], "degre": [23, 26], "delai": 32, "delet": 16, "delete_empty_subdirectori": 16, "delete_fold": 32, "delete_intermedeate_fil": 32, "depend": [26, 32], "depth": 16, "descriptor": 32, "destin": 10, "detect": [9, 16], "determin": [23, 26, 32], "deviat": [23, 26], "devic": [10, 32], "df": [23, 24, 26, 30, 32], "df_correl": 32, "df_l": 26, "diagram": 23, "dice_coeffici": 32, "dict": [9, 10, 16, 18, 23, 26, 32], "dictionari": [9, 10, 16, 18, 26, 32], "differ": [9, 26], "dilation_radiu": 32, "dimens": 23, "dimension": [9, 32], "dir_path": 32, "direct": 16, "directori": [9, 16, 23, 26, 32], "displai": [9, 18, 23, 26, 32], "dist": 26, "dist_gen": 26, "distanc": [26, 32], "distribut": [26, 32], "do": 23, "dof": 23, "dot": [9, 32], "dot_siz": [9, 32], "download": 32, "download_model": 32, "dropout": [10, 32], "dropout_r": [10, 32], "dst": [10, 16, 18, 23, 32], "dtype": [10, 32], "dummi": 32, "dummy_w": 32, "dure": [10, 32], "e": [9, 32], "each": [10, 16, 18, 23, 26, 32], "earli": 32, "earlyfus": 32, "edg": 32, "einarolafsson": 32, "either": [23, 32], "element": [26, 32], "embed": [9, 32], "embedding_by_control": 9, "empti": 16, "end": 24, "ensur": [23, 26, 32], "entir": [23, 32], "entri": [16, 26, 32], "ep": 32, "epoch": [10, 32], "epsilon": 32, "eq": 26, "equal": [23, 26], "error": [9, 23, 26], "error_bar_typ": [9, 23], "etc": [9, 16, 23], "evalu": 10, "evaluate_model_perform": 10, "everyon": 26, "exclud": [9, 26, 32], "exhaust": 16, "exist": 32, "expect": 23, "expected_end": 24, "expected_typ": 25, "experi": 26, "exponential_decai": 30, "export": 23, "export_tiff": 23, "extens": [23, 32], "extract": [23, 32], "extract_boundari": 32, "extract_featur": 32, "extract_sequence_and_qu": 24, "extract_tar_bz2_fil": 32, "f1": 26, "f1_score": 26, "face": 32, "failur": 32, "fals": [9, 10, 16, 18, 23, 24, 26, 30, 32], "faster": 16, "fastq": 16, "fastq_fil": 32, "featur": [26, 32], "feature_group": 32, "feature_importance_df": 23, "fig": [9, 18, 23, 26, 30], "figur": [9, 18, 23, 26], "figure_numb": 30, "figures": [9, 23, 32], "file": [9, 16, 23, 26, 32], "file1": 23, "file2": 23, "file_extens": 32, "file_metadata": 32, "file_nam": 32, "file_path": 32, "file_typ": 23, "filenam": [23, 32], "filepath": 16, "filepaths_to_databas": 32, "files_process": 32, "files_to_process": 32, "fill": [23, 32], "fill_holes_in_mask": 32, "fill_na": 24, "filter": [9, 23, 26, 32], "filter_and_save_csv": 32, "filter_bi": [9, 32], "filter_coeff": 23, "filter_column": [23, 32], "filter_dataframe_featur": 32, "filter_dict": 23, "filter_valu": 23, "filtered_df": 32, "final": 23, "find_non_overlapping_posit": 32, "first": [23, 32], "fishers_odd": 32, "fit": 32, "flag": [18, 23, 26, 32], "float": [9, 10, 16, 23, 26, 32], "float32": 16, "flow": 23, "fluctuation_threshold": 30, "focallosswithlogit": 32, "folder": [9, 16, 18, 23, 32], "folder_path": [16, 32], "follow": [9, 26, 32], "forest": 32, "format": [16, 32], "format_path_for_system": 32, "forward": 32, "fpr": 26, "fraction": [16, 26], "freedom": 23, "frequenc": 23, "from": [9, 16, 23, 26, 32], "full": 23, "function": [9, 10, 23, 32], "fusion": 32, "g": [9, 10, 32], "gamma": 26, "gene": [23, 26], "gene_column": [23, 32], "gene_fraction_map": 26, "gene_ineq_coeff": 26, "gener": [9, 16, 23, 26, 32], "generate_activation_map": 10, "generate_barecode_map": 24, "generate_cellpose_mask": 9, "generate_cellpose_train_set": 18, "generate_cellpose_train_test": 16, "generate_color": 32, "generate_cytoplasm_mask": 32, "generate_dataset": 16, "generate_dataset_from_list": 16, "generate_field": 25, "generate_float": 26, "generate_fraction_map": 32, "generate_gene_list": 26, "generate_gene_weight": 26, "generate_image_path_map": 32, "generate_image_umap": 9, "generate_integ": 26, "generate_integrated_gradi": 32, "generate_load": 16, "generate_mask_random_cmap": 23, "generate_mediar_mask": 9, "generate_paramit": 26, "generate_path_list_from_db": 32, "generate_plate_heatmap": 23, "generate_plate_map": 26, "generate_power_law_distribut": 26, "generate_screen_graph": 9, "generate_shap_summary_plot": 26, "generate_training_dataset": 16, "generate_well_scor": 26, "genes_per_well_df": 26, "get": [18, 32], "get_analyze_plaque_set": 25, "get_analyze_reads_default_set": 25, "get_analyze_recruitment_default_set": 25, "get_check_cellpose_models_default_set": 25, "get_compon": 18, "get_consensus_bas": 24, "get_cuda_vers": 32, "get_db_path": 32, "get_default_apply_cellpose_model_set": 25, "get_default_generate_activation_map_set": 25, "get_default_test_cellpose_model_set": 25, "get_figur": 23, "get_files_from_dir": 32, "get_identify_masks_finetune_default_set": 25, "get_lay": 32, "get_map_barcodes_default_set": 25, "get_measure_crop_set": 25, "get_ml_results_path": 32, "get_num_ftr": 32, "get_object_count": 18, "get_optimum_threshold": 26, "get_paths_from_db": 32, "get_perform_regression_default_set": 25, "get_plat": 16, "get_result": 23, "get_sequencing_path": 32, "get_submodul": 32, "get_train_cellpose_default_set": 25, "get_train_test_model_set": 25, "get_weight_choic": 32, "gif": 26, "gini": 26, "gini_coeffici": 26, "gini_gene_wel": 26, "given": [9, 10, 18, 23, 26, 32], "gradcam": 32, "gradcamgener": 32, "gradient": 10, "gradient_accumul": 10, "gradient_accumulation_step": 10, "graph": [9, 23], "graph_import": 23, "graph_nam": 23, "graph_sequencing_stat": 24, "graph_typ": [9, 23], "grayscal": [16, 32], "greater": 32, "green": 16, "grid": [18, 23, 26], "grna_csv": 24, "grna_nam": 23, "group": [9, 23, 26, 30], "group_column": 23, "group_feature_class": 32, "grouping_column": 23, "grouping_var": 26, "gz": 16, "h": 32, "ha": [26, 32], "handl": 32, "have": [16, 26, 32], "hdf5_file": 24, "heatmap": 26, "height": 32, "help": 26, "helper": 32, "high": [15, 32], "highli": [9, 32], "histogram": 26, "hit": 26, "hoc": 23, "hole": 32, "hook_lay": 32, "host": 32, "htm": 26, "http": 26, "hug": 32, "hyperparamet": 9, "i": [15, 23, 26, 32], "id": [26, 32], "ident": 9, "imag": [9, 15, 16, 18, 23, 26, 32], "image_fold": 32, "image_nr": [9, 32], "image_path": [23, 32], "image_path_map": 32, "image_paths_df": 32, "image_posit": 32, "image_s": [10, 16, 32], "image_typ": 32, "imagenet": 10, "images_by_kei": 16, "img": 32, "img_fold": 23, "img_list_to_grid": 18, "img_path": [16, 18, 32], "img_siz": 32, "img_zoom": 32, "import": [26, 32], "improv": 26, "in_channel": 32, "includ": [9, 23, 26, 32], "incom": 26, "index": 26, "indic": [23, 26, 32], "individu": 26, "inequ": 26, "infected_vs_noninfect": 30, "infer": 32, "inferno": [23, 26], "inform": [16, 26, 32], "init_base_model": 32, "init_spacr_classifi": 32, "init_weight": [10, 32], "initi": [10, 32], "initialize_bas": 32, "initiate_count": 32, "input": [16, 23, 26, 32], "input_csv": 32, "input_root": 16, "input_tensor": [10, 32], "instal": 32, "int": [9, 10, 16, 23, 26, 32], "int64": 32, "integ": 32, "integrated_grad": 10, "integratedgradi": 32, "intens": [16, 32], "intensity_threshold": 32, "interest": 32, "intermedeate_sav": 10, "intermedi": 10, "introduc": 26, "invari": 32, "invert_imag": 32, "iou_threshold": 32, "irm": 32, "is_act": 26, "is_grayscal": 32, "is_list_of_list": 32, "is_multiprocessing_process": 32, "is_norm": 23, "iter": 16, "its": [18, 26, 32], "itself": 16, "jaccard_index": 32, "jitter": 23, "jitter_box": 23, "jitterplot_by_annot": 23, "job": 32, "jpeg": 32, "jpg": 32, "k": 32, "keep": [23, 32], "kei": [9, 16, 24, 32], "kmean": [9, 32], "kmeans_param": 9, "kruskal": 32, "kruskal_df": 32, "kwarg": [10, 16, 32], "l": 32, "l2_reg": 32, "label": [10, 18, 23, 26, 30, 32], "lasso": 32, "lasso_reg": 32, "later": 18, "law": 26, "layer": 32, "layout": 26, "learn": 10, "learning_r": [10, 32], "legend": 26, "length": 26, "less": 32, "level": [23, 26], "leven": 23, "lif": 32, "like": 26, "likelihood": 26, "limit": [9, 16], "line": [9, 23, 26], "linestyl": 30, "list": [9, 10, 16, 18, 23, 26, 32], "list1": 32, "list2": 32, "listedcolormap": 23, "load": [10, 16, 23, 32], "load_imag": [16, 32], "load_image_path": 32, "load_images_from_path": 16, "load_set": 32, "loader": [10, 16, 32], "loader_it": 16, "loader_nam": [10, 32], "loader_name_list": 10, "local": 32, "locat": [26, 32], "lock_": 32, "log": [9, 26, 32], "log_data": [9, 32], "log_i": 23, "log_x": 23, "logarithm": 26, "logit": 32, "look": 16, "loss": [10, 32], "loss_typ": [10, 32], "low": 32, "lower": [23, 32], "lower_percentil": [23, 32], "lower_threshold": 32, "lr": 10, "mander": 32, "manders_threshold": 32, "map": [18, 26, 32], "map_condit": 32, "map_sequences_to_nam": 24, "marker": 30, "mask": [9, 18, 23, 32], "mask1": [23, 32], "mask2": [23, 32], "mask3": 23, "mask_fldr": 32, "mask_fold": [23, 32], "mask_object_count": 32, "mask_pr": 32, "mask_tru": 32, "match": 32, "match_column": 32, "match_mask": 32, "matplotlib": [18, 23, 26], "matrix": 26, "max": 23, "max_attempt": 32, "max_jitt": 32, "max_nr": 23, "max_siz": [23, 32], "maximum": [16, 23, 32], "maxvit_t": 10, "mean": [9, 10, 23, 26, 32], "mean_pr": 32, "measur": [9, 26, 30, 32], "measure_crop": 18, "measure_test_mod": 32, "mechan": 32, "median": 23, "mediarpredictor": 9, "memori": [16, 32], "merg": [23, 32], "merge_datafram": 32, "merge_regression_res_with_metadata": 32, "merge_touching_object": 32, "merged_df": 32, "metadata": 26, "metadata_fil": 32, "metadata_type_bi": 16, "method": [9, 16, 32], "metric": [10, 26, 32], "min": 23, "min_count": 23, "min_dist": 32, "min_frequ": 32, "min_max": 23, "min_object": 18, "min_sampl": 32, "minim": [23, 32], "minimum": 32, "mip": 16, "miss": 32, "mix": 32, "mlr": 32, "mode": [16, 23, 32], "model": [10, 32], "model_fus": 10, "model_knowledge_transf": 10, "model_metr": 32, "model_nam": 10, "model_path": [10, 32], "model_typ": [10, 32], "modif": 23, "modul": 15, "morphologi": 32, "move": 32, "multicollinear": 32, "multipl": [16, 23, 26], "multiprocess": 32, "multiscaleblockwithattent": 32, "must": 26, "n_cluster": 32, "n_job": [10, 16, 24, 32], "n_neighbor": [9, 32], "n_repeat": 26, "n_sampl": 10, "name": [9, 10, 16, 23, 26, 32], "name_column": 23, "name_split": 23, "nan": [23, 32], "nc": [16, 32], "nd2": 32, "ndarrai": [18, 23, 26, 32], "necessari": 26, "neg": [9, 26, 32], "negative_mean": 26, "negative_vari": 26, "neighbor": [9, 32], "nest": 32, "new": [18, 32], "new_dtyp": 32, "new_image_path": 32, "new_path": 32, "new_stack": 32, "next": 16, "nn": [10, 32], "noclassdataset": 16, "non": [23, 32], "none": [9, 10, 16, 18, 23, 24, 25, 26, 30, 32], "nonparametric_method": 26, "normal": [10, 16, 23, 26, 32], "normalize_and_visu": 23, "normalize_arrai": 26, "normalize_src_path": 32, "normalize_to_dtyp": 32, "normalized_distribut": 26, "normalized_imag": 23, "np": [23, 32], "npy": [23, 32], "npz": [9, 23], "nr": 23, "nr_plate": 26, "nuclei": 32, "nuclei_fold": 32, "nucleu": [9, 18, 23, 32], "nucleus_channel": 23, "nucleus_df": 18, "nucleus_mask": [18, 32], "null": 32, "num_class": 32, "num_clust": 32, "num_el": 26, "num_iter": 32, "num_lin": 30, "num_object": 23, "num_pred_mask": 32, "num_step": 32, "num_true_mask": 32, "number": [9, 10, 16, 23, 26, 32], "number_of_all_gen": 26, "number_of_gen": 26, "numer": 32, "numeric_data": 32, "numpi": [16, 23, 26, 32], "o": 30, "object": [9, 10, 16, 18, 23, 26, 32], "object1": 32, "object2": 32, "object_typ": 9, "observ": 23, "offset_start": 24, "one": [16, 23, 26, 32], "onli": [26, 32], "oper": [16, 26, 32], "operation_typ": 32, "optim": [10, 26], "optimizer_typ": 10, "optimum": 26, "option": [10, 16, 18, 23, 26, 32], "order": 23, "ordereddict": 32, "orig_dim": 32, "origin": [9, 23, 26, 32], "original_image_path": 32, "original_path": 32, "other": [26, 32], "other_posit": 32, "otherwis": 32, "outlier": 23, "outlin": [9, 23], "output": [9, 23, 26, 32], "output_csv": 32, "output_dir": 23, "output_path": 23, "output_valu": 32, "overal": 23, "overlai": [23, 32], "overlap": [23, 26, 32], "overlap_threshold": 32, "overlay_masks_on_imag": 23, "own": 32, "p": 23, "p1": 32, "p2": 32, "packag": 32, "pad": 23, "pad_to_same_shap": 32, "pair": 23, "paired_read_chunked_process": 24, "pairwis": [23, 32], "pairwise_result": 23, "panda": [10, 26, 32], "parallel": [26, 32], "paramet": [9, 10, 16, 18, 23, 26, 32], "parasit": 32, "parasite_fold": 32, "pars": 16, "parse_gz_fil": 16, "partial": [18, 26], "partial_result": 18, "pass": 32, "pastel": [9, 23], "path": [9, 10, 16, 18, 23, 26, 32], "pathogen": [9, 18, 23, 30, 32], "pathogen_channel": 23, "pathogen_df": [18, 30], "pathogen_loc": 32, "pathogen_mask": 18, "paths_chunk": 32, "pc": [16, 32], "pd": [9, 23, 26], "pdf": [9, 23, 26], "peak_details_df": 30, "peak_height": 30, "pearson": 32, "penalti": 32, "per": 26, "percentag": 32, "percentil": [23, 32], "percentile_list": 32, "percentile_norm": 32, "perfect": 26, "perform": [9, 10, 23, 32], "perform_levene_test": 23, "perform_normality_test": 23, "perform_posthoc_test": 23, "perform_statistical_test": [23, 32], "perimet": 32, "perimeter_threshold": 32, "permut": 26, "permutation_df": 23, "perplex": 32, "phenotyp": 15, "phenotyp_col": 32, "pick_best_model": 32, "pil": 32, "pin": 16, "pin_memori": 16, "plate": 26, "plate_map": 26, "plate_numb": 23, "plateid": 23, "plot": [9, 18, 26, 32], "plot_activation_grid": 32, "plot_arrai": 23, "plot_by_clust": 32, "plot_clust": 32, "plot_clusters_grid": 32, "plot_comparison_result": 23, "plot_confusion_matrix": 26, "plot_correlation_matrix": 26, "plot_data": 30, "plot_data_from_csv": 23, "plot_data_from_db": 23, "plot_embed": 32, "plot_feature_import": [23, 26], "plot_grid": 32, "plot_histogram": [23, 26], "plot_imag": [9, 32], "plot_image_grid": 23, "plot_image_mask_overlai": 23, "plot_images_and_arrai": 23, "plot_images_by_clust": 32, "plot_lorenz_curv": 23, "plot_mask": 23, "plot_merg": 23, "plot_object_outlin": 23, "plot_outlin": [9, 32], "plot_partial_depend": 26, "plot_permut": 23, "plot_plat": 23, "plot_point": [9, 32], "plot_proportion_stacked_bar": 23, "plot_region": 23, "plot_res": 23, "plot_resize_v1": 23, "plot_roc_pr": 26, "plot_simul": 26, "plot_titl": 23, "plot_umap_imag": 32, "png": [18, 23, 32], "png_channel": 18, "png_df": 32, "po": [9, 32], "point": 9, "pointsiz": 9, "poisson": 26, "popul": 26, "posit": [9, 10, 26, 32], "positive_mean": 26, "positive_vari": 26, "possibl": 26, "post": 23, "power": 26, "power_law_dist_gen": 26, "pr": 26, "prauc": 26, "prc": 23, "prc_column": 23, "pre": 32, "precis": 26, "precomput": 32, "pred_mask": 32, "predict": [10, 26, 32], "prediction_pos_prob": [10, 32], "predictor": 32, "prefix": 32, "prepare_batch_for_segment": 32, "prepare_cellpose_dataset": 16, "preprocess": [23, 32], "preprocess_data": [23, 32], "preprocess_generate_mask": 9, "preprocess_imag": 32, "preprocess_img_data": 16, "preprocess_pathogen_data": 30, "preserv": [16, 32], "pretrain": [10, 32], "print": [9, 16, 23, 26, 32], "print_mask_and_flow": 23, "print_object_numb": 23, "print_progress": 32, "probabl": [10, 26, 32], "process": [9, 16, 18, 32], "process_chunk": 24, "process_instruct": 16, "process_mask": 32, "process_meassure_crop_result": 18, "process_non_tif_non_2d_imag": 16, "process_vision_result": 32, "product": 32, "project": 16, "properli": 32, "proport": 23, "provid": [18, 26, 32], "put": 32, "python": 15, "q": [25, 32], "q1": 23, "q2": 23, "qc_csv_file": 24, "qc_df": 24, "qual1": 24, "qual2": 24, "qualiti": 24, "quantifi": 15, "queri": 32, "r": 10, "r1": 16, "r1_file": 24, "r2": 16, "r2_file": 24, "radiu": 32, "rais": [16, 32], "random": [23, 32], "random_cmap": 23, "random_color": 32, "random_forest_feature_import": 32, "randomforestregressor": 26, "randomli": [23, 26], "rate": [10, 26, 32], "ratio": 32, "raw_count": 23, "rc": 24, "read": [9, 16, 23, 26, 32], "read_and_plot__vision_result": 23, "read_plot_model_stat": 16, "read_simulations_t": 26, "recal": 26, "receiv": 26, "recommend_target_lay": 32, "recurs": 32, "reduc": 32, "reducer_hyperparameter_search": 9, "reduct": [9, 32], "reduction_and_clust": 32, "reduction_method": [9, 32], "reduction_param": [9, 32], "refer": 26, "refine_model": 32, "reflect": 32, "reformat": 32, "reg_cm": 26, "reg_pr_dict_df": 26, "reg_roc_dict_df": 26, "reg_typ": 32, "regex": [16, 24], "regress": 26, "regression_roc_auc": 26, "relabel": 32, "remain": 32, "remov": [9, 23, 26, 32], "remove_canva": 32, "remove_columns_with_single_valu": 26, "remove_constant_column": 26, "remove_highly_correl": [9, 32], "remove_highly_correlated_column": 32, "remove_highly_correlated_featur": 32, "remove_image_canva": [9, 32], "remove_intensity_object": 32, "remove_kei": 23, "remove_low_variance_column": 32, "remove_low_variance_featur": 32, "remove_nois": 32, "remove_outli": 23, "remove_outliers_from_plot": 23, "remove_transi": 30, "renam": 32, "rename_columns_in_db": 32, "repo_id": 32, "repositori": 32, "repres": [18, 26, 32], "represent": [9, 23, 32], "reset_mp": 32, "resiz": 23, "resize_images_and_label": 32, "resize_labels_back": 32, "resized_imag": 23, "resized_label": 23, "resnet": 32, "resnet50": 32, "resourc": 32, "result": [9, 10, 18, 23, 26, 32], "result_df": 30, "results_df": 26, "results_fil": 32, "results_nam": 30, "retain": [16, 32], "retri": 32, "return": [9, 10, 16, 18, 23, 26, 32], "return_model": 32, "reverse_compl": 24, "rf_df": 32, "risk": 32, "roc": 26, "root": 32, "root_fold": 32, "rotat": [26, 32], "row": [9, 26, 32], "row_csv": 24, "row_limit": 9, "run": [26, 32], "run_and_sav": 26, "run_experi": 26, "run_multiple_simul": 26, "run_simul": 26, "salienc": 32, "saliencymapgener": 32, "same": [26, 32], "sampl": [9, 16, 32], "sample_s": 9, "save": [9, 10, 16, 18, 23, 26, 32], "save_al": 26, "save_and_add_image_to_grid": 18, "save_data": 26, "save_df_to_hdf5": 24, "save_dir": 10, "save_dtyp": 16, "save_figur": [9, 18, 30], "save_file_list": 32, "save_h5": 24, "save_integrated_grad": 10, "save_path": [10, 23], "save_pdf": 23, "save_plot": 26, "save_qc_df_to_csv": 24, "save_queu": 24, "save_results_datafram": 30, "save_set": 32, "save_shap_plot": 26, "save_smooth_grad": 10, "save_unique_combinations_to_csv": 24, "saver_process": 24, "scale": [26, 32], "scaleddotproductattent": 32, "scan": 32, "scatter": 9, "schedul": 10, "score": 26, "screen": [9, 15], "scrollable_fram": 25, "sd": 26, "sd_cells_per_wel": 26, "sd_genes_per_wel": 26, "sd_reads_per_gen": 26, "search": 9, "search_reduction_and_clust": 32, "second": [23, 32], "segment": 32, "select": [23, 26, 32], "selectchannel": 32, "self": 32, "selfattent": 32, "sem": [9, 23], "separ": [23, 26, 32], "seq": 24, "seq1": 24, "seq2": 24, "sequenc": 26, "sequence_pl": 26, "sequencing_error": 26, "seri": 32, "set": [9, 10, 16, 18, 23, 24, 26, 32], "set_analyze_class_proportion_default": 25, "set_analyze_endodyogeny_default": 25, "set_annotate_default_set": 25, "set_default_analyze_screen": 25, "set_default_generate_barecode_map": 25, "set_default_plot_merge_set": 25, "set_default_settings_preprocess_generate_mask": 25, "set_default_settings_preprocess_img_data": 25, "set_default_train_test_model": 25, "set_default_umap_image_set": 25, "set_generate_dataset_default": 25, "set_generate_training_dataset_default": 25, "set_graph_importance_default": 25, "set_interperate_vision_model_default": 25, "setting_kei": 32, "setting_valu": 32, "settings_kei": 32, "settings_valu": 32, "setup_plot": 32, "shap": 26, "shape": 32, "share": 32, "shortest": 32, "should": 26, "show": [16, 23, 32], "show_cam_on_imag": 32, "show_everi": 32, "show_exampl": 32, "shuffl": 16, "shuffle_dataset": 16, "signific": 26, "sim_param": 26, "sim_stat": 26, "simul": 26, "singl": [16, 32], "single_read_chunked_process": 24, "size": [9, 16, 23, 32], "size_filt": 30, "smooth": 9, "smooth_grad": 10, "smooth_hull_lin": 32, "smooth_lin": [9, 32], "smoothgrad": 10, "sne": 32, "sourc": [9, 10, 16, 18, 23, 24, 25, 26, 30, 32], "source_fold": 32, "spacr": [9, 10, 16, 18, 23, 24, 25, 26, 30, 32], "spacrdataload": 16, "spacrdataset": 16, "spacrgraph": 23, "spatial": [15, 32], "spatialattent": 32, "special": 32, "specifi": [10, 16, 23, 26, 32], "split": [16, 32], "split_char": 32, "split_my_dataset": 32, "split_ratio": 32, "sqlite": [26, 32], "squar": 23, "src": [9, 10, 16, 18, 23, 26, 30, 32], "stack": [23, 32], "standard": [23, 26], "start": [9, 24, 26], "stat0206_wmf": 26, "statist": [23, 26], "statsdirect": 26, "std": [9, 23], "stdev_spread": 10, "step": [10, 26], "stop": 26, "stopiter": 16, "store": [26, 32], "str": [9, 10, 16, 18, 23, 26, 32], "stratif": 23, "string": 32, "structur": 32, "student_model_nam": 10, "student_save_path": 10, "style": 16, "subdirectori": 16, "subfold": 32, "subplot": 23, "subset": [26, 32], "suffix": 32, "summar": 9, "summari": [23, 26], "summarize_per_wel": 30, "summarize_per_well_inf_non_inf": 30, "summary_func": [9, 23], "system": 32, "t": 32, "tabl": [9, 23, 26, 32], "table_nam": [26, 32], "take": 32, "tar": 32, "tar_path": 32, "target": [26, 32], "target_class": 10, "target_height": 32, "target_i": 32, "target_label_idx": [10, 32], "target_lay": 32, "target_sequ": 24, "target_vari": 26, "target_width": 32, "tarimagedataset": 16, "teacher_path": 10, "temperatur": 10, "tensor": 32, "test": [9, 10, 16, 23, 24, 32], "test_load": 10, "test_model_cor": 10, "test_model_perform": 10, "test_split": 16, "text": 26, "than": 32, "thei": [26, 32], "them": [16, 23, 32], "theme": [9, 23], "thi": 32, "thick": 23, "thread": 16, "threshold": [10, 23, 26, 32], "throughput": 15, "tif": [23, 32], "tiff": [16, 23, 32], "time": 26, "time_l": [26, 32], "titl": [18, 23, 26], "toolkit": 15, "torch": [10, 32], "torchmodel": 32, "torchvis": 32, "total": [26, 32], "total_imag": 32, "total_sim": 26, "touch": 32, "tpr": 26, "train": [10, 16, 26, 32], "train_file_path": 16, "train_fract": 16, "train_load": [10, 16], "train_model": 10, "train_test_model": 10, "training_dataset_from_annot": 16, "training_dataset_from_annotation_metadata": 16, "transfer": 16, "transform": [9, 32], "transience_threshold": 30, "treat": 26, "treatment": 32, "treatment_loc": 32, "true": [10, 16, 23, 26, 30, 32], "true_mask": 32, "tsne": [9, 32], "tupl": [10, 18, 26, 32], "two": [18, 23, 32], "type": [9, 10, 16, 18, 23, 26, 32], "uint16": 32, "umap": [9, 32], "under": 26, "uniqu": [23, 26, 32], "unique_combin": 24, "unique_combinations_csv": 24, "unique_group": 23, "unique_label": 32, "unus": 23, "updat": [18, 26, 32], "update_column": 32, "update_scores_and_get_cm": 26, "upper": [23, 32], "upper_percentil": [23, 32], "upper_threshold": 32, "us": [9, 10, 16, 23, 26, 32], "use_checkpoint": [10, 32], "use_cuda": 32, "util": [10, 23], "v": [26, 32], "val_file_path": 16, "val_load": [10, 16], "valid": [10, 16, 26, 32], "valid_extens": 32, "validate_and_adjust_beta_param": 26, "validation_split": 16, "valu": [9, 16, 23, 26, 32], "value_column": 23, "valueerror": 32, "var": 32, "variabl": [23, 25, 26], "varianc": [23, 26, 32], "variou": [23, 26], "vars_dict": 25, "vector": 32, "venn": 23, "verbos": [9, 10, 16, 23, 26, 30, 32], "vertic": 26, "vif": 32, "violin": 23, "viridi": 23, "vis_dist": 26, "visual": [9, 15, 23, 26, 32], "visualize_al": 26, "visualize_cellpose_mask": 23, "visualize_class": 10, "visualize_integrated_gradi": 10, "visualize_mask": 23, "visualize_smooth_grad": 10, "volcano_plot": 23, "w": 32, "wa": 32, "walli": 32, "weight": [10, 26, 32], "weight_decai": 10, "well": [9, 23, 26], "well_ineq_coeff": 26, "well_scor": 26, "wells_per_gene_df": 26, "where": [16, 23, 26, 32], "whether": [9, 10, 16, 23, 26, 32], "which": [16, 26, 32], "while": [26, 32], "whole": 32, "width": [26, 32], "within": [23, 32], "worker": 16, "www": 26, "x": [23, 26, 30, 32], "x_column": 23, "x_label": 26, "x_lim": 23, "x_rotat": 26, "xgboost": 32, "y": [9, 23, 26, 32], "y_axi": 23, "y_axis_start": 9, "y_column": 23, "y_label": 26, "y_lim": 23, "yokogawa": 16, "zero": 32, "zlib": 24}, "titles": ["__main__ module", "app_annotate module", "app_classify module", "app_make_masks module", "app_mask module", "app_measure module", "app_sequencing module", "app_umap module", "chat_bot module", "core module", "deep_spacr module", "gui module", "gui_core module", "gui_elements module", "gui_utils module", "Welcome to SpaCr", "io module", "logger module", "measure module", "mediar module", "ml module", "Modules", "openai module", "plot module", "sequencing module", "settings module", "sim module", "sp_stats module", "spacr_cellpose module", "submodules module", "timelapse module", "toxo module", "utils module", "version module"], "titleterms": {"__main__": 0, "app_annot": 1, "app_classifi": 2, "app_make_mask": 3, "app_mask": 4, "app_measur": 5, "app_sequenc": 6, "app_umap": 7, "chat_bot": 8, "core": 9, "deep_spacr": 10, "gui": 11, "gui_cor": 12, "gui_el": 13, "gui_util": 14, "io": 16, "logger": 17, "measur": 18, "mediar": 19, "ml": 20, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "openai": 22, "plot": 23, "sequenc": 24, "set": 25, "sim": 26, "sp_stat": 27, "spacr": 15, "spacr_cellpos": 28, "submodul": 29, "timelaps": 30, "toxo": 31, "util": 32, "version": 33, "welcom": 15}})